---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mk8s-prometheus-operator
  namespace: argocd
spec:
  project: base-infra
  sources:
   - repoURL: https://prometheus-community.github.io/helm-charts
     targetRevision: 70.10.0
     chart: kube-prometheus-stack
     helm:
       releaseName: prom-stack
       values: |
         defaultRules:
           rules:
             kubeSchedulerRecording: false
             kubeSchedulerAlerting: false
             kubeControllerManager: false
             kubeProxy: false
         prometheus:
           prometheusSpec:
             externalUrl: https://prometheus.pukara.dev
         alertmanager:
           alertmanagerSpec:
             externalUrl: https://alertmanager.pukara.dev
           config:
             route:
               routes:
                 # - receiver: 'null'
                 #   matchers:
                 #     - alertname="Watchdog" # Ignore Watchdog alerts
                 - receiver: "slack-notifications"
                   continue: true
             receivers:
               - name: 'null'
               - name: 'slack-notifications'
                 slack_configs:
                 - channel: '#platform-alerts'
                   api_url: https://hooks.slack.com/services/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
                   send_resolved: true
                   icon_url: https://avatars3.githubusercontent.com/u/3380462
                   title: '{{ template "slack.monzo.title" . }}'
                   icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
                   color: '{{ template "slack.monzo.color" . }}'
                   text: '{{ template "slack.monzo.text" . }}'
                   actions:
                   - type: button
                     text: 'Runbook :green_book:'
                     url: '{{ (index .Alerts 0).Annotations.runbook }}'
                   - type: button
                     text: 'Query :mag:'
                     url: '{{ (index .Alerts 0).GeneratorURL }}'
                   - type: button
                     text: 'Dashboard :grafana:'
                     url: '{{ (index .Alerts 0).Annotations.dashboard }}'
                   - type: button
                     text: 'Silence :no_bell:'
                     url: '{{ template "__alert_silence_link" . }}'
                   - type: button
                     text: '{{ template "slack.monzo.link_button_text" . }}'
                     url: '{{ .CommonAnnotations.link_url }}'
           templateFiles:
             monzo.tmpl: |-
              # This builds the silence URL.  We exclude the alertname in the range
              # to avoid the issue of having trailing comma separator (%2C) at the end
              # of the generated URL
              {{ define "__alert_silence_link" -}}
                  {{ .ExternalURL }}/#/silences/new?filter=%7B
                  {{- range .CommonLabels.SortedPairs -}}
                      {{- if ne .Name "alertname" -}}
                          {{- .Name }}%3D"{{- .Value -}}"%2C%20
                      {{- end -}}
                  {{- end -}}
                  alertname%3D"{{ .CommonLabels.alertname }}"%7D
              {{- end }}

              {{ define "__alert_severity_prefix" -}}
                  {{ if ne .Status "firing" -}}
                  :white_check_mark:
                  {{- else if eq .Labels.severity "critical" -}}
                  :fire:
                  {{- else if eq .Labels.severity "warning" -}}
                  :warning:
                  {{- else -}}
                  :question:
                  {{- end }}
              {{- end }}

              {{ define "__alert_severity_prefix_title" -}}
                  {{ if ne .Status "firing" -}}
                  :white_check_mark:
                  {{- else if eq .CommonLabels.severity "critical" -}}
                  :fire:
                  {{- else if eq .CommonLabels.severity "warning" -}}
                  :warning:
                  {{- else if eq .CommonLabels.severity "info" -}}
                  :information_source:
                  {{- else -}}
                  :question:
                  {{- end }}
              {{- end }}


              {{/* First line of Slack alerts */}}
              {{ define "slack.monzo.title" -}}
                  [{{ .Status | toUpper -}}
                  {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
                  ] {{ template "__alert_severity_prefix_title" . }} {{ .CommonLabels.alertname }}
              {{- end }}


              {{/* Color of Slack attachment (appears as line next to alert )*/}}
              {{ define "slack.monzo.color" -}}
                  {{ if eq .Status "firing" -}}
                      {{ if eq .CommonLabels.severity "warning" -}}
                          warning
                      {{- else if eq .CommonLabels.severity "critical" -}}
                          danger
                      {{- else -}}
                          #439FE0
                      {{- end -}}
                  {{ else -}}
                  good
                  {{- end }}
              {{- end }}


              {{/* Emoji to display as user icon (custom emoji supported!) */}}
              {{ define "slack.monzo.icon_emoji" }}:prometheus:{{ end }}

              {{/* The test to display in the alert */}}
              {{ define "slack.monzo.text" -}}
                  {{ range .Alerts }}
                      {{- if .Annotations.message }}
                          {{ .Annotations.message }}
                      {{- end }}
                      {{- if .Annotations.description }}
                          {{ .Annotations.description }}
                      {{- end }}
                  {{- end }}
              {{- end }}



              {{- /* If none of the below matches, send to #monitoring-no-owner, and we 
              can then assign the expected code_owner to the alert or map the code_owner
              to the correct channel */ -}}
              {{ define "__get_channel_for_code_owner" -}}
                  {{- if eq . "platform-team" -}}
                      platform-alerts
                  {{- else if eq . "security-team" -}}
                      security-alerts
                  {{- else -}}
                      monitoring-no-owner
                  {{- end -}}
              {{- end }}

              {{- /* Select the channel based on the code_owner. We only expect to get
              into this template function if the code_owners label is present on an alert.
              This is to defend against us accidentally breaking the routing logic. */ -}}
              {{ define "slack.monzo.code_owner_channel" -}}
                  {{- if .CommonLabels.code_owner }}
                      {{ template "__get_channel_for_code_owner" .CommonLabels.code_owner }}
                  {{- else -}}
                      monitoring
                  {{- end }}
              {{- end }}

              {{ define "slack.monzo.link_button_text" -}}
                  {{- if .CommonAnnotations.link_text -}}
                      {{- .CommonAnnotations.link_text -}}
                  {{- else -}}
                      Link
                  {{- end }} :link:
              {{- end }}
         grafana:
           sidecar:
             dashboards:
               folderAnnotation: grafana_folder
               provider:
                 foldersFromFilesStructure: true
           envFromSecrets:
             - name: oauth-github-creds
           grafana.ini:
             server:
               root_url: https://grafana.pukara.dev
             auth:
               disable_login_form: true
             auth.basic:
               enabled: false
             auth.github:
               enabled: true
               allow_sign_up: true
               scopes: user:email,read:org
               auth_url: https://github.com/login/oauth/authorize
               token_url: https://github.com/login/oauth/access_token
               api_url: https://api.github.com/user
               allowed_organizations: "pukara-dev"
               role_attribute_path: "[login=='mogaal' || login=='jaacu'][0] && 'GrafanaAdmin' || 'Viewer'"
               allow_assign_grafana_admin: true
   - repoURL: https://github.com/pukara-dev/gitops.git
     targetRevision: main
     path: "environments/hetzner-pve-microk8s/kubernetes-manifests/monitoring"
  ignoreDifferences:
    - kind: Service
      jsonPointers:
        - /spec/externalName
  destination:
    namespace: monitoring
    server: https://mk8s-api.pukara.dev:16443
  syncPolicy:
   automated:
     prune: true
     selfHeal: true
   syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    # Prune Last (i.e. after it was synced) to not removed dynamically created admissions/patch jobs/pods
    - PruneLast=true
