{"version":3,"file":"static/2852.b98eaf90.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@backstage/plugin-catalog-react/dist/components/EntityTable/columns.esm.js","webpack://app/../../node_modules/@backstage/plugin-catalog-react/dist/components/EntityTable/presets.esm.js","webpack://app/../../node_modules/@backstage/plugin-catalog-react/dist/components/EntityTable/EntityTable.esm.js","webpack://app/../../node_modules/@backstage/plugin-catalog-react/dist/hooks/useRelatedEntities.esm.js","webpack://app/../../node_modules/@backstage/core-components/dist/components/OverflowTooltip/OverflowTooltip.esm.js","webpack://app/../../node_modules/@backstage/plugin-api-docs/dist/components/ComponentsCards/ConsumingComponentsCard.esm.js","webpack://app/../../node_modules/@backstage/plugin-api-docs/dist/components/ComponentsCards/ProvidingComponentsCard.esm.js","webpack://app/../../node_modules/@backstage/plugin-api-docs/dist/translation.esm.js"],"sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { RELATION_OWNED_BY, RELATION_PART_OF } from '@backstage/catalog-model';\nimport { OverflowTooltip } from '@backstage/core-components';\nimport { getEntityRelations } from '../../utils/getEntityRelations.esm.js';\nimport { EntityRefLink } from '../EntityRefLink/EntityRefLink.esm.js';\nimport { EntityRefLinks } from '../EntityRefLink/EntityRefLinks.esm.js';\nimport { humanizeEntityRef } from '../EntityRefLink/humanize.esm.js';\n\nconst columnFactories = Object.freeze({\n  createEntityRefColumn(options) {\n    const { defaultKind } = options;\n    function formatContent(entity) {\n      return entity.metadata?.title || humanizeEntityRef(entity, {\n        defaultKind\n      });\n    }\n    return {\n      title: \"Name\",\n      highlight: true,\n      customFilterAndSearch(filter, entity) {\n        return formatContent(entity).includes(filter);\n      },\n      customSort(entity1, entity2) {\n        return formatContent(entity1).localeCompare(formatContent(entity2));\n      },\n      render: (entity) => /* @__PURE__ */ jsx(\n        EntityRefLink,\n        {\n          entityRef: entity,\n          defaultKind,\n          title: entity.metadata?.title\n        }\n      )\n    };\n  },\n  createEntityRelationColumn(options) {\n    const { title, relation, defaultKind, filter: entityFilter } = options;\n    function getRelations(entity) {\n      return getEntityRelations(entity, relation, entityFilter);\n    }\n    function formatContent(entity) {\n      return getRelations(entity).map((r) => humanizeEntityRef(r, { defaultKind })).join(\", \");\n    }\n    return {\n      title,\n      customFilterAndSearch(filter, entity) {\n        return formatContent(entity).includes(filter);\n      },\n      customSort(entity1, entity2) {\n        return formatContent(entity1).localeCompare(formatContent(entity2));\n      },\n      render: (entity) => {\n        return /* @__PURE__ */ jsx(\n          EntityRefLinks,\n          {\n            entityRefs: getRelations(entity),\n            defaultKind\n          }\n        );\n      }\n    };\n  },\n  createOwnerColumn() {\n    return this.createEntityRelationColumn({\n      title: \"Owner\",\n      relation: RELATION_OWNED_BY,\n      defaultKind: \"group\"\n    });\n  },\n  createDomainColumn() {\n    return this.createEntityRelationColumn({\n      title: \"Domain\",\n      relation: RELATION_PART_OF,\n      defaultKind: \"domain\",\n      filter: {\n        kind: \"domain\"\n      }\n    });\n  },\n  createSystemColumn() {\n    return this.createEntityRelationColumn({\n      title: \"System\",\n      relation: RELATION_PART_OF,\n      defaultKind: \"system\",\n      filter: {\n        kind: \"system\"\n      }\n    });\n  },\n  createMetadataDescriptionColumn() {\n    return {\n      title: \"Description\",\n      field: \"metadata.description\",\n      render: (entity) => /* @__PURE__ */ jsx(\n        OverflowTooltip,\n        {\n          text: entity.metadata.description,\n          placement: \"bottom-start\",\n          line: 2\n        }\n      )\n    };\n  },\n  createSpecLifecycleColumn() {\n    return {\n      title: \"Lifecycle\",\n      field: \"spec.lifecycle\"\n    };\n  },\n  createSpecTypeColumn() {\n    return {\n      title: \"Type\",\n      field: \"spec.type\"\n    };\n  }\n});\n\nexport { columnFactories };\n//# sourceMappingURL=columns.esm.js.map\n","import { columnFactories } from './columns.esm.js';\n\nconst systemEntityColumns = [\n  columnFactories.createEntityRefColumn({ defaultKind: \"system\" }),\n  columnFactories.createDomainColumn(),\n  columnFactories.createOwnerColumn(),\n  columnFactories.createMetadataDescriptionColumn()\n];\nconst componentEntityColumns = [\n  columnFactories.createEntityRefColumn({ defaultKind: \"component\" }),\n  columnFactories.createSystemColumn(),\n  columnFactories.createOwnerColumn(),\n  columnFactories.createSpecTypeColumn(),\n  columnFactories.createSpecLifecycleColumn(),\n  columnFactories.createMetadataDescriptionColumn()\n];\n\nexport { componentEntityColumns, systemEntityColumns };\n//# sourceMappingURL=presets.esm.js.map\n","import { jsx } from 'react/jsx-runtime';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { columnFactories } from './columns.esm.js';\nimport { systemEntityColumns, componentEntityColumns } from './presets.esm.js';\nimport { Table } from '@backstage/core-components';\n\nconst useStyles = makeStyles((theme) => ({\n  empty: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n}));\nconst EntityTable = (props) => {\n  const {\n    entities,\n    title,\n    emptyContent,\n    variant = \"gridItem\",\n    columns,\n    tableOptions = {}\n  } = props;\n  const classes = useStyles();\n  const tableStyle = {\n    minWidth: \"0\",\n    width: \"100%\"\n  };\n  if (variant === \"gridItem\") {\n    tableStyle.height = \"calc(100% - 10px)\";\n  }\n  return /* @__PURE__ */ jsx(\n    Table,\n    {\n      columns,\n      title,\n      style: tableStyle,\n      emptyContent: emptyContent && /* @__PURE__ */ jsx(\"div\", { className: classes.empty, children: emptyContent }),\n      options: {\n        // TODO: Toolbar padding if off compared to other cards, should be: padding: 16px 24px;\n        search: false,\n        paging: false,\n        actionsColumnIndex: -1,\n        padding: \"dense\",\n        draggable: false,\n        ...tableOptions\n      },\n      data: entities\n    }\n  );\n};\nEntityTable.columns = columnFactories;\nEntityTable.systemEntityColumns = systemEntityColumns;\nEntityTable.componentEntityColumns = componentEntityColumns;\n\nexport { EntityTable };\n//# sourceMappingURL=EntityTable.esm.js.map\n","import { parseEntityRef } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/esm/useAsync';\nimport { catalogApiRef } from '../api.esm.js';\n\nfunction useRelatedEntities(entity, relationFilter) {\n  const filterByTypeLower = relationFilter?.type?.toLocaleLowerCase(\"en-US\");\n  const filterByKindLower = relationFilter?.kind?.toLocaleLowerCase(\"en-US\");\n  const catalogApi = useApi(catalogApiRef);\n  const {\n    loading,\n    value: entities,\n    error\n  } = useAsync(async () => {\n    const relations = entity.relations?.filter(\n      (r) => (!filterByTypeLower || r.type.toLocaleLowerCase(\"en-US\") === filterByTypeLower) && (!filterByKindLower || parseEntityRef(r.targetRef).kind === filterByKindLower)\n    );\n    if (!relations?.length) {\n      return [];\n    }\n    const { items } = await catalogApi.getEntitiesByRefs({\n      entityRefs: relations.map((r) => r.targetRef)\n    });\n    return items.filter((x) => Boolean(x));\n  }, [entity, filterByTypeLower, filterByKindLower]);\n  return {\n    entities,\n    loading,\n    error\n  };\n}\n\nexport { useRelatedEntities };\n//# sourceMappingURL=useRelatedEntities.esm.js.map\n","import { jsx } from 'react/jsx-runtime';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(\n  {\n    container: {\n      overflow: \"visible !important\"\n    },\n    typo: {\n      fontSize: \"inherit\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      \"-webkit-line-clamp\": ({ line }) => line || 1,\n      \"-webkit-box-orient\": \"vertical\"\n    }\n  },\n  { name: \"BackstageOverflowTooltip\" }\n);\nfunction OverflowTooltip(props) {\n  const classes = useStyles(props);\n  return /* @__PURE__ */ jsx(\n    Tooltip,\n    {\n      title: props.title ?? (props.text || \"\"),\n      placement: props.placement,\n      children: /* @__PURE__ */ jsx(Typography, { className: classes.typo, variant: \"inherit\", children: props.text })\n    }\n  );\n}\n\nexport { OverflowTooltip };\n//# sourceMappingURL=OverflowTooltip.esm.js.map\n","import { jsx, jsxs } from 'react/jsx-runtime';\nimport { RELATION_API_CONSUMED_BY } from '@backstage/catalog-model';\nimport Typography from '@material-ui/core/Typography';\nimport { EntityTable, useEntity, useRelatedEntities } from '@backstage/plugin-catalog-react';\nimport { InfoCard, Progress, WarningPanel, CodeSnippet, Link } from '@backstage/core-components';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { apiDocsTranslationRef } from '../../translation.esm.js';\n\nconst ConsumingComponentsCard = (props) => {\n  const { variant = \"gridItem\", columns = EntityTable.componentEntityColumns } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_API_CONSUMED_BY\n  });\n  const { t } = useTranslationRef(apiDocsTranslationRef);\n  if (loading) {\n    return /* @__PURE__ */ jsx(InfoCard, { variant, title: t(\"consumingComponentsCard.title\"), children: /* @__PURE__ */ jsx(Progress, {}) });\n  }\n  if (error || !entities) {\n    return /* @__PURE__ */ jsx(InfoCard, { variant, title: t(\"consumingComponentsCard.title\"), children: /* @__PURE__ */ jsx(\n      WarningPanel,\n      {\n        severity: \"error\",\n        title: t(\"consumingComponentsCard.error.title\"),\n        message: /* @__PURE__ */ jsx(CodeSnippet, { text: `${error}`, language: \"text\" })\n      }\n    ) });\n  }\n  return /* @__PURE__ */ jsx(\n    EntityTable,\n    {\n      title: t(\"consumingComponentsCard.title\"),\n      variant,\n      emptyContent: /* @__PURE__ */ jsxs(\"div\", { style: { textAlign: \"center\" }, children: [\n        /* @__PURE__ */ jsx(Typography, { variant: \"body1\", children: t(\"consumingComponentsCard.emptyContent.title\") }),\n        /* @__PURE__ */ jsx(Typography, { variant: \"body2\", children: /* @__PURE__ */ jsx(Link, { to: \"https://backstage.io/docs/features/software-catalog/descriptor-format#specconsumesapis-optional\", children: t(\"apisCardHelpLinkTitle\") }) })\n      ] }),\n      columns,\n      entities\n    }\n  );\n};\n\nexport { ConsumingComponentsCard };\n//# sourceMappingURL=ConsumingComponentsCard.esm.js.map\n","import { jsx, jsxs } from 'react/jsx-runtime';\nimport { RELATION_API_PROVIDED_BY } from '@backstage/catalog-model';\nimport Typography from '@material-ui/core/Typography';\nimport { EntityTable, useEntity, useRelatedEntities } from '@backstage/plugin-catalog-react';\nimport { InfoCard, Progress, WarningPanel, CodeSnippet, Link } from '@backstage/core-components';\nimport { useTranslationRef } from '@backstage/frontend-plugin-api';\nimport { apiDocsTranslationRef } from '../../translation.esm.js';\n\nconst ProvidingComponentsCard = (props) => {\n  const { variant = \"gridItem\", columns = EntityTable.componentEntityColumns } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_API_PROVIDED_BY\n  });\n  const { t } = useTranslationRef(apiDocsTranslationRef);\n  if (loading) {\n    return /* @__PURE__ */ jsx(InfoCard, { variant, title: t(\"providingComponentsCard.title\"), children: /* @__PURE__ */ jsx(Progress, {}) });\n  }\n  if (error || !entities) {\n    return /* @__PURE__ */ jsx(InfoCard, { variant, title: t(\"providingComponentsCard.title\"), children: /* @__PURE__ */ jsx(\n      WarningPanel,\n      {\n        severity: \"error\",\n        title: t(\"providingComponentsCard.error.title\"),\n        message: /* @__PURE__ */ jsx(CodeSnippet, { text: `${error}`, language: \"text\" })\n      }\n    ) });\n  }\n  return /* @__PURE__ */ jsx(\n    EntityTable,\n    {\n      title: t(\"providingComponentsCard.title\"),\n      variant,\n      emptyContent: /* @__PURE__ */ jsxs(\"div\", { style: { textAlign: \"center\" }, children: [\n        /* @__PURE__ */ jsx(Typography, { variant: \"body1\", children: t(\"providingComponentsCard.emptyContent.title\") }),\n        /* @__PURE__ */ jsx(Typography, { variant: \"body2\", children: /* @__PURE__ */ jsx(Link, { to: \"https://backstage.io/docs/features/software-catalog/descriptor-format#specprovidesapis-optional\", children: t(\"apisCardHelpLinkTitle\") }) })\n      ] }),\n      columns,\n      entities\n    }\n  );\n};\n\nexport { ProvidingComponentsCard };\n//# sourceMappingURL=ProvidingComponentsCard.esm.js.map\n","import { createTranslationRef } from '@backstage/frontend-plugin-api';\n\nconst apiDocsTranslationRef = createTranslationRef({\n  id: \"api-docs\",\n  messages: {\n    apiDefinitionDialog: {\n      closeButtonTitle: \"Close\",\n      tabsAriaLabel: \"API definition options\",\n      toggleButtonAriaLabel: \"Toggle API Definition Dialog\"\n    },\n    defaultApiExplorerPage: {\n      title: \"APIs\",\n      subtitle: \"{{orgName}} API Explorer\",\n      pageTitleOverride: \"APIs\",\n      createButtonTitle: \"Register Existing API\",\n      supportButtonTitle: \"All your APIs\"\n    },\n    consumedApisCard: {\n      title: \"Consumed APIs\",\n      error: {\n        title: \"Could not load APIs\"\n      },\n      emptyContent: {\n        title: \"This {{entity}} does not consume any APIs.\"\n      }\n    },\n    hasApisCard: {\n      title: \"APIs\",\n      error: {\n        title: \"Could not load APIs\"\n      },\n      emptyContent: {\n        title: \"This {{entity}} does not contain any APIs.\"\n      }\n    },\n    providedApisCard: {\n      title: \"Provided APIs\",\n      error: {\n        title: \"Could not load APIs\"\n      },\n      emptyContent: {\n        title: \"This {{entity}} does not provide any APIs.\"\n      }\n    },\n    apiEntityColumns: {\n      typeTitle: \"Type\",\n      apiDefinitionTitle: \"API Definition\"\n    },\n    consumingComponentsCard: {\n      title: \"Consumers\",\n      error: {\n        title: \"Could not load components\"\n      },\n      emptyContent: {\n        title: \"No component consumes this API.\"\n      }\n    },\n    providingComponentsCard: {\n      title: \"Providers\",\n      error: {\n        title: \"Could not load components\"\n      },\n      emptyContent: {\n        title: \"No component provides this API.\"\n      }\n    },\n    apisCardHelpLinkTitle: \"Learn how to change this\"\n  }\n});\n\nexport { apiDocsTranslationRef };\n//# sourceMappingURL=translation.esm.js.map\n"],"names":["columnFactories","options","defaultKind","formatContent","entity","filter","entity1","entity2","title","relation","entityFilter","getRelations","r","systemEntityColumns","componentEntityColumns","useStyles","makeStyles","theme","EntityTable","props","entities","emptyContent","variant","columns","tableOptions","classes","tableStyle","useRelatedEntities","relationFilter","filterByTypeLower","filterByKindLower","catalogApi","loading","error","relations","items","x","line","OverflowTooltip","ConsumingComponentsCard","t","Typography","ProvidingComponentsCard","apiDocsTranslationRef"],"sourceRoot":""}