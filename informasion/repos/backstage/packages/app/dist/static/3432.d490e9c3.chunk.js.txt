{"version":3,"file":"static/3432.d490e9c3.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@backstage-community/plugin-entity-validation/dist/components/EntityTextArea/EntityTextArea.esm.js","webpack://app/../../node_modules/@backstage-community/plugin-entity-validation/dist/processingResult.esm.js","webpack://app/../../node_modules/@backstage-community/plugin-entity-validation/dist/utils.esm.js","webpack://app/../../node_modules/@backstage-community/plugin-entity-validation/dist/components/EntityValidationOutput/EntityResult.esm.js","webpack://app/../../node_modules/@backstage-community/plugin-entity-validation/dist/components/EntityValidationOutput/EntityValidationOutput.esm.js","webpack://app/../../node_modules/@backstage-community/plugin-entity-validation/dist/components/EntityValidationPage/EntityValidationPage.esm.js"],"sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { useState, useMemo } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { showPanel } from '@codemirror/view';\nimport { StreamLanguage } from '@codemirror/language';\nimport { yaml } from '@codemirror/legacy-modes/mode/yaml';\nimport { useKeyboardEvent } from '@react-hookz/web';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n    minHeight: \"400px\"\n  },\n  codeMirror: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  infoPanel: {\n    color: theme.palette.info.main,\n    lineHeight: 2,\n    margin: theme.spacing(0, 1)\n  }\n}));\nconst EntityTextArea = ({\n  catalogYaml,\n  onChange,\n  onValidate\n}) => {\n  const classes = useStyles();\n  const [close, setClose] = useState(false);\n  const panelExtension = useMemo(() => {\n    if (close) {\n      return showPanel.of(null);\n    }\n    const dom = document.createElement(\"div\");\n    dom.classList.add(classes.infoPanel);\n    dom.textContent = 'To validate the provided entity descriptor YAML, click the \"Validate\" button or use \"Ctrl + S\" or \"Ctrl + Enter\"';\n    dom.onclick = () => setClose(true);\n    return showPanel.of(() => ({ dom, top: true }));\n  }, [classes, close]);\n  useKeyboardEvent(\n    (e) => (e.key === \"s\" || e.key === \"Enter\") && (e.ctrlKey || e.metaKey),\n    (e) => {\n      e.preventDefault();\n      onValidate();\n    }\n  );\n  return /* @__PURE__ */ jsx(Box, { className: classes.container, children: /* @__PURE__ */ jsx(\n    CodeMirror,\n    {\n      className: classes.codeMirror,\n      theme: \"dark\",\n      height: \"100%\",\n      extensions: [StreamLanguage.define(yaml), panelExtension],\n      value: catalogYaml,\n      onChange,\n      onKeyDownCapture: (e) => {\n        if (e.key === \"Enter\" && (e.ctrlKey || e.metaKey)) e.preventDefault();\n      }\n    }\n  ) });\n};\n\nexport { EntityTextArea };\n//# sourceMappingURL=EntityTextArea.esm.js.map\n","import { NotFoundError, InputError } from '@backstage/errors';\n\nconst processingResult = Object.freeze({\n  notFoundError(atLocation, message) {\n    return {\n      type: \"error\",\n      location: atLocation,\n      error: new NotFoundError(message)\n    };\n  },\n  inputError(atLocation, message) {\n    return {\n      type: \"error\",\n      location: atLocation,\n      error: new InputError(message)\n    };\n  },\n  generalError(atLocation, message) {\n    return { type: \"error\", location: atLocation, error: new Error(message) };\n  },\n  location(newLocation) {\n    return { type: \"location\", location: newLocation };\n  },\n  entity(atLocation, newEntity) {\n    return { type: \"entity\", location: atLocation, entity: newEntity };\n  },\n  relation(spec) {\n    return { type: \"relation\", relation: spec };\n  },\n  refresh(key) {\n    return { type: \"refresh\", key };\n  }\n});\n\nexport { processingResult };\n//# sourceMappingURL=processingResult.esm.js.map\n","import { stringifyLocationRef } from '@backstage/catalog-model';\nimport lodash from 'lodash';\nimport yaml from 'yaml';\nimport { processingResult } from './processingResult.esm.js';\n\nfunction* parseEntityYaml(data, location) {\n  let documents;\n  try {\n    documents = yaml.parseAllDocuments(data.toString(\"utf8\")).filter((d) => d);\n  } catch (e) {\n    const loc = stringifyLocationRef(location);\n    const message = `Failed to parse YAML at ${loc}, ${e}`;\n    yield processingResult.generalError(location, message);\n    return;\n  }\n  for (const document of documents) {\n    if (document.errors?.length) {\n      const loc = stringifyLocationRef(location);\n      const message = `YAML error at ${loc}, ${document.errors[0]}`;\n      yield processingResult.generalError(location, message);\n    } else {\n      const json = document.toJSON();\n      if (lodash.isPlainObject(json)) {\n        yield processingResult.entity(location, json);\n      } else if (json === null) ; else {\n        const message = `Expected object at root, got ${typeof json}`;\n        yield processingResult.generalError(location, message);\n      }\n    }\n  }\n}\n\nexport { parseEntityYaml };\n//# sourceMappingURL=utils.esm.js.map\n","import { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { useState } from 'react';\nimport { useApp } from '@backstage/core-plugin-api';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { humanizeEntityRef } from '@backstage/plugin-catalog-react';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { MarkdownContent } from '@backstage/core-components';\n\nconst useStyles = makeStyles((theme) => ({\n  validationOk: {\n    color: theme.palette.success.main\n  },\n  validationNotOk: {\n    color: theme.palette.error.main\n  },\n  errorContainer: {\n    color: theme.palette.error.main,\n    background: theme.palette.background.paper,\n    padding: theme.spacing(2)\n  }\n}));\nconst EntityResult = ({\n  isFirstError = false,\n  item\n}) => {\n  const classes = useStyles();\n  const app = useApp();\n  const [expanded, setExpanded] = useState(isFirstError);\n  const Icon = app.getSystemIcon(\n    `kind:${item.entity.kind.toLocaleLowerCase(\"en-US\")}`\n  );\n  const fetchErrorMessages = (response) => {\n    if (!response.valid) {\n      return response.errors.map((err) => err.message).join(\"\\n\\n\");\n    }\n    return \"\";\n  };\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsxs(ListItem, { children: [\n      /* @__PURE__ */ jsx(ListItemIcon, { children: Icon && /* @__PURE__ */ jsx(\n        Icon,\n        {\n          className: item.response.valid ? classes.validationOk : classes.validationNotOk\n        }\n      ) }),\n      /* @__PURE__ */ jsx(\n        ListItemText,\n        {\n          primary: humanizeEntityRef(item.entity),\n          onClick: () => setExpanded(!expanded)\n        }\n      ),\n      !item.response.valid && /* @__PURE__ */ jsx(ListItemSecondaryAction, { children: /* @__PURE__ */ jsx(IconButton, { edge: \"end\", onClick: () => setExpanded(!expanded), children: expanded ? /* @__PURE__ */ jsx(ExpandLessIcon, {}) : /* @__PURE__ */ jsx(ExpandMoreIcon, {}) }) })\n    ] }, humanizeEntityRef(item.entity)),\n    !item.response.valid && /* @__PURE__ */ jsx(Collapse, { in: expanded, timeout: \"auto\", unmountOnExit: true, children: /* @__PURE__ */ jsx(Paper, { className: classes.errorContainer, children: /* @__PURE__ */ jsx(MarkdownContent, { content: fetchErrorMessages(item.response) }) }) })\n  ] });\n};\n\nexport { EntityResult };\n//# sourceMappingURL=EntityResult.esm.js.map\n","import { jsx, Fragment, jsxs } from 'react/jsx-runtime';\nimport { useApi, identityApiRef } from '@backstage/core-plugin-api';\nimport { catalogApiRef, humanizeEntityRef } from '@backstage/plugin-catalog-react';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useAsync from 'react-use/esm/useAsync';\nimport { Progress, InfoCard } from '@backstage/core-components';\nimport Alert from '@material-ui/lab/Alert';\nimport { EntityResult } from './EntityResult.esm.js';\n\nconst useStyles = makeStyles((theme) => ({\n  validationOk: {\n    color: theme.palette.success.main\n  },\n  validationNotOk: {\n    color: theme.palette.error.main\n  }\n}));\nfunction sortResults(items) {\n  return items.sort(\n    (a, b) => humanizeEntityRef(a.entity).localeCompare(humanizeEntityRef(b.entity))\n  );\n}\nconst EntityValidationOutput = ({\n  processorResults,\n  locationUrl\n}) => {\n  const classes = useStyles();\n  const catalogApi = useApi(catalogApiRef);\n  const identityApi = useApi(identityApiRef);\n  const { value = [], loading } = useAsync(async () => {\n    if (!processorResults) {\n      return void 0;\n    }\n    const location = locationUrl ? `url:${locationUrl}` : \"url:http://localhost\";\n    return await Promise.all(\n      processorResults.map(async (item) => {\n        if (item.type === \"entity\") {\n          const { token } = await identityApi.getCredentials();\n          const validateResult = await catalogApi.validateEntity(\n            item.entity,\n            location,\n            {\n              token\n            }\n          );\n          return {\n            type: \"valid\",\n            entity: item.entity,\n            response: validateResult\n          };\n        } else if (item.type === \"error\") {\n          return {\n            type: \"error\",\n            processingError: `Malformed entity YAML, ${item.error}`\n          };\n        }\n        return {\n          type: \"error\",\n          processingError: `Internal error, failed to parse entity`\n        };\n      })\n    );\n  }, [processorResults]);\n  if (loading) {\n    return /* @__PURE__ */ jsx(Progress, {});\n  }\n  const errors = value.filter(\n    (v) => v.type === \"error\"\n  );\n  const results = sortResults(\n    value.filter((v) => v.type === \"valid\")\n  );\n  const firstErrorIndex = results.findIndex((r) => !r.response.valid);\n  if (errors.length !== 0) {\n    return /* @__PURE__ */ jsx(Fragment, { children: errors.map((err) => /* @__PURE__ */ jsx(Alert, { severity: \"error\", children: err.processingError })) });\n  }\n  return /* @__PURE__ */ jsx(InfoCard, { children: results.length === 0 ? /* @__PURE__ */ jsx(\"div\", { style: { padding: \"15px\" }, children: /* @__PURE__ */ jsx(Typography, { variant: \"body1\", children: \"No entity definitions found or validated yet\" }) }) : /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(List, { disablePadding: true, dense: true, children: results.map((item, key) => /* @__PURE__ */ jsx(\n      EntityResult,\n      {\n        item,\n        isFirstError: key === firstErrorIndex\n      },\n      key\n    )) }),\n    /* @__PURE__ */ jsx(\"div\", { style: { marginTop: \"25px\", textAlign: \"center\" }, children: results.every((r) => r.response.valid) ? /* @__PURE__ */ jsx(Typography, { variant: \"body1\", className: classes.validationOk, children: \"All the entities are valid!\" }) : /* @__PURE__ */ jsx(Typography, { variant: \"body1\", className: classes.validationNotOk, children: \"One or more entities have validation errors\" }) })\n  ] }) });\n};\n\nexport { EntityValidationOutput };\n//# sourceMappingURL=EntityValidationOutput.esm.js.map\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { useState } from 'react';\nimport { Page, Header, Content } from '@backstage/core-components';\nimport { EntityTextArea } from '../EntityTextArea/EntityTextArea.esm.js';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { parseEntityYaml } from '../../utils.esm.js';\nimport { EntityValidationOutput } from '../EntityValidationOutput/EntityValidationOutput.esm.js';\nimport '../EntityValidationOutput/EntityResult.esm.js';\n\nconst EXAMPLE_CATALOG_INFO_YAML = `# Provide your entity descriptor YAML to validate its structure\napiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  name: test\n  description: Component description\n  links: []\n  tags: []\n  annotations: {}\nspec:\n  type: service\n  lifecycle: experimental\n  owner: owner\n`;\nconst EntityValidationContent = (props) => {\n  const {\n    defaultYaml = EXAMPLE_CATALOG_INFO_YAML,\n    defaultLocation = \"https://github.com/backstage/backstage/blob/master/catalog-info.yaml\",\n    hideFileLocationField = false,\n    contentHead\n  } = props;\n  const [catalogYaml, setCatalogYaml] = useState(defaultYaml);\n  const [yamlFiles, setYamlFiles] = useState();\n  const [locationUrl, setLocationUrl] = useState(defaultLocation);\n  const parseYaml = () => {\n    const parsedFiles = [\n      ...parseEntityYaml(Buffer.from(catalogYaml), {\n        type: \"url\",\n        target: locationUrl ? locationUrl : \"http://localhost\"\n      })\n    ];\n    setYamlFiles(parsedFiles);\n  };\n  return /* @__PURE__ */ jsxs(\n    Grid,\n    {\n      container: true,\n      direction: \"column\",\n      style: { height: \"100%\" },\n      wrap: \"nowrap\",\n      \"data-testid\": \"main-grid\",\n      children: [\n        contentHead,\n        !hideFileLocationField && /* @__PURE__ */ jsx(\n          TextField,\n          {\n            fullWidth: true,\n            label: \"File Location\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            required: true,\n            value: locationUrl,\n            placeholder: defaultLocation,\n            helperText: \"Present or future location of your entity descriptor YAML file. This is not the file being validated; this merely adds location annotations to the entity descriptor file being validated.\",\n            onChange: (e) => setLocationUrl(e.target.value)\n          }\n        ),\n        /* @__PURE__ */ jsxs(Grid, { container: true, direction: \"row\", style: { height: \"100%\" }, children: [\n          /* @__PURE__ */ jsx(Grid, { item: true, md: 6, xs: 12, children: /* @__PURE__ */ jsxs(\n            Grid,\n            {\n              container: true,\n              direction: \"column\",\n              alignItems: \"flex-end\",\n              style: { height: \"100%\" },\n              wrap: \"nowrap\",\n              children: [\n                /* @__PURE__ */ jsx(Grid, { item: true, style: { width: \"100%\", flex: \"1 1 auto\" }, children: /* @__PURE__ */ jsx(\n                  EntityTextArea,\n                  {\n                    onValidate: parseYaml,\n                    onChange: (value) => setCatalogYaml(value),\n                    catalogYaml\n                  }\n                ) }),\n                /* @__PURE__ */ jsx(Grid, { item: true, children: /* @__PURE__ */ jsx(Button, { variant: \"contained\", color: \"primary\", onClick: parseYaml, children: \"Validate\" }) })\n              ]\n            }\n          ) }),\n          /* @__PURE__ */ jsx(Grid, { item: true, md: 6, xs: 12, children: /* @__PURE__ */ jsx(Grid, { container: true, spacing: 3, children: /* @__PURE__ */ jsx(Grid, { item: true, xs: 12, children: /* @__PURE__ */ jsx(\n            EntityValidationOutput,\n            {\n              processorResults: yamlFiles,\n              locationUrl\n            }\n          ) }) }) })\n        ] })\n      ]\n    }\n  );\n};\nconst EntityValidationPage = (props) => {\n  const {\n    defaultYaml = EXAMPLE_CATALOG_INFO_YAML,\n    defaultLocation = \"https://github.com/backstage/backstage/blob/master/catalog-info.yaml\",\n    hideFileLocationField = false,\n    contentHead\n  } = props;\n  return /* @__PURE__ */ jsxs(Page, { themeId: \"tool\", children: [\n    /* @__PURE__ */ jsx(\n      Header,\n      {\n        title: \"Entity Validator\",\n        subtitle: \"Validate Backstage catalog entity descriptor YAML files\"\n      }\n    ),\n    /* @__PURE__ */ jsx(Content, { children: /* @__PURE__ */ jsx(\n      EntityValidationContent,\n      {\n        defaultYaml,\n        defaultLocation,\n        hideFileLocationField,\n        contentHead\n      }\n    ) })\n  ] });\n};\n\nexport { EntityValidationContent, EntityValidationPage };\n//# sourceMappingURL=EntityValidationPage.esm.js.map\n"],"names":["useStyles","makeStyles","theme","EntityTextArea","catalogYaml","onChange","onValidate","classes","close","setClose","panelExtension","dom","useKeyboardEvent","e","Box","yaml","processingResult","atLocation","message","newLocation","newEntity","spec","key","parseEntityYaml","data","location","documents","d","document","json","EntityResult","isFirstError","item","app","expanded","setExpanded","Icon","fetchErrorMessages","response","err","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","IconButton","ExpandLess","ExpandMore","Collapse","Paper","sortResults","items","a","b","EntityValidationOutput","processorResults","locationUrl","catalogApi","identityApi","value","loading","useAsync","token","validateResult","errors","v","results","firstErrorIndex","r","Alert","Typography","List","EXAMPLE_CATALOG_INFO_YAML","EntityValidationContent","props","defaultYaml","defaultLocation","hideFileLocationField","contentHead","setCatalogYaml","yamlFiles","setYamlFiles","setLocationUrl","parseYaml","parsedFiles","Buffer","Grid","TextField","Button","EntityValidationPage"],"sourceRoot":""}