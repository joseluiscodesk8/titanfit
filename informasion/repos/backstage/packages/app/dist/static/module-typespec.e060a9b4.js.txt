{"version":3,"file":"static/module-typespec.e060a9b4.js","mappings":"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","sources":["webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/sanitizer.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/error.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/defaultRetryPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/agentPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/decompressResponsePolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/exponentialRetryPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/systemErrorRetryPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/throttlingRetryPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/proxyPolicy.common.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/redirectPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/tlsPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/logger/log.common.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/logger/debug.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/logger/logger.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/bytesEncoding.common.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/httpHeaders.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/concat.common.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/multipartPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/uuidUtils.common.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/uuidUtils.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/sha256.common.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/helpers.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/formDataPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/checkEnvironment.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/object.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/random.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/delay.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/retryStrategies/exponentialRetryStrategy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/retryPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/typeGuards.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/abort-controller/AbortError.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/pipelineRequest.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/pipeline.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/inspect.common.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/restError.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/fetchHttpClient.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/defaultHttpClient.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/createPipelineFromOptions.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/auth/checkInsecureConnection.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/auth/apiKeyAuthenticationPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/auth/basicAuthenticationPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/auth/bearerAuthenticationPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/auth/oauth2AuthenticationPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/client/clientHelpers.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/client/multipart.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/client/sendRequest.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/client/getClient.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/client/restError.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/logPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/retryStrategies/throttlingRetryStrategy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/log.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/userAgentPlatform.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/util/userAgent.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/policies/userAgentPolicy.js","webpack://app/../../node_modules/@typespec/ts-http-runtime/dist/browser/constants.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isObject } from \"./object.js\";\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * A utility class to sanitize objects for logging.\n */\nexport class Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    /**\n     * Sanitizes an object for logging.\n     * @param obj - The object to sanitize\n     * @returns - The sanitized object as a string\n     */\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || isObject(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    /**\n     * Sanitizes a URL for logging.\n     * @param value - The URL to sanitize\n     * @returns - The sanitized URL as a string\n     */\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null || value === \"\") {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n}\n//# sourceMappingURL=sanitizer.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isObject } from \"./object.js\";\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e) {\n    if (isObject(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n//# sourceMappingURL=error.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: defaultRetryPolicyName,\n        sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = \"agentPolicy\";\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent) {\n    return {\n        name: agentPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define an agent on the request, honor it over the client level one\n            if (!req.agent) {\n                req.agent = agent;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=agentPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * decompressResponsePolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function decompressResponsePolicy() {\n    throw new Error(\"decompressResponsePolicy is not supported in browser environment\");\n}\n//# sourceMappingURL=decompressResponsePolicy-browser.mjs.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nexport const exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nexport function exponentialRetryPolicy(options = {}) {\n    var _a;\n    return retryPolicy([\n        exponentialRetryStrategy(Object.assign(Object.assign({}, options), { ignoreSystemErrors: true })),\n    ], {\n        maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n    });\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nexport const systemErrorRetryPolicyName = \"systemErrorRetryPolicy\";\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nexport function systemErrorRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: systemErrorRetryPolicyName,\n        sendRequest: retryPolicy([\n            exponentialRetryStrategy(Object.assign(Object.assign({}, options), { ignoreHttpStatusCodes: true })),\n        ], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n/**\n * Name of the {@link throttlingRetryPolicy}\n */\nexport const throttlingRetryPolicyName = \"throttlingRetryPolicy\";\n/**\n * A policy that retries when the server sends a 429 response with a Retry-After header.\n *\n * To learn more, please refer to\n * https://learn.microsoft.com/azure/azure-resource-manager/resource-manager-request-limits,\n * https://learn.microsoft.com/azure/azure-subscription-service-limits and\n * https://learn.microsoft.com/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n *\n * @param options - Options that configure retry logic.\n */\nexport function throttlingRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: throttlingRetryPolicyName,\n        sendRequest: retryPolicy([throttlingRetryStrategy()], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const proxyPolicyName = \"proxyPolicy\";\nconst errorMessage = \"proxyPolicy is not supported in browser environment\";\nexport function getDefaultProxySettings() {\n    throw new Error(errorMessage);\n}\n/**\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function proxyPolicy() {\n    throw new Error(errorMessage);\n}\n/**\n * A function to reset the cached agents.\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n * @internal\n */\nexport function resetCachedProxyAgents() {\n    throw new Error(errorMessage);\n}\n//# sourceMappingURL=proxyPolicy.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        request.headers.delete(\"Authorization\");\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings) {\n    return {\n        name: tlsPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define a request tlsSettings, honor those over the client level one\n            if (!req.tlsSettings) {\n                req.tlsSettings = tlsSettings;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=tlsPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport function log(...args) {\n    if (args.length > 0) {\n        const firstArg = String(args[0]);\n        if (firstArg.includes(\":error\")) {\n            console.error(...args);\n        }\n        else if (firstArg.includes(\":warning\")) {\n            console.warn(...args);\n        }\n        else if (firstArg.includes(\":info\")) {\n            console.info(...args);\n        }\n        else if (firstArg.includes(\":verbose\")) {\n            console.debug(...args);\n        }\n        else {\n            console.debug(...args);\n        }\n    }\n}\n//# sourceMappingURL=log.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { log } from \"./log.js\";\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log,\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend,\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\nexport default debugObj;\n//# sourceMappingURL=debug.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport debug from \"./debug.js\";\nconst TYPESPEC_RUNTIME_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100,\n};\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction isTypeSpecRuntimeLogLevel(level) {\n    return TYPESPEC_RUNTIME_LOG_LEVELS.includes(level);\n}\n/**\n * Creates a logger context base on the provided options.\n * @param options - The options for creating a logger context.\n * @returns The logger context.\n */\nexport function createLoggerContext(options) {\n    const registeredLoggers = new Set();\n    const logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env[options.logLevelEnvVarName]) ||\n        undefined;\n    let logLevel;\n    const clientLogger = debug(options.namespace);\n    clientLogger.log = (...args) => {\n        debug.log(...args);\n    };\n    function contextSetLogLevel(level) {\n        if (level && !isTypeSpecRuntimeLogLevel(level)) {\n            throw new Error(`Unknown log level '${level}'. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\",\")}`);\n        }\n        logLevel = level;\n        const enabledNamespaces = [];\n        for (const logger of registeredLoggers) {\n            if (shouldEnable(logger)) {\n                enabledNamespaces.push(logger.namespace);\n            }\n        }\n        debug.enable(enabledNamespaces.join(\",\"));\n    }\n    if (logLevelFromEnv) {\n        // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n        if (isTypeSpecRuntimeLogLevel(logLevelFromEnv)) {\n            contextSetLogLevel(logLevelFromEnv);\n        }\n        else {\n            console.error(`${options.logLevelEnvVarName} set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\", \")}.`);\n        }\n    }\n    function shouldEnable(logger) {\n        return Boolean(logLevel && levelMap[logger.level] <= levelMap[logLevel]);\n    }\n    function createLogger(parent, level) {\n        const logger = Object.assign(parent.extend(level), {\n            level,\n        });\n        patchLogMethod(parent, logger);\n        if (shouldEnable(logger)) {\n            const enabledNamespaces = debug.disable();\n            debug.enable(enabledNamespaces + \",\" + logger.namespace);\n        }\n        registeredLoggers.add(logger);\n        return logger;\n    }\n    function contextGetLogLevel() {\n        return logLevel;\n    }\n    function contextCreateClientLogger(namespace) {\n        const clientRootLogger = clientLogger.extend(namespace);\n        patchLogMethod(clientLogger, clientRootLogger);\n        return {\n            error: createLogger(clientRootLogger, \"error\"),\n            warning: createLogger(clientRootLogger, \"warning\"),\n            info: createLogger(clientRootLogger, \"info\"),\n            verbose: createLogger(clientRootLogger, \"verbose\"),\n        };\n    }\n    return {\n        setLogLevel: contextSetLogLevel,\n        getLogLevel: contextGetLogLevel,\n        createClientLogger: contextCreateClientLogger,\n        logger: clientLogger,\n    };\n}\nconst context = createLoggerContext({\n    logLevelEnvVarName: \"TYPESPEC_RUNTIME_LOG_LEVEL\",\n    namespace: \"typeSpecRuntime\",\n});\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const TypeSpecRuntimeLogger = context.logger;\n/**\n * Retrieves the currently specified log level.\n */\nexport function setLogLevel(logLevel) {\n    context.setLogLevel(logLevel);\n}\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n    return context.getLogLevel();\n}\n/**\n * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace) {\n    return context.createClientLogger(namespace);\n}\n//# sourceMappingURL=logger.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes, format) {\n    switch (format) {\n        case \"utf-8\":\n            return uint8ArrayToUtf8String(bytes);\n        case \"base64\":\n            return uint8ArrayToBase64(bytes);\n        case \"base64url\":\n            return uint8ArrayToBase64Url(bytes);\n        case \"hex\":\n            return uint8ArrayToHexString(bytes);\n    }\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value, format) {\n    switch (format) {\n        case \"utf-8\":\n            return utf8StringToUint8Array(value);\n        case \"base64\":\n            return base64ToUint8Array(value);\n        case \"base64url\":\n            return base64UrlToUint8Array(value);\n        case \"hex\":\n            return hexStringToUint8Array(value);\n    }\n}\n/**\n * Decodes a Uint8Array into a Base64 string.\n * @internal\n */\nexport function uint8ArrayToBase64(bytes) {\n    return btoa([...bytes].map((x) => String.fromCharCode(x)).join(\"\"));\n}\n/**\n * Decodes a Uint8Array into a Base64Url string.\n * @internal\n */\nexport function uint8ArrayToBase64Url(bytes) {\n    return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\n/**\n * Decodes a Uint8Array into a javascript string.\n * @internal\n */\nexport function uint8ArrayToUtf8String(bytes) {\n    const decoder = new TextDecoder();\n    const dataString = decoder.decode(bytes);\n    return dataString;\n}\n/**\n * Decodes a Uint8Array into a hex string\n * @internal\n */\nexport function uint8ArrayToHexString(bytes) {\n    return [...bytes].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\n * Encodes a JavaScript string into a Uint8Array.\n * @internal\n */\nexport function utf8StringToUint8Array(value) {\n    return new TextEncoder().encode(value);\n}\n/**\n * Encodes a Base64 string into a Uint8Array.\n * @internal\n */\nexport function base64ToUint8Array(value) {\n    return new Uint8Array([...atob(value)].map((x) => x.charCodeAt(0)));\n}\n/**\n * Encodes a Base64Url string into a Uint8Array.\n * @internal\n */\nexport function base64UrlToUint8Array(value) {\n    const base64String = value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    return base64ToUint8Array(base64String);\n}\nconst hexDigits = new Set(\"0123456789abcdefABCDEF\");\n/**\n * Encodes a hex string into a Uint8Array\n * @internal\n */\nexport function hexStringToUint8Array(value) {\n    // If value has odd length, the last character will be ignored, consistent with NodeJS Buffer behavior\n    const bytes = new Uint8Array(value.length / 2);\n    for (let i = 0; i < value.length / 2; ++i) {\n        const highNibble = value[2 * i];\n        const lowNibble = value[2 * i + 1];\n        if (!hexDigits.has(highNibble) || !hexDigits.has(lowNibble)) {\n            // Replicate Node Buffer behavior by exiting early when we encounter an invalid byte\n            return bytes.slice(0, i);\n        }\n        bytes[i] = parseInt(`${highNibble}${lowNibble}`, 16);\n    }\n    return bytes;\n}\n//# sourceMappingURL=bytesEncoding.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isWebReadableStream } from \"./typeGuards.js\";\n/**\n * Drain the content of the given ReadableStream into a Blob.\n * The blob's content may end up in memory or on disk dependent on size.\n */\nfunction drain(stream) {\n    return new Response(stream).blob();\n}\nasync function toBlobPart(source) {\n    if (source instanceof Blob || source instanceof Uint8Array) {\n        return source;\n    }\n    if (isWebReadableStream(source)) {\n        return drain(source);\n    }\n    else {\n        throw new Error(\"Unsupported source type. Only Blob, Uint8Array, and ReadableStream are supported in browser.\");\n    }\n}\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(sources) {\n    const parts = [];\n    for (const source of sources) {\n        parts.push(await toBlobPart(typeof source === \"function\" ? source() : source));\n    }\n    return new Blob(parts);\n}\n//# sourceMappingURL=concat.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\nimport { randomUUID } from \"../util/uuidUtils.js\";\nimport { concat } from \"../util/concat.js\";\nfunction generateBoundary() {\n    return `----AzSDKFormBoundary${randomUUID()}`;\n}\nfunction encodeHeaders(headers) {\n    let result = \"\";\n    for (const [key, value] of headers) {\n        result += `${key}: ${value}\\r\\n`;\n    }\n    return result;\n}\nfunction getLength(source) {\n    if (source instanceof Uint8Array) {\n        return source.byteLength;\n    }\n    else if (isBlob(source)) {\n        // if was created using createFile then -1 means we have an unknown size\n        return source.size === -1 ? undefined : source.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getTotalLength(sources) {\n    let total = 0;\n    for (const source of sources) {\n        const partLength = getLength(source);\n        if (partLength === undefined) {\n            return undefined;\n        }\n        else {\n            total += partLength;\n        }\n    }\n    return total;\n}\nasync function buildRequestBody(request, parts, boundary) {\n    const sources = [\n        stringToUint8Array(`--${boundary}`, \"utf-8\"),\n        ...parts.flatMap((part) => [\n            stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n            stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n            stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n            part.body,\n            stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n        ]),\n        stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n    ];\n    const contentLength = getTotalLength(sources);\n    if (contentLength) {\n        request.headers.set(\"Content-Length\", contentLength);\n    }\n    request.body = await concat(sources);\n}\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`);\nfunction assertValidBoundary(boundary) {\n    if (boundary.length > maxBoundaryLength) {\n        throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n    }\n    if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n        throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n    }\n}\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy() {\n    return {\n        name: multipartPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.multipartBody) {\n                return next(request);\n            }\n            if (request.body) {\n                throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n            }\n            let boundary = request.multipartBody.boundary;\n            const contentTypeHeader = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"multipart/mixed\";\n            const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n            if (!parsedHeader) {\n                throw new Error(`Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`);\n            }\n            const [, contentType, parsedBoundary] = parsedHeader;\n            if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n                throw new Error(`Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`);\n            }\n            boundary !== null && boundary !== void 0 ? boundary : (boundary = parsedBoundary);\n            if (boundary) {\n                assertValidBoundary(boundary);\n            }\n            else {\n                boundary = generateBoundary();\n            }\n            request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n            await buildRequestBody(request, request.multipartBody.parts, boundary);\n            request.multipartBody = undefined;\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID() {\n    let uuid = \"\";\n    for (let i = 0; i < 32; i++) {\n        // Generate a random number between 0 and 15\n        const randomNumber = Math.floor(Math.random() * 16);\n        // Set the UUID version to 4 in the 13th position\n        if (i === 12) {\n            uuid += \"4\";\n        }\n        else if (i === 16) {\n            // Set the UUID variant to \"10\" in the 17th position\n            uuid += (randomNumber & 0x3) | 0x8;\n        }\n        else {\n            // Add a random hexadecimal digit to the UUID string\n            uuid += randomNumber.toString(16);\n        }\n        // Add hyphens to the UUID string at the appropriate positions\n        if (i === 7 || i === 11 || i === 15 || i === 19) {\n            uuid += \"-\";\n        }\n    }\n    return uuid;\n}\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n    return generateUUID();\n}\n//# sourceMappingURL=uuidUtils.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a;\nimport { generateUUID } from \"./uuidUtils.common.js\";\n// NOTE: This could be undefined if not used in a secure context\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : generateUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n    return uuidFunction();\n}\n//# sourceMappingURL=uuidUtils-browser.mjs.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array, uint8ArrayToString } from \"./bytesEncoding.js\";\nlet subtleCrypto;\n/**\n * Returns a cached reference to the Web API crypto.subtle object.\n * @internal\n */\nfunction getCrypto() {\n    if (subtleCrypto) {\n        return subtleCrypto;\n    }\n    if (!self.crypto || !self.crypto.subtle) {\n        throw new Error(\"Your browser environment does not support cryptography functions.\");\n    }\n    subtleCrypto = self.crypto.subtle;\n    return subtleCrypto;\n}\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport async function computeSha256Hmac(key, stringToSign, encoding) {\n    const crypto = getCrypto();\n    const keyBytes = stringToUint8Array(key, \"base64\");\n    const stringToSignBytes = stringToUint8Array(stringToSign, \"utf-8\");\n    const cryptoKey = await crypto.importKey(\"raw\", keyBytes, {\n        name: \"HMAC\",\n        hash: { name: \"SHA-256\" },\n    }, false, [\"sign\"]);\n    const signature = await crypto.sign({\n        name: \"HMAC\",\n        hash: { name: \"SHA-256\" },\n    }, cryptoKey, stringToSignBytes);\n    return uint8ArrayToString(new Uint8Array(signature), encoding);\n}\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport async function computeSha256Hash(content, encoding) {\n    const contentBytes = stringToUint8Array(content, \"utf-8\");\n    const digest = await getCrypto().digest({ name: \"SHA-256\" }, contentBytes);\n    return uint8ArrayToString(new Uint8Array(digest), encoding);\n}\n//# sourceMappingURL=sha256.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(response, headerName) {\n    const value = response.headers.get(headerName);\n    if (!value)\n        return;\n    const valueAsNum = Number(value);\n    if (Number.isNaN(valueAsNum))\n        return;\n    return valueAsNum;\n}\n//# sourceMappingURL=helpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\nfunction formDataToFormDataMap(formData) {\n    var _a;\n    const formDataMap = {};\n    for (const [key, value] of formData.entries()) {\n        (_a = formDataMap[key]) !== null && _a !== void 0 ? _a : (formDataMap[key] = []);\n        formDataMap[key].push(value);\n    }\n    return formDataMap;\n}\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n                request.formData = formDataToFormDataMap(request.body);\n                request.body = undefined;\n            }\n            if (request.formData) {\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = wwwFormUrlEncode(request.formData);\n                }\n                else {\n                    await prepareFormData(request.formData, request);\n                }\n                request.formData = undefined;\n            }\n            return next(request);\n        },\n    };\n}\nfunction wwwFormUrlEncode(formData) {\n    const urlSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(formData)) {\n        if (Array.isArray(value)) {\n            for (const subValue of value) {\n                urlSearchParams.append(key, subValue.toString());\n            }\n        }\n        else {\n            urlSearchParams.append(key, value.toString());\n        }\n    }\n    return urlSearchParams.toString();\n}\nasync function prepareFormData(formData, request) {\n    // validate content type (multipart/form-data)\n    const contentType = request.headers.get(\"Content-Type\");\n    if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n        // content type is specified and is not multipart/form-data. Exit.\n        return;\n    }\n    request.headers.set(\"Content-Type\", contentType !== null && contentType !== void 0 ? contentType : \"multipart/form-data\");\n    // set body to MultipartRequestBody using content from FormDataMap\n    const parts = [];\n    for (const [fieldName, values] of Object.entries(formData)) {\n        for (const value of Array.isArray(values) ? values : [values]) {\n            if (typeof value === \"string\") {\n                parts.push({\n                    headers: createHttpHeaders({\n                        \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n                    }),\n                    body: stringToUint8Array(value, \"utf-8\"),\n                });\n            }\n            else if (value === undefined || value === null || typeof value !== \"object\") {\n                throw new Error(`Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`);\n            }\n            else {\n                // using || instead of ?? here since if value.name is empty we should create a file name\n                const fileName = value.name || \"blob\";\n                const headers = createHttpHeaders();\n                headers.set(\"Content-Disposition\", `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`);\n                // again, || is used since an empty value.type means the content type is unset\n                headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n                parts.push({\n                    headers,\n                    body: value,\n                });\n            }\n        }\n    }\n    request.multipartBody = { parts };\n}\n//# sourceMappingURL=formDataPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a, _b, _c, _d;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n//# sourceMappingURL=checkEnvironment.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=object.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=random.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getRandomIntegerInclusive } from \"./random.js\";\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(retryAttempt, config) {\n    // Exponentially increase the delay each time\n    const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n    // Don't let the delay exceed the maximum\n    const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n    // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n    // that retries across multiple clients don't occur simultaneously.\n    const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n    return { retryAfterInMs };\n}\n//# sourceMappingURL=delay.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { calculateRetryDelay } from \"../util/delay.js\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError && !isExponential) {\n                return { errorToThrow: responseError };\n            }\n            return calculateRetryDelay(retryCount, {\n                retryDelayInMs: retryInterval,\n                maxRetryDelayInMs: maxRetryInterval,\n            });\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\" ||\n        err.code === \"ENOTFOUND\");\n}\n//# sourceMappingURL=exponentialRetryStrategy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { delay } from \"../util/helpers.js\";\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport { createClientLogger } from \"../logger/logger.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\nconst retryPolicyLogger = createClientLogger(\"ts-http-runtime retryPolicy\");\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(strategies, options = { maxRetries: DEFAULT_RETRY_POLICY_COUNT }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    // RestErrors are valid targets for the retry strategies.\n                    // If none of the retry strategies can work with them, they will be thrown later in this policy.\n                    // If the received error is not a RestError, it is immediately thrown.\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : DEFAULT_RETRY_POLICY_COUNT)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (responseError) {\n                        throw responseError;\n                    }\n                    else if (response) {\n                        return response;\n                    }\n                    else {\n                        throw new Error(\"Maximum retries reached with no response or error to throw\");\n                    }\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || logger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs || retryAfterInMs === 0) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (responseError) {\n                    logger.info(`None of the retry strategies could work with the received error. Throwing it.`);\n                    throw responseError;\n                }\n                if (response) {\n                    logger.info(`None of the retry strategies could work with the received response. Returning it.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n//# sourceMappingURL=retryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport function isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nexport function isWebReadableStream(x) {\n    return Boolean(x &&\n        typeof x.getReader === \"function\" &&\n        typeof x.tee === \"function\");\n}\nexport function isBinaryBody(body) {\n    return (body !== undefined &&\n        (body instanceof Uint8Array ||\n            isReadableStream(body) ||\n            typeof body === \"function\" ||\n            body instanceof Blob));\n}\nexport function isReadableStream(x) {\n    return isNodeReadableStream(x) || isWebReadableStream(x);\n}\nexport function isBlob(x) {\n    return typeof x.stream === \"function\";\n}\n//# sourceMappingURL=typeGuards.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts snippet:ReadmeSampleAbortError\n * import { AbortError } from \"@typespec/ts-http-runtime\";\n *\n * async function doAsyncWork(options: { abortSignal: AbortSignal }): Promise<void> {\n *   if (options.abortSignal.aborted) {\n *     throw new AbortError();\n *   }\n *\n *   // do async work\n * }\n *\n * const controller = new AbortController();\n * controller.abort();\n *\n * try {\n *   doAsyncWork({ abortSignal: controller.signal });\n * } catch (e) {\n *   if (e instanceof Error && e.name === \"AbortError\") {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n//# sourceMappingURL=AbortError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"./util/uuidUtils.js\";\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : createHttpHeaders();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.multipartBody = options.multipartBody;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || randomUUID();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n        this.requestOverrides = options.requestOverrides;\n        this.authSchemes = options.authSchemes;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies) {\n        var _a;\n        this._policies = [];\n        this._policies = (_a = policies === null || policies === void 0 ? void 0 : policies.slice(0)) !== null && _a !== void 0 ? _a : [];\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n                hasAfterPolicies: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n                node.afterPhase.hasAfterPolicies = true;\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n                if (phase.hasAfterPolicies) {\n                    // Run any policies unblocked by this phase\n                    walkPhase(noPhase);\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n//# sourceMappingURL=pipeline.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const custom = Symbol();\n//# sourceMappingURL=inspect.common.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isError } from \"./util/error.js\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\nconst errorSanitizer = new Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        // The request and response may contain sensitive information in the headers or body.\n        // To help prevent this sensitive information being accidentally logged, the request and response\n        // properties are marked as non-enumerable here. This prevents them showing up in the output of\n        // JSON.stringify and console.log.\n        Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n        Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n        // Logging method for util.inspect in Node\n        Object.defineProperty(this, custom, {\n            value: () => {\n                // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n                // response get sanitized.\n                return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(Object.assign(Object.assign({}, this), { request: this.request, response: this.response }))}`;\n            },\n            enumerable: false,\n        });\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return isError(e) && e.name === \"RestError\";\n}\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AbortError } from \"./abort-controller/AbortError.js\";\nimport { RestError } from \"./restError.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./util/typeGuards.js\";\n/**\n * Checks if the body is a Blob or Blob-like\n */\nfunction isBlob(body) {\n    // File objects count as a type of Blob, so we want to use instanceof explicitly\n    return (typeof Blob === \"function\" || typeof Blob === \"object\") && body instanceof Blob;\n}\n/**\n * A HttpClient implementation that uses window.fetch to send HTTP requests.\n * @internal\n */\nclass FetchHttpClient {\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        if (request.proxySettings) {\n            throw new Error(\"HTTP proxy is not supported in browser environment\");\n        }\n        try {\n            return await makeRequest(request);\n        }\n        catch (e) {\n            throw getError(e, request);\n        }\n    }\n}\n/**\n * Sends a request\n */\nasync function makeRequest(request) {\n    const { abortController, abortControllerCleanup } = setupAbortSignal(request);\n    try {\n        const headers = buildFetchHeaders(request.headers);\n        const { streaming, body: requestBody } = buildRequestBody(request);\n        const requestInit = Object.assign(Object.assign({ body: requestBody, method: request.method, headers: headers, signal: abortController.signal }, (\"credentials\" in Request.prototype\n            ? { credentials: request.withCredentials ? \"include\" : \"same-origin\" }\n            : {})), (\"cache\" in Request.prototype ? { cache: \"no-store\" } : {}));\n        // According to https://fetch.spec.whatwg.org/#fetch-method,\n        // init.duplex must be set when body is a ReadableStream object.\n        // currently \"half\" is the only valid value.\n        if (streaming) {\n            requestInit.duplex = \"half\";\n        }\n        /**\n         * Developers of the future:\n         * Do not set redirect: \"manual\" as part\n         * of request options.\n         * It will not work as you expect.\n         */\n        const response = await fetch(request.url, Object.assign(Object.assign({}, requestInit), request.requestOverrides));\n        // If we're uploading a blob, we need to fire the progress event manually\n        if (isBlob(request.body) && request.onUploadProgress) {\n            request.onUploadProgress({ loadedBytes: request.body.size });\n        }\n        return buildPipelineResponse(response, request, abortControllerCleanup);\n    }\n    catch (e) {\n        abortControllerCleanup === null || abortControllerCleanup === void 0 ? void 0 : abortControllerCleanup();\n        throw e;\n    }\n}\n/**\n * Creates a pipeline response from a Fetch response;\n */\nasync function buildPipelineResponse(httpResponse, request, abortControllerCleanup) {\n    var _a, _b;\n    const headers = buildPipelineHeaders(httpResponse);\n    const response = {\n        request,\n        headers,\n        status: httpResponse.status,\n    };\n    const bodyStream = isWebReadableStream(httpResponse.body)\n        ? buildBodyStream(httpResponse.body, {\n            onProgress: request.onDownloadProgress,\n            onEnd: abortControllerCleanup,\n        })\n        : httpResponse.body;\n    if (\n    // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n    ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(Number.POSITIVE_INFINITY)) ||\n        ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(response.status))) {\n        if (request.enableBrowserStreams) {\n            response.browserStreamBody = bodyStream !== null && bodyStream !== void 0 ? bodyStream : undefined;\n        }\n        else {\n            const responseStream = new Response(bodyStream);\n            response.blobBody = responseStream.blob();\n            abortControllerCleanup === null || abortControllerCleanup === void 0 ? void 0 : abortControllerCleanup();\n        }\n    }\n    else {\n        const responseStream = new Response(bodyStream);\n        response.bodyAsText = await responseStream.text();\n        abortControllerCleanup === null || abortControllerCleanup === void 0 ? void 0 : abortControllerCleanup();\n    }\n    return response;\n}\nfunction setupAbortSignal(request) {\n    const abortController = new AbortController();\n    // Cleanup function\n    let abortControllerCleanup;\n    /**\n     * Attach an abort listener to the request\n     */\n    let abortListener;\n    if (request.abortSignal) {\n        if (request.abortSignal.aborted) {\n            throw new AbortError(\"The operation was aborted. Request has already been canceled.\");\n        }\n        abortListener = (event) => {\n            if (event.type === \"abort\") {\n                abortController.abort();\n            }\n        };\n        request.abortSignal.addEventListener(\"abort\", abortListener);\n        abortControllerCleanup = () => {\n            var _a;\n            if (abortListener) {\n                (_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"abort\", abortListener);\n            }\n        };\n    }\n    // If a timeout was passed, call the abort signal once the time elapses\n    if (request.timeout > 0) {\n        setTimeout(() => {\n            abortController.abort();\n        }, request.timeout);\n    }\n    return { abortController, abortControllerCleanup };\n}\n/**\n * Gets the specific error\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction getError(e, request) {\n    var _a;\n    if (e && (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\") {\n        return e;\n    }\n    else {\n        return new RestError(`Error sending request: ${e.message}`, {\n            code: (_a = e === null || e === void 0 ? void 0 : e.code) !== null && _a !== void 0 ? _a : RestError.REQUEST_SEND_ERROR,\n            request,\n        });\n    }\n}\n/**\n * Converts PipelineRequest headers to Fetch headers\n */\nfunction buildFetchHeaders(pipelineHeaders) {\n    const headers = new Headers();\n    for (const [name, value] of pipelineHeaders) {\n        headers.append(name, value);\n    }\n    return headers;\n}\nfunction buildPipelineHeaders(httpResponse) {\n    const responseHeaders = createHttpHeaders();\n    for (const [name, value] of httpResponse.headers) {\n        responseHeaders.set(name, value);\n    }\n    return responseHeaders;\n}\nfunction buildRequestBody(request) {\n    const body = typeof request.body === \"function\" ? request.body() : request.body;\n    if (isNodeReadableStream(body)) {\n        throw new Error(\"Node streams are not supported in browser environment.\");\n    }\n    return isWebReadableStream(body)\n        ? { streaming: true, body: buildBodyStream(body, { onProgress: request.onUploadProgress }) }\n        : { streaming: false, body };\n}\n/**\n * Reads the request/response original stream and stream it through a new\n * ReadableStream, this is done to be able to report progress in a way that\n * all modern browsers support. TransformStreams would be an alternative,\n * however they are not yet supported by all browsers i.e Firefox\n */\nfunction buildBodyStream(readableStream, options = {}) {\n    let loadedBytes = 0;\n    const { onProgress, onEnd } = options;\n    // If the current browser supports pipeThrough we use a TransformStream\n    // to report progress\n    if (isTransformStreamSupported(readableStream)) {\n        return readableStream.pipeThrough(new TransformStream({\n            transform(chunk, controller) {\n                if (chunk === null) {\n                    controller.terminate();\n                    return;\n                }\n                controller.enqueue(chunk);\n                loadedBytes += chunk.length;\n                if (onProgress) {\n                    onProgress({ loadedBytes });\n                }\n            },\n            flush() {\n                onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n            },\n        }));\n    }\n    else {\n        // If we can't use transform streams, wrap the original stream in a new readable stream\n        // and use pull to enqueue each chunk and report progress.\n        const reader = readableStream.getReader();\n        return new ReadableStream({\n            async pull(controller) {\n                var _a;\n                const { done, value } = await reader.read();\n                // When no more data needs to be consumed, break the reading\n                if (done || !value) {\n                    onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n                    // Close the stream\n                    controller.close();\n                    reader.releaseLock();\n                    return;\n                }\n                loadedBytes += (_a = value === null || value === void 0 ? void 0 : value.length) !== null && _a !== void 0 ? _a : 0;\n                // Enqueue the next data chunk into our target stream\n                controller.enqueue(value);\n                if (onProgress) {\n                    onProgress({ loadedBytes });\n                }\n            },\n            cancel(reason) {\n                onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n                return reader.cancel(reason);\n            },\n        });\n    }\n}\n/**\n * Create a new HttpClient instance for the browser environment.\n * @internal\n */\nexport function createFetchHttpClient() {\n    return new FetchHttpClient();\n}\nfunction isTransformStreamSupported(readableStream) {\n    return readableStream.pipeThrough !== undefined && self.TransformStream !== undefined;\n}\n//# sourceMappingURL=fetchHttpClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createFetchHttpClient } from \"./fetchHttpClient.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n    return createFetchHttpClient();\n}\n//# sourceMappingURL=defaultHttpClient-browser.mjs.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logPolicy } from \"./policies/logPolicy.js\";\nimport { createEmptyPipeline } from \"./pipeline.js\";\nimport { redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"./util/checkEnvironment.js\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options) {\n    const pipeline = createEmptyPipeline();\n    if (isNodeLike) {\n        if (options.agent) {\n            pipeline.addPolicy(agentPolicy(options.agent));\n        }\n        if (options.tlsOptions) {\n            pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n        }\n        pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n        pipeline.addPolicy(decompressResponsePolicy());\n    }\n    pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n    pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n    if (isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logger } from \"../../log.js\";\n// Ensure the warining is only emitted once\nlet insecureConnectionWarningEmmitted = false;\n/**\n * Checks if the request is allowed to be sent over an insecure connection.\n *\n * A request is allowed to be sent over an insecure connection when:\n * - The `allowInsecureConnection` option is set to `true`.\n * - The request has the `allowInsecureConnection` property set to `true`.\n * - The request is being sent to `localhost` or `127.0.0.1`\n */\nfunction allowInsecureConnection(request, options) {\n    if (options.allowInsecureConnection && request.allowInsecureConnection) {\n        const url = new URL(request.url);\n        if (url.hostname === \"localhost\" || url.hostname === \"127.0.0.1\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Logs a warning about sending a token over an insecure connection.\n *\n * This function will emit a node warning once, but log the warning every time.\n */\nfunction emitInsecureConnectionWarning() {\n    const warning = \"Sending token over insecure transport. Assume any token issued is compromised.\";\n    logger.warning(warning);\n    if (typeof (process === null || process === void 0 ? void 0 : process.emitWarning) === \"function\" && !insecureConnectionWarningEmmitted) {\n        insecureConnectionWarningEmmitted = true;\n        process.emitWarning(warning);\n    }\n}\n/**\n * Ensures that authentication is only allowed over HTTPS unless explicitly allowed.\n * Throws an error if the connection is not secure and not explicitly allowed.\n */\nexport function ensureSecureConnection(request, options) {\n    if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        if (allowInsecureConnection(request, options)) {\n            emitInsecureConnectionWarning();\n        }\n        else {\n            throw new Error(\"Authentication is not permitted for non-TLS protected (non-https) URLs when allowInsecureConnection is false.\");\n        }\n    }\n}\n//# sourceMappingURL=checkInsecureConnection.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the API Key Authentication Policy\n */\nexport const apiKeyAuthenticationPolicyName = \"apiKeyAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds API key authentication to requests\n */\nexport function apiKeyAuthenticationPolicy(options) {\n    return {\n        name: apiKeyAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"apiKey\");\n            // Skip adding authentication header if no API key authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            if (scheme.apiKeyLocation !== \"header\") {\n                throw new Error(`Unsupported API key location: ${scheme.apiKeyLocation}`);\n            }\n            request.headers.set(scheme.name, options.credential.key);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=apiKeyAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array, uint8ArrayToString } from \"../../util/bytesEncoding.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the Basic Authentication Policy\n */\nexport const basicAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds basic authentication to requests\n */\nexport function basicAuthenticationPolicy(options) {\n    return {\n        name: basicAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"http\" && x.scheme === \"basic\");\n            // Skip adding authentication header if no basic authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const { username, password } = options.credential;\n            const headerValue = uint8ArrayToString(stringToUint8Array(`${username}:${password}`, \"utf-8\"), \"base64\");\n            request.headers.set(\"Authorization\", `Basic ${headerValue}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=basicAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the Bearer Authentication Policy\n */\nexport const bearerAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds bearer token authentication to requests\n */\nexport function bearerAuthenticationPolicy(options) {\n    return {\n        name: bearerAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"http\" && x.scheme === \"bearer\");\n            // Skip adding authentication header if no bearer authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const token = await options.credential.getBearerToken({\n                abortSignal: request.abortSignal,\n            });\n            request.headers.set(\"Authorization\", `Bearer ${token}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=bearerAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the OAuth2 Authentication Policy\n */\nexport const oauth2AuthenticationPolicyName = \"oauth2AuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds authorization header from OAuth2 schemes\n */\nexport function oauth2AuthenticationPolicy(options) {\n    return {\n        name: oauth2AuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"oauth2\");\n            // Skip adding authentication header if no OAuth2 authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const token = await options.credential.getOAuth2Token(scheme.flows, {\n                abortSignal: request.abortSignal,\n            });\n            request.headers.set(\"Authorization\", `Bearer ${token}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=oauth2AuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient } from \"../defaultHttpClient.js\";\nimport { createPipelineFromOptions } from \"../createPipelineFromOptions.js\";\nimport { apiVersionPolicy } from \"./apiVersionPolicy.js\";\nimport { isApiKeyCredential, isBasicCredential, isBearerTokenCredential, isOAuth2TokenCredential, } from \"../auth/credentials.js\";\nimport { apiKeyAuthenticationPolicy } from \"../policies/auth/apiKeyAuthenticationPolicy.js\";\nimport { basicAuthenticationPolicy } from \"../policies/auth/basicAuthenticationPolicy.js\";\nimport { bearerAuthenticationPolicy } from \"../policies/auth/bearerAuthenticationPolicy.js\";\nimport { oauth2AuthenticationPolicy } from \"../policies/auth/oauth2AuthenticationPolicy.js\";\nlet cachedHttpClient;\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(options = {}) {\n    const pipeline = createPipelineFromOptions(options);\n    pipeline.addPolicy(apiVersionPolicy(options));\n    const { credential, authSchemes, allowInsecureConnection } = options;\n    if (credential) {\n        if (isApiKeyCredential(credential)) {\n            pipeline.addPolicy(apiKeyAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if (isBasicCredential(credential)) {\n            pipeline.addPolicy(basicAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if (isBearerTokenCredential(credential)) {\n            pipeline.addPolicy(bearerAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if (isOAuth2TokenCredential(credential)) {\n            pipeline.addPolicy(oauth2AuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n    }\n    return pipeline;\n}\nexport function getCachedDefaultHttpsClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = createDefaultHttpClient();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=clientHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { RestError } from \"../restError.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBinaryBody } from \"../util/typeGuards.js\";\n/**\n * Get value of a header in the part descriptor ignoring case\n */\nfunction getHeaderValue(descriptor, headerName) {\n    if (descriptor.headers) {\n        const actualHeaderName = Object.keys(descriptor.headers).find((x) => x.toLowerCase() === headerName.toLowerCase());\n        if (actualHeaderName) {\n            return descriptor.headers[actualHeaderName];\n        }\n    }\n    return undefined;\n}\nfunction getPartContentType(descriptor) {\n    const contentTypeHeader = getHeaderValue(descriptor, \"content-type\");\n    if (contentTypeHeader) {\n        return contentTypeHeader;\n    }\n    // Special value of null means content type is to be omitted\n    if (descriptor.contentType === null) {\n        return undefined;\n    }\n    if (descriptor.contentType) {\n        return descriptor.contentType;\n    }\n    const { body } = descriptor;\n    if (body === null || body === undefined) {\n        return undefined;\n    }\n    if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n        return \"text/plain; charset=UTF-8\";\n    }\n    if (body instanceof Blob) {\n        return body.type || \"application/octet-stream\";\n    }\n    if (isBinaryBody(body)) {\n        return \"application/octet-stream\";\n    }\n    // arbitrary non-text object -> generic JSON content type by default. We will try to JSON.stringify the body.\n    return \"application/json\";\n}\n/**\n * Enclose value in quotes and escape special characters, for use in the Content-Disposition header\n */\nfunction escapeDispositionField(value) {\n    return JSON.stringify(value);\n}\nfunction getContentDisposition(descriptor) {\n    var _a;\n    const contentDispositionHeader = getHeaderValue(descriptor, \"content-disposition\");\n    if (contentDispositionHeader) {\n        return contentDispositionHeader;\n    }\n    if (descriptor.dispositionType === undefined &&\n        descriptor.name === undefined &&\n        descriptor.filename === undefined) {\n        return undefined;\n    }\n    const dispositionType = (_a = descriptor.dispositionType) !== null && _a !== void 0 ? _a : \"form-data\";\n    let disposition = dispositionType;\n    if (descriptor.name) {\n        disposition += `; name=${escapeDispositionField(descriptor.name)}`;\n    }\n    let filename = undefined;\n    if (descriptor.filename) {\n        filename = descriptor.filename;\n    }\n    else if (typeof File !== \"undefined\" && descriptor.body instanceof File) {\n        const filenameFromFile = descriptor.body.name;\n        if (filenameFromFile !== \"\") {\n            filename = filenameFromFile;\n        }\n    }\n    if (filename) {\n        disposition += `; filename=${escapeDispositionField(filename)}`;\n    }\n    return disposition;\n}\nfunction normalizeBody(body, contentType) {\n    if (body === undefined) {\n        // zero-length body\n        return new Uint8Array([]);\n    }\n    // binary and primitives should go straight on the wire regardless of content type\n    if (isBinaryBody(body)) {\n        return body;\n    }\n    if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n        return stringToUint8Array(String(body), \"utf-8\");\n    }\n    // stringify objects for JSON-ish content types e.g. application/json, application/merge-patch+json, application/vnd.oci.manifest.v1+json, application.json; charset=UTF-8\n    if (contentType && /application\\/(.+\\+)?json(;.+)?/i.test(String(contentType))) {\n        return stringToUint8Array(JSON.stringify(body), \"utf-8\");\n    }\n    throw new RestError(`Unsupported body/content-type combination: ${body}, ${contentType}`);\n}\nexport function buildBodyPart(descriptor) {\n    var _a;\n    const contentType = getPartContentType(descriptor);\n    const contentDisposition = getContentDisposition(descriptor);\n    const headers = createHttpHeaders((_a = descriptor.headers) !== null && _a !== void 0 ? _a : {});\n    if (contentType) {\n        headers.set(\"content-type\", contentType);\n    }\n    if (contentDisposition) {\n        headers.set(\"content-disposition\", contentDisposition);\n    }\n    const body = normalizeBody(descriptor.body, contentType);\n    return {\n        headers,\n        body,\n    };\n}\nexport function buildMultipartBody(parts) {\n    return { parts: parts.map(buildBodyPart) };\n}\n//# sourceMappingURL=multipart.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isRestError, RestError } from \"../restError.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport { createPipelineRequest } from \"../pipelineRequest.js\";\nimport { getCachedDefaultHttpsClient } from \"./clientHelpers.js\";\nimport { isReadableStream } from \"../util/typeGuards.js\";\nimport { buildMultipartBody } from \"./multipart.js\";\n/**\n * Helper function to send request used by the client\n * @param method - method to use to send the request\n * @param url - url to send the request to\n * @param pipeline - pipeline with the policies to run when sending the request\n * @param options - request options\n * @param customHttpClient - a custom HttpClient to use when making the request\n * @returns returns and HttpResponse\n */\nexport async function sendRequest(method, url, pipeline, options = {}, customHttpClient) {\n    var _a;\n    const httpClient = customHttpClient !== null && customHttpClient !== void 0 ? customHttpClient : getCachedDefaultHttpsClient();\n    const request = buildPipelineRequest(method, url, options);\n    try {\n        const response = await pipeline.sendRequest(httpClient, request);\n        const headers = response.headers.toJSON();\n        const stream = (_a = response.readableStreamBody) !== null && _a !== void 0 ? _a : response.browserStreamBody;\n        const parsedBody = options.responseAsStream || stream !== undefined ? undefined : getResponseBody(response);\n        const body = stream !== null && stream !== void 0 ? stream : parsedBody;\n        if (options === null || options === void 0 ? void 0 : options.onResponse) {\n            options.onResponse(Object.assign(Object.assign({}, response), { request, rawHeaders: headers, parsedBody }));\n        }\n        return {\n            request,\n            headers,\n            status: `${response.status}`,\n            body,\n        };\n    }\n    catch (e) {\n        if (isRestError(e) && e.response && options.onResponse) {\n            const { response } = e;\n            const rawHeaders = response.headers.toJSON();\n            // UNBRANDED DIFFERENCE: onResponse callback does not have a second __legacyError property\n            options === null || options === void 0 ? void 0 : options.onResponse(Object.assign(Object.assign({}, response), { request, rawHeaders }), e);\n        }\n        throw e;\n    }\n}\n/**\n * Function to determine the request content type\n * @param options - request options InternalRequestParameters\n * @returns returns the content-type\n */\nfunction getRequestContentType(options = {}) {\n    var _a, _b, _c;\n    return ((_c = (_a = options.contentType) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b[\"content-type\"]) !== null && _c !== void 0 ? _c : getContentType(options.body));\n}\n/**\n * Function to determine the content-type of a body\n * this is used if an explicit content-type is not provided\n * @param body - body in the request\n * @returns returns the content-type\n */\nfunction getContentType(body) {\n    if (ArrayBuffer.isView(body)) {\n        return \"application/octet-stream\";\n    }\n    if (typeof body === \"string\") {\n        try {\n            JSON.parse(body);\n            return \"application/json\";\n        }\n        catch (error) {\n            // If we fail to parse the body, it is not json\n            return undefined;\n        }\n    }\n    // By default return json\n    return \"application/json\";\n}\nfunction buildPipelineRequest(method, url, options = {}) {\n    var _a, _b, _c;\n    const requestContentType = getRequestContentType(options);\n    const { body, multipartBody } = getRequestBody(options.body, requestContentType);\n    const hasContent = body !== undefined || multipartBody !== undefined;\n    const headers = createHttpHeaders(Object.assign(Object.assign(Object.assign({}, (options.headers ? options.headers : {})), { accept: (_c = (_a = options.accept) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b.accept) !== null && _c !== void 0 ? _c : \"application/json\" }), (hasContent &&\n        requestContentType && {\n        \"content-type\": requestContentType,\n    })));\n    return createPipelineRequest({\n        url,\n        method,\n        body,\n        multipartBody,\n        headers,\n        allowInsecureConnection: options.allowInsecureConnection,\n        abortSignal: options.abortSignal,\n        onUploadProgress: options.onUploadProgress,\n        onDownloadProgress: options.onDownloadProgress,\n        timeout: options.timeout,\n        enableBrowserStreams: true,\n        streamResponseStatusCodes: options.responseAsStream\n            ? new Set([Number.POSITIVE_INFINITY])\n            : undefined,\n    });\n}\n/**\n * Prepares the body before sending the request\n */\nfunction getRequestBody(body, contentType = \"\") {\n    if (body === undefined) {\n        return { body: undefined };\n    }\n    if (typeof FormData !== \"undefined\" && body instanceof FormData) {\n        return { body };\n    }\n    if (isReadableStream(body)) {\n        return { body };\n    }\n    if (ArrayBuffer.isView(body)) {\n        return { body: body instanceof Uint8Array ? body : JSON.stringify(body) };\n    }\n    const firstType = contentType.split(\";\")[0];\n    switch (firstType) {\n        case \"application/json\":\n            return { body: JSON.stringify(body) };\n        case \"multipart/form-data\":\n            if (Array.isArray(body)) {\n                return { multipartBody: buildMultipartBody(body) };\n            }\n            return { body: JSON.stringify(body) };\n        case \"text/plain\":\n            return { body: String(body) };\n        default:\n            if (typeof body === \"string\") {\n                return { body };\n            }\n            return { body: JSON.stringify(body) };\n    }\n}\n/**\n * Prepares the response body\n */\nfunction getResponseBody(response) {\n    var _a, _b;\n    // Set the default response type\n    const contentType = (_a = response.headers.get(\"content-type\")) !== null && _a !== void 0 ? _a : \"\";\n    const firstType = contentType.split(\";\")[0];\n    const bodyToParse = (_b = response.bodyAsText) !== null && _b !== void 0 ? _b : \"\";\n    if (firstType === \"text/plain\") {\n        return String(bodyToParse);\n    }\n    // Default to \"application/json\" and fallback to string;\n    try {\n        return bodyToParse ? JSON.parse(bodyToParse) : undefined;\n    }\n    catch (error) {\n        // If we were supposed to get a JSON object and failed to\n        // parse, throw a parse error\n        if (firstType === \"application/json\") {\n            throw createParseError(response, error);\n        }\n        // We are not sure how to handle the response so we return it as\n        // plain text.\n        return String(bodyToParse);\n    }\n}\nfunction createParseError(response, err) {\n    var _a;\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${response.bodyAsText}.`;\n    const errCode = (_a = err.code) !== null && _a !== void 0 ? _a : RestError.PARSE_ERROR;\n    return new RestError(msg, {\n        code: errCode,\n        statusCode: response.status,\n        request: response.request,\n        response: response,\n    });\n}\n//# sourceMappingURL=sendRequest.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultPipeline } from \"./clientHelpers.js\";\nimport { sendRequest } from \"./sendRequest.js\";\nimport { buildRequestUrl } from \"./urlHelpers.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param credentials - Credentials to authenticate the requests\n * @param options - Client options\n */\nexport function getClient(endpoint, clientOptions = {}) {\n    var _a, _b, _c;\n    const pipeline = (_a = clientOptions.pipeline) !== null && _a !== void 0 ? _a : createDefaultPipeline(clientOptions);\n    if ((_b = clientOptions.additionalPolicies) === null || _b === void 0 ? void 0 : _b.length) {\n        for (const { policy, position } of clientOptions.additionalPolicies) {\n            // Sign happens after Retry and is commonly needed to occur\n            // before policies that intercept post-retry.\n            const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n            pipeline.addPolicy(policy, {\n                afterPhase,\n            });\n        }\n    }\n    const { allowInsecureConnection, httpClient } = clientOptions;\n    const endpointUrl = (_c = clientOptions.endpoint) !== null && _c !== void 0 ? _c : endpoint;\n    const client = (path, ...args) => {\n        const getUrl = (requestOptions) => buildRequestUrl(endpointUrl, path, args, Object.assign({ allowInsecureConnection }, requestOptions));\n        return {\n            get: (requestOptions = {}) => {\n                return buildOperation(\"GET\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            post: (requestOptions = {}) => {\n                return buildOperation(\"POST\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            put: (requestOptions = {}) => {\n                return buildOperation(\"PUT\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            patch: (requestOptions = {}) => {\n                return buildOperation(\"PATCH\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            delete: (requestOptions = {}) => {\n                return buildOperation(\"DELETE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            head: (requestOptions = {}) => {\n                return buildOperation(\"HEAD\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            options: (requestOptions = {}) => {\n                return buildOperation(\"OPTIONS\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            trace: (requestOptions = {}) => {\n                return buildOperation(\"TRACE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n        };\n    };\n    return {\n        path: client,\n        pathUnchecked: client,\n        pipeline,\n    };\n}\nfunction buildOperation(method, url, pipeline, options, allowInsecureConnection, httpClient) {\n    var _a;\n    allowInsecureConnection = (_a = options.allowInsecureConnection) !== null && _a !== void 0 ? _a : allowInsecureConnection;\n    return {\n        then: function (onFulfilled, onrejected) {\n            return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection }), httpClient).then(onFulfilled, onrejected);\n        },\n        async asBrowserStream() {\n            if (isNodeLike) {\n                throw new Error(\"`asBrowserStream` is supported only in the browser environment. Use `asNodeStream` instead to obtain the response body stream. If you require a Web stream of the response in Node, consider using `Readable.toWeb` on the result of `asNodeStream`.\");\n            }\n            else {\n                return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n            }\n        },\n        async asNodeStream() {\n            if (isNodeLike) {\n                return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n            }\n            else {\n                throw new Error(\"`isNodeStream` is not supported in the browser environment. Use `asBrowserStream` to obtain the response body stream.\");\n            }\n        },\n    };\n}\n//# sourceMappingURL=getClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { RestError } from \"../restError.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nexport function createRestError(messageOrResponse, response) {\n    var _a, _b, _c;\n    const resp = typeof messageOrResponse === \"string\" ? response : messageOrResponse;\n    const internalError = (_b = (_a = resp.body) === null || _a === void 0 ? void 0 : _a.error) !== null && _b !== void 0 ? _b : resp.body;\n    const message = typeof messageOrResponse === \"string\"\n        ? messageOrResponse\n        : ((_c = internalError === null || internalError === void 0 ? void 0 : internalError.message) !== null && _c !== void 0 ? _c : `Unexpected status code: ${resp.status}`);\n    return new RestError(message, {\n        statusCode: statusCodeToNumber(resp.status),\n        code: internalError === null || internalError === void 0 ? void 0 : internalError.code,\n        request: resp.request,\n        response: toPipelineResponse(resp),\n    });\n}\nfunction toPipelineResponse(response) {\n    var _a;\n    return {\n        headers: createHttpHeaders(response.headers),\n        request: response.request,\n        status: (_a = statusCodeToNumber(response.status)) !== null && _a !== void 0 ? _a : -1,\n    };\n}\nfunction statusCodeToNumber(statusCode) {\n    const status = Number.parseInt(statusCode);\n    return Number.isNaN(status) ? undefined : status;\n}\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : coreLogger.info;\n    const sanitizer = new Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n//# sourceMappingURL=logPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\n/**\n * The header that comes back from services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response) {\n    if (!(response && [429, 503].includes(response.status)))\n        return undefined;\n    try {\n        // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n        for (const header of AllRetryAfterHeaders) {\n            const retryAfterValue = parseHeaderValueAsNumber(response, header);\n            if (retryAfterValue === 0 || retryAfterValue) {\n                // \"Retry-After\" header ==> seconds\n                // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n                const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n                return retryAfterValue * multiplyingFactor; // in milli-seconds\n            }\n        }\n        // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n        const retryAfterHeader = response.headers.get(RetryAfterHeader);\n        if (!retryAfterHeader)\n            return;\n        const date = Date.parse(retryAfterHeader);\n        const diff = date - Date.now();\n        // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n        return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response) {\n    return Number.isFinite(getRetryAfterInMs(response));\n}\nexport function throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            const retryAfterInMs = getRetryAfterInMs(response);\n            if (!Number.isFinite(retryAfterInMs)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs,\n            };\n        },\n    };\n}\n//# sourceMappingURL=throttlingRetryStrategy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"./logger/logger.js\";\nexport const logger = createClientLogger(\"ts-http-runtime\");\n//# sourceMappingURL=log.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @internal\n */\nexport function getHeaderName() {\n    return \"x-ms-useragent\";\n}\nfunction getBrowserInfo(userAgent) {\n    const browserRegexes = [\n        { name: \"Firefox\", regex: /Firefox\\/([\\d.]+)/ },\n        { name: \"Safari\", regex: /Version\\/([\\d.]+).*Safari/ },\n    ];\n    for (const browser of browserRegexes) {\n        const match = userAgent.match(browser.regex);\n        if (match) {\n            return { brand: browser.name, version: match[1] };\n        }\n    }\n    return undefined;\n}\nfunction getBrandVersionString(brands) {\n    const brandOrder = [\"Google Chrome\", \"Microsoft Edge\", \"Opera\", \"Brave\", \"Chromium\"];\n    for (const brand of brandOrder) {\n        const foundBrand = brands.find((b) => b.brand === brand);\n        if (foundBrand) {\n            return foundBrand;\n        }\n    }\n    return undefined;\n}\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map) {\n    const localNavigator = globalThis.navigator;\n    let osPlatform = \"unknown\";\n    if (localNavigator === null || localNavigator === void 0 ? void 0 : localNavigator.userAgentData) {\n        const entropyValues = await localNavigator.userAgentData.getHighEntropyValues([\n            \"architecture\",\n            \"platformVersion\",\n        ]);\n        osPlatform = `${entropyValues.architecture}-${entropyValues.platform}-${entropyValues.platformVersion}`;\n        // Get the brand and version\n        const brand = getBrandVersionString(localNavigator.userAgentData.brands);\n        if (brand) {\n            map.set(brand.brand, brand.version);\n        }\n    }\n    else if (localNavigator === null || localNavigator === void 0 ? void 0 : localNavigator.platform) {\n        osPlatform = localNavigator.platform;\n        const brand = getBrowserInfo(localNavigator.userAgent);\n        if (brand) {\n            map.set(brand.brand, brand.version);\n        }\n    }\n    else if (typeof globalThis.EdgeRuntime === \"string\") {\n        map.set(\"EdgeRuntime\", globalThis.EdgeRuntime);\n    }\n    map.set(\"OS\", osPlatform);\n}\n//# sourceMappingURL=userAgentPlatform-browser.mjs.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nexport function getUserAgentHeaderName() {\n    return getHeaderName();\n}\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"ts-http-runtime\", SDK_VERSION);\n    await setPlatformSpecificData(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\nconst UserAgentHeaderName = getUserAgentHeaderName();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options = {}) {\n    const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const SDK_VERSION = \"0.2.3\";\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map"],"names":["RedactedString","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","allowedHeaderNames","allowedQueryParameters","n","p","obj","seen","key","value","url","sanitized","k","isError","e","hasName","hasMessage","defaultRetryPolicyName","defaultRetryPolicy","options","_a","agentPolicyName","agentPolicy","agent","req","next","decompressResponsePolicyName","decompressResponsePolicy","exponentialRetryPolicyName","exponentialRetryPolicy","systemErrorRetryPolicyName","systemErrorRetryPolicy","throttlingRetryPolicyName","throttlingRetryPolicy","proxyPolicyName","errorMessage","getDefaultProxySettings","proxyPolicy","resetCachedProxyAgents","redirectPolicyName","allowedRedirect","redirectPolicy","maxRetries","request","response","handleRedirect","currentRetries","status","headers","locationHeader","res","tlsPolicyName","tlsPolicy","tlsSettings","log","args","firstArg","debugEnvVariable","process","enabledString","enabledNamespaces","skippedNamespaces","debuggers","enable","debugObj","namespace","createDebugger","enabled","disable","namespaces","wildcard","namespaceList","ns","instance","skipped","enabledNamespace","result","newDebugger","debug","destroy","extend","index","TYPESPEC_RUNTIME_LOG_LEVELS","levelMap","patchLogMethod","parent","child","isTypeSpecRuntimeLogLevel","level","createLoggerContext","registeredLoggers","logLevelFromEnv","logLevel","clientLogger","contextSetLogLevel","logger","shouldEnable","createLogger","contextGetLogLevel","contextCreateClientLogger","clientRootLogger","context","TypeSpecRuntimeLogger","setLogLevel","getLogLevel","createClientLogger","uint8ArrayToString","bytes","format","uint8ArrayToUtf8String","uint8ArrayToBase64","uint8ArrayToBase64Url","uint8ArrayToHexString","stringToUint8Array","utf8StringToUint8Array","base64ToUint8Array","base64UrlToUint8Array","hexStringToUint8Array","x","base64String","hexDigits","i","highNibble","lowNibble","normalizeName","name","headerIterator","map","entry","HttpHeadersImpl","rawHeaders","headerName","normalizedName","createHttpHeaders","drain","stream","toBlobPart","source","concat","sources","parts","generateBoundary","encodeHeaders","getLength","getTotalLength","total","partLength","buildRequestBody","boundary","part","contentLength","multipartPolicyName","maxBoundaryLength","validBoundaryCharacters","assertValidBoundary","multipartPolicy","contentTypeHeader","parsedHeader","contentType","parsedBoundary","generateUUID","uuid","randomNumber","randomUUID","uuidFunction","subtleCrypto","getCrypto","computeSha256Hmac","stringToSign","encoding","crypto","keyBytes","stringToSignBytes","cryptoKey","signature","computeSha256Hash","content","contentBytes","digest","StandardAbortMessage","delay","delayInMs","resolve","reject","timer","onAborted","rejectOnAbort","removeListeners","parseHeaderValueAsNumber","valueAsNum","formDataPolicyName","formDataToFormDataMap","formData","formDataMap","formDataPolicy","wwwFormUrlEncode","prepareFormData","urlSearchParams","subValue","fieldName","values","fileName","_b","_c","_d","isBrowser","isWebWorker","isDeno","isBun","isNodeLike","isNodeRuntime","isReactNative","isObject","input","getRandomIntegerInclusive","min","max","calculateRetryDelay","retryAttempt","config","exponentialDelay","clampedDelay","DEFAULT_CLIENT_RETRY_INTERVAL","DEFAULT_CLIENT_MAX_RETRY_INTERVAL","exponentialRetryStrategy","retryInterval","maxRetryInterval","retryCount","responseError","matchedSystemError","isSystemError","ignoreSystemErrors","isExponential","isExponentialRetryResponse","ignoreExponentialResponse","err","retryPolicyLogger","retryPolicyName","retryPolicy","strategies","retryRequest","strategiesLoop","strategy","strategyLogger","modifiers","errorToThrow","retryAfterInMs","redirectTo","isNodeReadableStream","isWebReadableStream","isBinaryBody","body","isReadableStream","isBlob","AbortError","message","PipelineRequestImpl","_e","_f","_g","ValidPhaseNames","HttpPipeline","policies","policy","removedPolicies","policyDescriptor","httpClient","policyMap","createPhase","serializePhase","noPhase","deserializePhase","retryPhase","signPhase","orderedPhases","getPhase","phase","descriptor","policyName","node","afterPolicyName","afterNode","beforePolicyName","beforeNode","walkPhase","dependant","walkPhases","iteration","initialResultLength","custom","errorSanitizer","FetchHttpClient","makeRequest","getError","abortController","abortControllerCleanup","setupAbortSignal","buildFetchHeaders","streaming","requestBody","requestInit","buildPipelineResponse","httpResponse","buildPipelineHeaders","bodyStream","buildBodyStream","responseStream","abortListener","event","pipelineHeaders","responseHeaders","readableStream","loadedBytes","onProgress","onEnd","isTransformStreamSupported","chunk","controller","reader","done","reason","createFetchHttpClient","pipeline","insecureConnectionWarningEmmitted","allowInsecureConnection","emitInsecureConnectionWarning","warning","apiKeyAuthenticationPolicyName","scheme","basicAuthenticationPolicyName","username","password","headerValue","bearerAuthenticationPolicyName","token","oauth2AuthenticationPolicyName","cachedHttpClient","credential","authSchemes","getHeaderValue","actualHeaderName","getPartContentType","escapeDispositionField","getContentDisposition","contentDispositionHeader","disposition","filename","filenameFromFile","normalizeBody","buildBodyPart","contentDisposition","method","customHttpClient","buildPipelineRequest","parsedBody","getResponseBody","getRequestContentType","getContentType","requestContentType","multipartBody","getRequestBody","hasContent","firstType","bodyToParse","error","createParseError","msg","errCode","getClient","endpoint","clientOptions","position","afterPhase","endpointUrl","client","path","getUrl","requestOptions","buildOperation","onFulfilled","onrejected","createRestError","messageOrResponse","resp","internalError","statusCodeToNumber","toPipelineResponse","statusCode","logPolicyName","logPolicy","sanitizer","RetryAfterHeader","AllRetryAfterHeaders","getRetryAfterInMs","header","retryAfterValue","retryAfterHeader","diff","isThrottlingRetryResponse","throttlingRetryStrategy","getHeaderName","getBrowserInfo","userAgent","browserRegexes","browser","match","getBrandVersionString","brands","brandOrder","brand","foundBrand","b","localNavigator","osPlatform","entropyValues","getUserAgentString","telemetryInfo","getUserAgentHeaderName","prefix","runtimeInfo","defaultAgent","UserAgentHeaderName","userAgentPolicyName","userAgentPolicy","userAgentValue","SDK_VERSION","DEFAULT_RETRY_POLICY_COUNT"],"sourceRoot":""}