{"version":3,"file":"static/90.9bd695aa.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@graphiql/react/dist/matchbrackets.es2.js","webpack://app/../../node_modules/@graphiql/react/dist/sublime.es.js","webpack://app/../../node_modules/@graphiql/react/dist/searchcursor.es2.js"],"sourcesContent":["import { r as requireCodemirror } from \"./codemirror.es2.js\";\nvar matchbrackets = { exports: {} };\nvar hasRequiredMatchbrackets;\nfunction requireMatchbrackets() {\n  if (hasRequiredMatchbrackets) return matchbrackets.exports;\n  hasRequiredMatchbrackets = 1;\n  (function(module, exports) {\n    (function(mod) {\n      mod(requireCodemirror());\n    })(function(CodeMirror) {\n      var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) && (document.documentMode == null || document.documentMode < 8);\n      var Pos = CodeMirror.Pos;\n      var matching = { \"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\" };\n      function bracketRegex(config) {\n        return config && config.bracketRegex || /[(){}[\\]]/;\n      }\n      function findMatchingBracket(cm, where, config) {\n        var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n        var afterCursor = config && config.afterCursor;\n        if (afterCursor == null)\n          afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className);\n        var re = bracketRegex(config);\n        var match = !afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)] || re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n        if (!match) return null;\n        var dir = match.charAt(1) == \">\" ? 1 : -1;\n        if (config && config.strict && dir > 0 != (pos == where.ch)) return null;\n        var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n        var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n        if (found == null) return null;\n        return {\n          from: Pos(where.line, pos),\n          to: found && found.pos,\n          match: found && found.ch == match.charAt(0),\n          forward: dir > 0\n        };\n      }\n      function scanForBracket(cm, where, dir, style, config) {\n        var maxScanLen = config && config.maxScanLineLength || 1e4;\n        var maxScanLines = config && config.maxScanLines || 1e3;\n        var stack = [];\n        var re = bracketRegex(config);\n        var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1) : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n        for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n          var line = cm.getLine(lineNo);\n          if (!line) continue;\n          var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n          if (line.length > maxScanLen) continue;\n          if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n          for (; pos != end; pos += dir) {\n            var ch = line.charAt(pos);\n            if (re.test(ch) && (style === void 0 || (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n              var match = matching[ch];\n              if (match && match.charAt(1) == \">\" == dir > 0) stack.push(ch);\n              else if (!stack.length) return { pos: Pos(lineNo, pos), ch };\n              else stack.pop();\n            }\n          }\n        }\n        return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n      }\n      function matchBrackets(cm, autoclear, config) {\n        var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1e3, highlightNonMatching = config && config.highlightNonMatching;\n        var marks = [], ranges = cm.listSelections();\n        for (var i = 0; i < ranges.length; i++) {\n          var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n          if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n            var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n            marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), { className: style }));\n            if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n              marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), { className: style }));\n          }\n        }\n        if (marks.length) {\n          if (ie_lt8 && cm.state.focused) cm.focus();\n          var clear = function() {\n            cm.operation(function() {\n              for (var i2 = 0; i2 < marks.length; i2++) marks[i2].clear();\n            });\n          };\n          if (autoclear) setTimeout(clear, 800);\n          else return clear;\n        }\n      }\n      function doMatchBrackets(cm) {\n        cm.operation(function() {\n          if (cm.state.matchBrackets.currentlyHighlighted) {\n            cm.state.matchBrackets.currentlyHighlighted();\n            cm.state.matchBrackets.currentlyHighlighted = null;\n          }\n          cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n        });\n      }\n      function clearHighlighted(cm) {\n        if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n          cm.state.matchBrackets.currentlyHighlighted();\n          cm.state.matchBrackets.currentlyHighlighted = null;\n        }\n      }\n      CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n        if (old && old != CodeMirror.Init) {\n          cm.off(\"cursorActivity\", doMatchBrackets);\n          cm.off(\"focus\", doMatchBrackets);\n          cm.off(\"blur\", clearHighlighted);\n          clearHighlighted(cm);\n        }\n        if (val) {\n          cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n          cm.on(\"cursorActivity\", doMatchBrackets);\n          cm.on(\"focus\", doMatchBrackets);\n          cm.on(\"blur\", clearHighlighted);\n        }\n      });\n      CodeMirror.defineExtension(\"matchBrackets\", function() {\n        matchBrackets(this, true);\n      });\n      CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig) {\n        if (oldConfig || typeof config == \"boolean\") {\n          if (!oldConfig) {\n            config = config ? { strict: true } : null;\n          } else {\n            oldConfig.strict = config;\n            config = oldConfig;\n          }\n        }\n        return findMatchingBracket(this, pos, config);\n      });\n      CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config) {\n        return scanForBracket(this, pos, dir, style, config);\n      });\n    });\n  })();\n  return matchbrackets.exports;\n}\nexport {\n  requireMatchbrackets as r\n};\n//# sourceMappingURL=matchbrackets.es2.js.map\n","import { g as getDefaultExportFromCjs, r as requireCodemirror } from \"./codemirror.es2.js\";\nimport { r as requireSearchcursor } from \"./searchcursor.es2.js\";\nimport { r as requireMatchbrackets } from \"./matchbrackets.es2.js\";\nfunction _mergeNamespaces(n, m) {\n  for (var i = 0; i < m.length; i++) {\n    const e = m[i];\n    if (typeof e !== \"string\" && !Array.isArray(e)) {\n      for (const k in e) {\n        if (k !== \"default\" && !(k in n)) {\n          const d = Object.getOwnPropertyDescriptor(e, k);\n          if (d) {\n            Object.defineProperty(n, k, d.get ? d : {\n              enumerable: true,\n              get: () => e[k]\n            });\n          }\n        }\n      }\n    }\n  }\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\nvar sublime$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(requireCodemirror(), requireSearchcursor(), requireMatchbrackets());\n  })(function(CodeMirror) {\n    var cmds = CodeMirror.commands;\n    var Pos = CodeMirror.Pos;\n    function findPosSubword(doc, start, dir) {\n      if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n      var line = doc.getLine(start.line);\n      if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n      var state = \"start\", type, startPos = start.ch;\n      for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n        var next = line.charAt(dir < 0 ? pos - 1 : pos);\n        var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n        if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n        if (state == \"start\") {\n          if (cat != \"o\") {\n            state = \"in\";\n            type = cat;\n          } else startPos = pos + dir;\n        } else if (state == \"in\") {\n          if (type != cat) {\n            if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n            if (type == \"W\" && cat == \"w\" && dir > 0) {\n              if (pos == startPos + 1) {\n                type = \"w\";\n                continue;\n              } else pos--;\n            }\n            break;\n          }\n        }\n      }\n      return Pos(start.line, pos);\n    }\n    function moveSubword(cm, dir) {\n      cm.extendSelectionsBy(function(range) {\n        if (cm.display.shift || cm.doc.extend || range.empty())\n          return findPosSubword(cm.doc, range.head, dir);\n        else\n          return dir < 0 ? range.from() : range.to();\n      });\n    }\n    cmds.goSubwordLeft = function(cm) {\n      moveSubword(cm, -1);\n    };\n    cmds.goSubwordRight = function(cm) {\n      moveSubword(cm, 1);\n    };\n    cmds.scrollLineUp = function(cm) {\n      var info = cm.getScrollInfo();\n      if (!cm.somethingSelected()) {\n        var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n        if (cm.getCursor().line >= visibleBottomLine)\n          cm.execCommand(\"goLineUp\");\n      }\n      cm.scrollTo(null, info.top - cm.defaultTextHeight());\n    };\n    cmds.scrollLineDown = function(cm) {\n      var info = cm.getScrollInfo();\n      if (!cm.somethingSelected()) {\n        var visibleTopLine = cm.lineAtHeight(info.top, \"local\") + 1;\n        if (cm.getCursor().line <= visibleTopLine)\n          cm.execCommand(\"goLineDown\");\n      }\n      cm.scrollTo(null, info.top + cm.defaultTextHeight());\n    };\n    cmds.splitSelectionByLine = function(cm) {\n      var ranges = cm.listSelections(), lineRanges = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var from = ranges[i].from(), to = ranges[i].to();\n        for (var line = from.line; line <= to.line; ++line)\n          if (!(to.line > from.line && line == to.line && to.ch == 0))\n            lineRanges.push({\n              anchor: line == from.line ? from : Pos(line, 0),\n              head: line == to.line ? to : Pos(line)\n            });\n      }\n      cm.setSelections(lineRanges, 0);\n    };\n    cmds.singleSelectionTop = function(cm) {\n      var range = cm.listSelections()[0];\n      cm.setSelection(range.anchor, range.head, { scroll: false });\n    };\n    cmds.selectLine = function(cm) {\n      var ranges = cm.listSelections(), extended = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        extended.push({\n          anchor: Pos(range.from().line, 0),\n          head: Pos(range.to().line + 1, 0)\n        });\n      }\n      cm.setSelections(extended);\n    };\n    function insertLine(cm, above) {\n      if (cm.isReadOnly()) return CodeMirror.Pass;\n      cm.operation(function() {\n        var len = cm.listSelections().length, newSelection = [], last = -1;\n        for (var i = 0; i < len; i++) {\n          var head = cm.listSelections()[i].head;\n          if (head.line <= last) continue;\n          var at = Pos(head.line + (above ? 0 : 1), 0);\n          cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n          cm.indentLine(at.line, null, true);\n          newSelection.push({ head: at, anchor: at });\n          last = head.line + 1;\n        }\n        cm.setSelections(newSelection);\n      });\n      cm.execCommand(\"indentAuto\");\n    }\n    cmds.insertLineAfter = function(cm) {\n      return insertLine(cm, false);\n    };\n    cmds.insertLineBefore = function(cm) {\n      return insertLine(cm, true);\n    };\n    function wordAt(cm, pos) {\n      var start = pos.ch, end = start, line = cm.getLine(pos.line);\n      while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n      while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n      return { from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end) };\n    }\n    cmds.selectNextOccurrence = function(cm) {\n      var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n      var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n      if (CodeMirror.cmpPos(from, to) == 0) {\n        var word = wordAt(cm, from);\n        if (!word.word) return;\n        cm.setSelection(word.from, word.to);\n        fullWord = true;\n      } else {\n        var text = cm.getRange(from, to);\n        var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n        var cur = cm.getSearchCursor(query, to);\n        var found = cur.findNext();\n        if (!found) {\n          cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n          found = cur.findNext();\n        }\n        if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return;\n        cm.addSelection(cur.from(), cur.to());\n      }\n      if (fullWord)\n        cm.state.sublimeFindFullWord = cm.doc.sel;\n    };\n    cmds.skipAndSelectNextOccurrence = function(cm) {\n      var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n      cmds.selectNextOccurrence(cm);\n      if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n        cm.doc.setSelections(cm.doc.listSelections().filter(function(sel) {\n          return sel.anchor != prevAnchor || sel.head != prevHead;\n        }));\n      }\n    };\n    function addCursorToSelection(cm, dir) {\n      var ranges = cm.listSelections(), newRanges = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        var newAnchor = cm.findPosV(\n          range.anchor,\n          dir,\n          \"line\",\n          range.anchor.goalColumn\n        );\n        var newHead = cm.findPosV(\n          range.head,\n          dir,\n          \"line\",\n          range.head.goalColumn\n        );\n        newAnchor.goalColumn = range.anchor.goalColumn != null ? range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n        newHead.goalColumn = range.head.goalColumn != null ? range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n        var newRange = { anchor: newAnchor, head: newHead };\n        newRanges.push(range);\n        newRanges.push(newRange);\n      }\n      cm.setSelections(newRanges);\n    }\n    cmds.addCursorToPrevLine = function(cm) {\n      addCursorToSelection(cm, -1);\n    };\n    cmds.addCursorToNextLine = function(cm) {\n      addCursorToSelection(cm, 1);\n    };\n    function isSelectedRange(ranges, from, to) {\n      for (var i = 0; i < ranges.length; i++)\n        if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 && CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true;\n      return false;\n    }\n    var mirror = \"(){}[]\";\n    function selectBetweenBrackets(cm) {\n      var ranges = cm.listSelections(), newRanges = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n        if (!opening) return false;\n        for (; ; ) {\n          var closing = cm.scanForBracket(pos, 1);\n          if (!closing) return false;\n          if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n            var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n            if (CodeMirror.cmpPos(startPos, range.from()) == 0 && CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n              opening = cm.scanForBracket(opening.pos, -1);\n              if (!opening) return false;\n            } else {\n              newRanges.push({ anchor: startPos, head: closing.pos });\n              break;\n            }\n          }\n          pos = Pos(closing.pos.line, closing.pos.ch + 1);\n        }\n      }\n      cm.setSelections(newRanges);\n      return true;\n    }\n    cmds.selectScope = function(cm) {\n      selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n    };\n    cmds.selectBetweenBrackets = function(cm) {\n      if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n    };\n    function puncType(type) {\n      return !type ? null : /\\bpunctuation\\b/.test(type) ? type : void 0;\n    }\n    cmds.goToBracket = function(cm) {\n      cm.extendSelectionsBy(function(range) {\n        var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n        if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n        var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n        return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n      });\n    };\n    cmds.swapLineUp = function(cm) {\n      if (cm.isReadOnly()) return CodeMirror.Pass;\n      var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n        newSels.push({\n          anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n          head: Pos(range.head.line - 1, range.head.ch)\n        });\n        if (range.to().ch == 0 && !range.empty()) --to;\n        if (from > at) linesToMove.push(from, to);\n        else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n        at = to;\n      }\n      cm.operation(function() {\n        for (var i2 = 0; i2 < linesToMove.length; i2 += 2) {\n          var from2 = linesToMove[i2], to2 = linesToMove[i2 + 1];\n          var line = cm.getLine(from2);\n          cm.replaceRange(\"\", Pos(from2, 0), Pos(from2 + 1, 0), \"+swapLine\");\n          if (to2 > cm.lastLine())\n            cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n          else\n            cm.replaceRange(line + \"\\n\", Pos(to2, 0), null, \"+swapLine\");\n        }\n        cm.setSelections(newSels);\n        cm.scrollIntoView();\n      });\n    };\n    cmds.swapLineDown = function(cm) {\n      if (cm.isReadOnly()) return CodeMirror.Pass;\n      var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n      for (var i = ranges.length - 1; i >= 0; i--) {\n        var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n        if (range.to().ch == 0 && !range.empty()) from--;\n        if (from < at) linesToMove.push(from, to);\n        else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n        at = to;\n      }\n      cm.operation(function() {\n        for (var i2 = linesToMove.length - 2; i2 >= 0; i2 -= 2) {\n          var from2 = linesToMove[i2], to2 = linesToMove[i2 + 1];\n          var line = cm.getLine(from2);\n          if (from2 == cm.lastLine())\n            cm.replaceRange(\"\", Pos(from2 - 1), Pos(from2), \"+swapLine\");\n          else\n            cm.replaceRange(\"\", Pos(from2, 0), Pos(from2 + 1, 0), \"+swapLine\");\n          cm.replaceRange(line + \"\\n\", Pos(to2, 0), null, \"+swapLine\");\n        }\n        cm.scrollIntoView();\n      });\n    };\n    cmds.toggleCommentIndented = function(cm) {\n      cm.toggleComment({ indent: true });\n    };\n    cmds.joinLines = function(cm) {\n      var ranges = cm.listSelections(), joined = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i], from = range.from();\n        var start = from.line, end = range.to().line;\n        while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n          end = ranges[++i].to().line;\n        joined.push({ start, end, anchor: !range.empty() && from });\n      }\n      cm.operation(function() {\n        var offset = 0, ranges2 = [];\n        for (var i2 = 0; i2 < joined.length; i2++) {\n          var obj = joined[i2];\n          var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n          for (var line = obj.start; line <= obj.end; line++) {\n            var actual = line - offset;\n            if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n            if (actual < cm.lastLine()) {\n              cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n              ++offset;\n            }\n          }\n          ranges2.push({ anchor: anchor || head, head });\n        }\n        cm.setSelections(ranges2, 0);\n      });\n    };\n    cmds.duplicateLine = function(cm) {\n      cm.operation(function() {\n        var rangeCount = cm.listSelections().length;\n        for (var i = 0; i < rangeCount; i++) {\n          var range = cm.listSelections()[i];\n          if (range.empty())\n            cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n          else\n            cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n        }\n        cm.scrollIntoView();\n      });\n    };\n    function sortLines(cm, caseSensitive, direction) {\n      if (cm.isReadOnly()) return CodeMirror.Pass;\n      var ranges = cm.listSelections(), toSort = [], selected;\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) continue;\n        var from = range.from().line, to = range.to().line;\n        while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n          to = ranges[++i].to().line;\n        if (!ranges[i].to().ch) to--;\n        toSort.push(from, to);\n      }\n      if (toSort.length) selected = true;\n      else toSort.push(cm.firstLine(), cm.lastLine());\n      cm.operation(function() {\n        var ranges2 = [];\n        for (var i2 = 0; i2 < toSort.length; i2 += 2) {\n          var from2 = toSort[i2], to2 = toSort[i2 + 1];\n          var start = Pos(from2, 0), end = Pos(to2);\n          var lines = cm.getRange(start, end, false);\n          if (caseSensitive)\n            lines.sort(function(a, b) {\n              return a < b ? -direction : a == b ? 0 : direction;\n            });\n          else\n            lines.sort(function(a, b) {\n              var au = a.toUpperCase(), bu = b.toUpperCase();\n              if (au != bu) {\n                a = au;\n                b = bu;\n              }\n              return a < b ? -direction : a == b ? 0 : direction;\n            });\n          cm.replaceRange(lines, start, end);\n          if (selected) ranges2.push({ anchor: start, head: Pos(to2 + 1, 0) });\n        }\n        if (selected) cm.setSelections(ranges2, 0);\n      });\n    }\n    cmds.sortLines = function(cm) {\n      sortLines(cm, true, 1);\n    };\n    cmds.reverseSortLines = function(cm) {\n      sortLines(cm, true, -1);\n    };\n    cmds.sortLinesInsensitive = function(cm) {\n      sortLines(cm, false, 1);\n    };\n    cmds.reverseSortLinesInsensitive = function(cm) {\n      sortLines(cm, false, -1);\n    };\n    cmds.nextBookmark = function(cm) {\n      var marks = cm.state.sublimeBookmarks;\n      if (marks) while (marks.length) {\n        var current = marks.shift();\n        var found = current.find();\n        if (found) {\n          marks.push(current);\n          return cm.setSelection(found.from, found.to);\n        }\n      }\n    };\n    cmds.prevBookmark = function(cm) {\n      var marks = cm.state.sublimeBookmarks;\n      if (marks) while (marks.length) {\n        marks.unshift(marks.pop());\n        var found = marks[marks.length - 1].find();\n        if (!found)\n          marks.pop();\n        else\n          return cm.setSelection(found.from, found.to);\n      }\n    };\n    cmds.toggleBookmark = function(cm) {\n      var ranges = cm.listSelections();\n      var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n      for (var i = 0; i < ranges.length; i++) {\n        var from = ranges[i].from(), to = ranges[i].to();\n        var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n        for (var j = 0; j < found.length; j++) {\n          if (found[j].sublimeBookmark) {\n            found[j].clear();\n            for (var k = 0; k < marks.length; k++)\n              if (marks[k] == found[j])\n                marks.splice(k--, 1);\n            break;\n          }\n        }\n        if (j == found.length)\n          marks.push(cm.markText(from, to, { sublimeBookmark: true, clearWhenEmpty: false }));\n      }\n    };\n    cmds.clearBookmarks = function(cm) {\n      var marks = cm.state.sublimeBookmarks;\n      if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n      marks.length = 0;\n    };\n    cmds.selectBookmarks = function(cm) {\n      var marks = cm.state.sublimeBookmarks, ranges = [];\n      if (marks) for (var i = 0; i < marks.length; i++) {\n        var found = marks[i].find();\n        if (!found)\n          marks.splice(i--, 0);\n        else\n          ranges.push({ anchor: found.from, head: found.to });\n      }\n      if (ranges.length)\n        cm.setSelections(ranges, 0);\n    };\n    function modifyWordOrSelection(cm, mod) {\n      cm.operation(function() {\n        var ranges = cm.listSelections(), indices = [], replacements = [];\n        for (var i = 0; i < ranges.length; i++) {\n          var range = ranges[i];\n          if (range.empty()) {\n            indices.push(i);\n            replacements.push(\"\");\n          } else replacements.push(mod(cm.getRange(range.from(), range.to())));\n        }\n        cm.replaceSelections(replacements, \"around\", \"case\");\n        for (var i = indices.length - 1, at; i >= 0; i--) {\n          var range = ranges[indices[i]];\n          if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n          var word = wordAt(cm, range.head);\n          at = word.from;\n          cm.replaceRange(mod(word.word), word.from, word.to);\n        }\n      });\n    }\n    cmds.smartBackspace = function(cm) {\n      if (cm.somethingSelected()) return CodeMirror.Pass;\n      cm.operation(function() {\n        var cursors = cm.listSelections();\n        var indentUnit = cm.getOption(\"indentUnit\");\n        for (var i = cursors.length - 1; i >= 0; i--) {\n          var cursor = cursors[i].head;\n          var toStartOfLine = cm.getRange({ line: cursor.line, ch: 0 }, cursor);\n          var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n          var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n          if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n            var prevIndent = new Pos(\n              cursor.line,\n              CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit)\n            );\n            if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n          }\n          cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n        }\n      });\n    };\n    cmds.delLineRight = function(cm) {\n      cm.operation(function() {\n        var ranges = cm.listSelections();\n        for (var i = ranges.length - 1; i >= 0; i--)\n          cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n        cm.scrollIntoView();\n      });\n    };\n    cmds.upcaseAtCursor = function(cm) {\n      modifyWordOrSelection(cm, function(str) {\n        return str.toUpperCase();\n      });\n    };\n    cmds.downcaseAtCursor = function(cm) {\n      modifyWordOrSelection(cm, function(str) {\n        return str.toLowerCase();\n      });\n    };\n    cmds.setSublimeMark = function(cm) {\n      if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n    };\n    cmds.selectToSublimeMark = function(cm) {\n      var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n      if (found) cm.setSelection(cm.getCursor(), found);\n    };\n    cmds.deleteToSublimeMark = function(cm) {\n      var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n      if (found) {\n        var from = cm.getCursor(), to = found;\n        if (CodeMirror.cmpPos(from, to) > 0) {\n          var tmp = to;\n          to = from;\n          from = tmp;\n        }\n        cm.state.sublimeKilled = cm.getRange(from, to);\n        cm.replaceRange(\"\", from, to);\n      }\n    };\n    cmds.swapWithSublimeMark = function(cm) {\n      var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n      if (found) {\n        cm.state.sublimeMark.clear();\n        cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n        cm.setCursor(found);\n      }\n    };\n    cmds.sublimeYank = function(cm) {\n      if (cm.state.sublimeKilled != null)\n        cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n    };\n    cmds.showInCenter = function(cm) {\n      var pos = cm.cursorCoords(null, \"local\");\n      cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n    };\n    function getTarget(cm) {\n      var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n      if (CodeMirror.cmpPos(from, to) == 0) {\n        var word = wordAt(cm, from);\n        if (!word.word) return;\n        from = word.from;\n        to = word.to;\n      }\n      return { from, to, query: cm.getRange(from, to), word };\n    }\n    function findAndGoTo(cm, forward) {\n      var target = getTarget(cm);\n      if (!target) return;\n      var query = target.query;\n      var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n      if (forward ? cur.findNext() : cur.findPrevious()) {\n        cm.setSelection(cur.from(), cur.to());\n      } else {\n        cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0) : cm.clipPos(Pos(cm.lastLine())));\n        if (forward ? cur.findNext() : cur.findPrevious())\n          cm.setSelection(cur.from(), cur.to());\n        else if (target.word)\n          cm.setSelection(target.from, target.to);\n      }\n    }\n    cmds.findUnder = function(cm) {\n      findAndGoTo(cm, true);\n    };\n    cmds.findUnderPrevious = function(cm) {\n      findAndGoTo(cm, false);\n    };\n    cmds.findAllUnder = function(cm) {\n      var target = getTarget(cm);\n      if (!target) return;\n      var cur = cm.getSearchCursor(target.query);\n      var matches = [];\n      var primaryIndex = -1;\n      while (cur.findNext()) {\n        matches.push({ anchor: cur.from(), head: cur.to() });\n        if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n          primaryIndex++;\n      }\n      cm.setSelections(matches, primaryIndex);\n    };\n    var keyMap = CodeMirror.keyMap;\n    keyMap.macSublime = {\n      \"Cmd-Left\": \"goLineStartSmart\",\n      \"Shift-Tab\": \"indentLess\",\n      \"Shift-Ctrl-K\": \"deleteLine\",\n      \"Alt-Q\": \"wrapLines\",\n      \"Ctrl-Left\": \"goSubwordLeft\",\n      \"Ctrl-Right\": \"goSubwordRight\",\n      \"Ctrl-Alt-Up\": \"scrollLineUp\",\n      \"Ctrl-Alt-Down\": \"scrollLineDown\",\n      \"Cmd-L\": \"selectLine\",\n      \"Shift-Cmd-L\": \"splitSelectionByLine\",\n      \"Esc\": \"singleSelectionTop\",\n      \"Cmd-Enter\": \"insertLineAfter\",\n      \"Shift-Cmd-Enter\": \"insertLineBefore\",\n      \"Cmd-D\": \"selectNextOccurrence\",\n      \"Shift-Cmd-Space\": \"selectScope\",\n      \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n      \"Cmd-M\": \"goToBracket\",\n      \"Cmd-Ctrl-Up\": \"swapLineUp\",\n      \"Cmd-Ctrl-Down\": \"swapLineDown\",\n      \"Cmd-/\": \"toggleCommentIndented\",\n      \"Cmd-J\": \"joinLines\",\n      \"Shift-Cmd-D\": \"duplicateLine\",\n      \"F5\": \"sortLines\",\n      \"Shift-F5\": \"reverseSortLines\",\n      \"Cmd-F5\": \"sortLinesInsensitive\",\n      \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n      \"F2\": \"nextBookmark\",\n      \"Shift-F2\": \"prevBookmark\",\n      \"Cmd-F2\": \"toggleBookmark\",\n      \"Shift-Cmd-F2\": \"clearBookmarks\",\n      \"Alt-F2\": \"selectBookmarks\",\n      \"Backspace\": \"smartBackspace\",\n      \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n      \"Cmd-K Cmd-K\": \"delLineRight\",\n      \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n      \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n      \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n      \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n      \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n      \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n      \"Cmd-K Cmd-Y\": \"sublimeYank\",\n      \"Cmd-K Cmd-C\": \"showInCenter\",\n      \"Cmd-K Cmd-G\": \"clearBookmarks\",\n      \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n      \"Cmd-K Cmd-1\": \"foldAll\",\n      \"Cmd-K Cmd-0\": \"unfoldAll\",\n      \"Cmd-K Cmd-J\": \"unfoldAll\",\n      \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n      \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n      \"Cmd-F3\": \"findUnder\",\n      \"Shift-Cmd-F3\": \"findUnderPrevious\",\n      \"Alt-F3\": \"findAllUnder\",\n      \"Shift-Cmd-[\": \"fold\",\n      \"Shift-Cmd-]\": \"unfold\",\n      \"Cmd-I\": \"findIncremental\",\n      \"Shift-Cmd-I\": \"findIncrementalReverse\",\n      \"Cmd-H\": \"replace\",\n      \"F3\": \"findNext\",\n      \"Shift-F3\": \"findPrev\",\n      \"fallthrough\": \"macDefault\"\n    };\n    CodeMirror.normalizeKeyMap(keyMap.macSublime);\n    keyMap.pcSublime = {\n      \"Shift-Tab\": \"indentLess\",\n      \"Shift-Ctrl-K\": \"deleteLine\",\n      \"Alt-Q\": \"wrapLines\",\n      \"Ctrl-T\": \"transposeChars\",\n      \"Alt-Left\": \"goSubwordLeft\",\n      \"Alt-Right\": \"goSubwordRight\",\n      \"Ctrl-Up\": \"scrollLineUp\",\n      \"Ctrl-Down\": \"scrollLineDown\",\n      \"Ctrl-L\": \"selectLine\",\n      \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n      \"Esc\": \"singleSelectionTop\",\n      \"Ctrl-Enter\": \"insertLineAfter\",\n      \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n      \"Ctrl-D\": \"selectNextOccurrence\",\n      \"Shift-Ctrl-Space\": \"selectScope\",\n      \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n      \"Ctrl-M\": \"goToBracket\",\n      \"Shift-Ctrl-Up\": \"swapLineUp\",\n      \"Shift-Ctrl-Down\": \"swapLineDown\",\n      \"Ctrl-/\": \"toggleCommentIndented\",\n      \"Ctrl-J\": \"joinLines\",\n      \"Shift-Ctrl-D\": \"duplicateLine\",\n      \"F9\": \"sortLines\",\n      \"Shift-F9\": \"reverseSortLines\",\n      \"Ctrl-F9\": \"sortLinesInsensitive\",\n      \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n      \"F2\": \"nextBookmark\",\n      \"Shift-F2\": \"prevBookmark\",\n      \"Ctrl-F2\": \"toggleBookmark\",\n      \"Shift-Ctrl-F2\": \"clearBookmarks\",\n      \"Alt-F2\": \"selectBookmarks\",\n      \"Backspace\": \"smartBackspace\",\n      \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n      \"Ctrl-K Ctrl-K\": \"delLineRight\",\n      \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n      \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n      \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n      \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n      \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n      \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n      \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n      \"Ctrl-K Ctrl-C\": \"showInCenter\",\n      \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n      \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n      \"Ctrl-K Ctrl-1\": \"foldAll\",\n      \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n      \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n      \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n      \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n      \"Ctrl-F3\": \"findUnder\",\n      \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n      \"Alt-F3\": \"findAllUnder\",\n      \"Shift-Ctrl-[\": \"fold\",\n      \"Shift-Ctrl-]\": \"unfold\",\n      \"Ctrl-I\": \"findIncremental\",\n      \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n      \"Ctrl-H\": \"replace\",\n      \"F3\": \"findNext\",\n      \"Shift-F3\": \"findPrev\",\n      \"fallthrough\": \"pcDefault\"\n    };\n    CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n    var mac = keyMap.default == keyMap.macDefault;\n    keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n  });\n})();\nvar sublimeExports = sublime$2.exports;\nconst sublime = /* @__PURE__ */ getDefaultExportFromCjs(sublimeExports);\nconst sublime$1 = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  default: sublime\n}, [sublimeExports]);\nexport {\n  sublime$1 as s\n};\n//# sourceMappingURL=sublime.es.js.map\n","import { r as requireCodemirror } from \"./codemirror.es2.js\";\nvar searchcursor = { exports: {} };\nvar hasRequiredSearchcursor;\nfunction requireSearchcursor() {\n  if (hasRequiredSearchcursor) return searchcursor.exports;\n  hasRequiredSearchcursor = 1;\n  (function(module, exports) {\n    (function(mod) {\n      mod(requireCodemirror());\n    })(function(CodeMirror) {\n      var Pos = CodeMirror.Pos;\n      function regexpFlags(regexp) {\n        var flags = regexp.flags;\n        return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\") + (regexp.global ? \"g\" : \"\") + (regexp.multiline ? \"m\" : \"\");\n      }\n      function ensureFlags(regexp, flags) {\n        var current = regexpFlags(regexp), target = current;\n        for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n          target += flags.charAt(i);\n        return current == target ? regexp : new RegExp(regexp.source, target);\n      }\n      function maybeMultiline(regexp) {\n        return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source);\n      }\n      function searchRegexpForward(doc, regexp, start) {\n        regexp = ensureFlags(regexp, \"g\");\n        for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n          regexp.lastIndex = ch;\n          var string = doc.getLine(line), match = regexp.exec(string);\n          if (match)\n            return {\n              from: Pos(line, match.index),\n              to: Pos(line, match.index + match[0].length),\n              match\n            };\n        }\n      }\n      function searchRegexpForwardMultiline(doc, regexp, start) {\n        if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start);\n        regexp = ensureFlags(regexp, \"gm\");\n        var string, chunk = 1;\n        for (var line = start.line, last = doc.lastLine(); line <= last; ) {\n          for (var i = 0; i < chunk; i++) {\n            if (line > last) break;\n            var curLine = doc.getLine(line++);\n            string = string == null ? curLine : string + \"\\n\" + curLine;\n          }\n          chunk = chunk * 2;\n          regexp.lastIndex = start.ch;\n          var match = regexp.exec(string);\n          if (match) {\n            var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n            var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length;\n            return {\n              from: Pos(startLine, startCh),\n              to: Pos(\n                startLine + inside.length - 1,\n                inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length\n              ),\n              match\n            };\n          }\n        }\n      }\n      function lastMatchIn(string, regexp, endMargin) {\n        var match, from = 0;\n        while (from <= string.length) {\n          regexp.lastIndex = from;\n          var newMatch = regexp.exec(string);\n          if (!newMatch) break;\n          var end = newMatch.index + newMatch[0].length;\n          if (end > string.length - endMargin) break;\n          if (!match || end > match.index + match[0].length)\n            match = newMatch;\n          from = newMatch.index + 1;\n        }\n        return match;\n      }\n      function searchRegexpBackward(doc, regexp, start) {\n        regexp = ensureFlags(regexp, \"g\");\n        for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n          var string = doc.getLine(line);\n          var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch);\n          if (match)\n            return {\n              from: Pos(line, match.index),\n              to: Pos(line, match.index + match[0].length),\n              match\n            };\n        }\n      }\n      function searchRegexpBackwardMultiline(doc, regexp, start) {\n        if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start);\n        regexp = ensureFlags(regexp, \"gm\");\n        var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch;\n        for (var line = start.line, first = doc.firstLine(); line >= first; ) {\n          for (var i = 0; i < chunkSize && line >= first; i++) {\n            var curLine = doc.getLine(line--);\n            string = string == null ? curLine : curLine + \"\\n\" + string;\n          }\n          chunkSize *= 2;\n          var match = lastMatchIn(string, regexp, endMargin);\n          if (match) {\n            var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n            var startLine = line + before.length, startCh = before[before.length - 1].length;\n            return {\n              from: Pos(startLine, startCh),\n              to: Pos(\n                startLine + inside.length - 1,\n                inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length\n              ),\n              match\n            };\n          }\n        }\n      }\n      var doFold, noFold;\n      if (String.prototype.normalize) {\n        doFold = function(str) {\n          return str.normalize(\"NFD\").toLowerCase();\n        };\n        noFold = function(str) {\n          return str.normalize(\"NFD\");\n        };\n      } else {\n        doFold = function(str) {\n          return str.toLowerCase();\n        };\n        noFold = function(str) {\n          return str;\n        };\n      }\n      function adjustPos(orig, folded, pos, foldFunc) {\n        if (orig.length == folded.length) return pos;\n        for (var min = 0, max = pos + Math.max(0, orig.length - folded.length); ; ) {\n          if (min == max) return min;\n          var mid = min + max >> 1;\n          var len = foldFunc(orig.slice(0, mid)).length;\n          if (len == pos) return mid;\n          else if (len > pos) max = mid;\n          else min = mid + 1;\n        }\n      }\n      function searchStringForward(doc, query, start, caseFold) {\n        if (!query.length) return null;\n        var fold = caseFold ? doFold : noFold;\n        var lines = fold(query).split(/\\r|\\n\\r?/);\n        search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n          var orig = doc.getLine(line).slice(ch), string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.indexOf(lines[0]);\n            if (found == -1) continue search;\n            var start = adjustPos(orig, string, found, fold) + ch;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)\n            };\n          } else {\n            var cutFrom = string.length - lines[0].length;\n            if (string.slice(cutFrom) != lines[0]) continue search;\n            for (var i = 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(line + i)) != lines[i]) continue search;\n            var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1];\n            if (endString.slice(0, lastLine.length) != lastLine) continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n              to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))\n            };\n          }\n        }\n      }\n      function searchStringBackward(doc, query, start, caseFold) {\n        if (!query.length) return null;\n        var fold = caseFold ? doFold : noFold;\n        var lines = fold(query).split(/\\r|\\n\\r?/);\n        search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n          var orig = doc.getLine(line);\n          if (ch > -1) orig = orig.slice(0, ch);\n          var string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.lastIndexOf(lines[0]);\n            if (found == -1) continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold)),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))\n            };\n          } else {\n            var lastLine = lines[lines.length - 1];\n            if (string.slice(0, lastLine.length) != lastLine) continue search;\n            for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(start + i)) != lines[i]) continue search;\n            var top = doc.getLine(line + 1 - lines.length), topString = fold(top);\n            if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search;\n            return {\n              from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n              to: Pos(line, adjustPos(orig, string, lastLine.length, fold))\n            };\n          }\n        }\n      }\n      function SearchCursor(doc, query, pos, options) {\n        this.atOccurrence = false;\n        this.afterEmptyMatch = false;\n        this.doc = doc;\n        pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n        this.pos = { from: pos, to: pos };\n        var caseFold;\n        if (typeof options == \"object\") {\n          caseFold = options.caseFold;\n        } else {\n          caseFold = options;\n          options = null;\n        }\n        if (typeof query == \"string\") {\n          if (caseFold == null) caseFold = false;\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos2, caseFold);\n          };\n        } else {\n          query = ensureFlags(query, \"gm\");\n          if (!options || options.multiline !== false)\n            this.matches = function(reverse, pos2) {\n              return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos2);\n            };\n          else\n            this.matches = function(reverse, pos2) {\n              return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos2);\n            };\n        }\n      }\n      SearchCursor.prototype = {\n        findNext: function() {\n          return this.find(false);\n        },\n        findPrevious: function() {\n          return this.find(true);\n        },\n        find: function(reverse) {\n          var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n          if (this.afterEmptyMatch && this.atOccurrence) {\n            head = Pos(head.line, head.ch);\n            if (reverse) {\n              head.ch--;\n              if (head.ch < 0) {\n                head.line--;\n                head.ch = (this.doc.getLine(head.line) || \"\").length;\n              }\n            } else {\n              head.ch++;\n              if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n                head.ch = 0;\n                head.line++;\n              }\n            }\n            if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n              return this.atOccurrence = false;\n            }\n          }\n          var result = this.matches(reverse, head);\n          this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0;\n          if (result) {\n            this.pos = result;\n            this.atOccurrence = true;\n            return this.pos.match || true;\n          } else {\n            var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);\n            this.pos = { from: end, to: end };\n            return this.atOccurrence = false;\n          }\n        },\n        from: function() {\n          if (this.atOccurrence) return this.pos.from;\n        },\n        to: function() {\n          if (this.atOccurrence) return this.pos.to;\n        },\n        replace: function(newText, origin) {\n          if (!this.atOccurrence) return;\n          var lines = CodeMirror.splitLines(newText);\n          this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin);\n          this.pos.to = Pos(\n            this.pos.from.line + lines.length - 1,\n            lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0)\n          );\n        }\n      };\n      CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n        return new SearchCursor(this.doc, query, pos, caseFold);\n      });\n      CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n        return new SearchCursor(this, query, pos, caseFold);\n      });\n      CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n        var ranges = [];\n        var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n        while (cur.findNext()) {\n          if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break;\n          ranges.push({ anchor: cur.from(), head: cur.to() });\n        }\n        if (ranges.length)\n          this.setSelections(ranges, 0);\n      });\n    });\n  })();\n  return searchcursor.exports;\n}\nexport {\n  requireSearchcursor as r\n};\n//# sourceMappingURL=searchcursor.es2.js.map\n"],"names":["matchbrackets","hasRequiredMatchbrackets","requireMatchbrackets","module","exports","mod","CodeMirror","ie_lt8","Pos","matching","bracketRegex","config","findMatchingBracket","cm","where","line","pos","afterCursor","re","match","dir","style","found","scanForBracket","maxScanLen","maxScanLines","stack","lineEnd","lineNo","end","ch","matchBrackets","autoclear","maxHighlightLen","highlightNonMatching","marks","ranges","clear","i2","doMatchBrackets","clearHighlighted","val","old","oldConfig","_mergeNamespaces","n","m","i","e","k","d","sublime$2","cmds","findPosSubword","doc","start","state","type","startPos","next","cat","moveSubword","range","info","visibleBottomLine","visibleTopLine","lineRanges","from","to","extended","insertLine","above","len","newSelection","last","head","at","wordAt","fullWord","word","text","query","cur","isSelectedRange","prevAnchor","prevHead","sel","addCursorToSelection","newRanges","newAnchor","newHead","newRange","mirror","selectBetweenBrackets","opening","closing","puncType","prev","linesToMove","newSels","from2","to2","joined","offset","ranges2","obj","anchor","actual","rangeCount","sortLines","caseSensitive","direction","toSort","selected","lines","a","b","au","bu","current","j","modifyWordOrSelection","indices","replacements","cursors","indentUnit","cursor","toStartOfLine","column","deletePos","prevIndent","str","tmp","getTarget","findAndGoTo","forward","target","matches","primaryIndex","keyMap","mac","sublimeExports","sublime$1","searchcursor","hasRequiredSearchcursor","requireSearchcursor","regexpFlags","regexp","flags","ensureFlags","maybeMultiline","searchRegexpForward","string","searchRegexpForwardMultiline","chunk","curLine","before","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","searchRegexpBackward","first","searchRegexpBackwardMultiline","chunkSize","doFold","noFold","adjustPos","orig","folded","foldFunc","min","max","mid","searchStringForward","caseFold","fold","search","cutFrom","endString","lastLine","searchStringBackward","top","topString","SearchCursor","options","reverse","pos2","result","newText","origin"],"sourceRoot":""}