{"version":3,"file":"static/module-fp-ts.093aa6d4.js","mappings":"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","sources":["webpack://app/../../node_modules/fp-ts/lib/Apply.js","webpack://app/../../node_modules/fp-ts/lib/ChainRec.js","webpack://app/../../node_modules/fp-ts/lib/internal.js","webpack://app/../../node_modules/fp-ts/lib/FromEither.js","webpack://app/../../node_modules/fp-ts/lib/ReadonlyArray.js","webpack://app/../../node_modules/fp-ts/lib/Either.js","webpack://app/../../node_modules/fp-ts/lib/Semigroup.js","webpack://app/../../node_modules/fp-ts/lib/Functor.js","webpack://app/../../node_modules/fp-ts/lib/Ord.js","webpack://app/../../node_modules/fp-ts/lib/Magma.js","webpack://app/../../node_modules/fp-ts/lib/Applicative.js","webpack://app/../../node_modules/fp-ts/lib/function.js","webpack://app/../../node_modules/fp-ts/lib/pipeable.js","webpack://app/../../node_modules/fp-ts/lib/Array.js","webpack://app/../../node_modules/fp-ts/lib/NonEmptyArray.js","webpack://app/../../node_modules/fp-ts/lib/Eq.js","webpack://app/../../node_modules/fp-ts/lib/Chain.js","webpack://app/../../node_modules/fp-ts/lib/number.js","webpack://app/../../node_modules/fp-ts/lib/Record.js","webpack://app/../../node_modules/fp-ts/lib/Predicate.js","webpack://app/../../node_modules/fp-ts/lib/Option.js","webpack://app/../../node_modules/fp-ts/lib/Separated.js","webpack://app/../../node_modules/fp-ts/lib/Zero.js","webpack://app/../../node_modules/fp-ts/es6/Chain.js","webpack://app/../../node_modules/fp-ts/es6/ChainRec.js","webpack://app/../../node_modules/fp-ts/es6/function.js","webpack://app/../../node_modules/fp-ts/es6/Functor.js","webpack://app/../../node_modules/fp-ts/es6/internal.js","webpack://app/../../node_modules/fp-ts/es6/Either.js","webpack://app/../../node_modules/fp-ts/lib/string.js","webpack://app/../../node_modules/fp-ts/lib/ReadonlyRecord.js","webpack://app/../../node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js","webpack://app/../../node_modules/fp-ts/lib/Witherable.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ap = ap;\nexports.apFirst = apFirst;\nexports.apSecond = apSecond;\nexports.apS = apS;\nexports.getApplySemigroup = getApplySemigroup;\nexports.sequenceT = sequenceT;\nexports.sequenceS = sequenceS;\n/**\n * The `Apply` class provides the `ap` which is used to apply a function to an argument under a type constructor.\n *\n * `Apply` can be used to lift functions of two or more arguments to work on values wrapped with the type constructor\n * `f`.\n *\n * Instances must satisfy the following law in addition to the `Functor` laws:\n *\n * 1. Associative composition: `F.ap(F.ap(F.map(fbc, bc => ab => a => bc(ab(a))), fab), fa) <-> F.ap(fbc, F.ap(fab, fa))`\n *\n * Formally, `Apply` represents a strong lax semi-monoidal endofunctor.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (a: string) => (b: number) => (c: boolean) => a + String(b) + String(c)\n * const fa: O.Option<string> = O.some('s')\n * const fb: O.Option<number> = O.some(1)\n * const fc: O.Option<boolean> = O.some(true)\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     // lift a function\n *     O.some(f),\n *     // apply the first argument\n *     O.ap(fa),\n *     // apply the second argument\n *     O.ap(fb),\n *     // apply the third argument\n *     O.ap(fc)\n *   ),\n *   O.some('s1true')\n * )\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction ap(F, G) {\n    return function (fa) {\n        return function (fab) {\n            return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n        };\n    };\n}\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nfunction apSecond(A) {\n    return function (second) {\n        return function (first) {\n            return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n        };\n    };\n}\nfunction apS(F) {\n    return function (name, fb) {\n        return function (fa) {\n            return F.ap(F.map(fa, function (a) { return function (b) {\n                var _a;\n                return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n            }; }), fb);\n        };\n    };\n}\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!_.has.call(tupleConstructors, len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tailRec = void 0;\n/**\n * @since 2.0.0\n */\nvar tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\nexports.tailRec = tailRec;\n","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flatMapReader = exports.flatMapTask = exports.flatMapIO = exports.flatMapEither = exports.flatMapOption = exports.flatMapNullable = exports.liftOption = exports.liftNullable = exports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n/** @internal */\nvar liftNullable = function (F) {\n    return function (f, onNullable) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither(o == null ? (0, exports.left)(onNullable.apply(void 0, a)) : (0, exports.right)(o));\n        };\n    };\n};\nexports.liftNullable = liftNullable;\n/** @internal */\nvar liftOption = function (F) {\n    return function (f, onNone) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither((0, exports.isNone)(o) ? (0, exports.left)(onNone.apply(void 0, a)) : (0, exports.right)(o.value));\n        };\n    };\n};\nexports.liftOption = liftOption;\n/** @internal */\nvar flatMapNullable = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(3, function (self, f, onNullable) {\n        return M.flatMap(self, (0, exports.liftNullable)(F)(f, onNullable));\n    });\n};\nexports.flatMapNullable = flatMapNullable;\n/** @internal */\nvar flatMapOption = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(3, function (self, f, onNone) { return M.flatMap(self, (0, exports.liftOption)(F)(f, onNone)); });\n};\nexports.flatMapOption = flatMapOption;\n/** @internal */\nvar flatMapEither = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromEither(f(a)); });\n    });\n};\nexports.flatMapEither = flatMapEither;\n/** @internal */\nvar flatMapIO = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromIO(f(a)); });\n    });\n};\nexports.flatMapIO = flatMapIO;\n/** @internal */\nvar flatMapTask = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromTask(f(a)); });\n    });\n};\nexports.flatMapTask = flatMapTask;\n/** @internal */\nvar flatMapReader = function (F, M) {\n    return /*#__PURE__*/ (0, function_1.dual)(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromReader(f(a)); });\n    });\n};\nexports.flatMapReader = flatMapReader;\n","\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromOption = fromOption;\nexports.fromPredicate = fromPredicate;\nexports.fromOptionK = fromOptionK;\nexports.chainOptionK = chainOptionK;\nexports.fromEitherK = fromEitherK;\nexports.chainEitherK = chainEitherK;\nexports.chainFirstEitherK = chainFirstEitherK;\nexports.filterOrElse = filterOrElse;\nexports.tapEither = tapEither;\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return (0, function_1.flow)(f, from); };\n    };\n}\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nfunction fromEitherK(F) {\n    return function (f) { return (0, function_1.flow)(f, F.fromEither); };\n}\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nfunction chainFirstEitherK(F, M) {\n    var tapEitherM = tapEither(F, M);\n    return function (f) { return function (ma) { return tapEitherM(ma, f); }; };\n}\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\n/** @internal */\nfunction tapEither(F, M) {\n    var fromEither = fromEitherK(F);\n    var tapM = (0, Chain_1.tap)(M);\n    return function (self, f) { return tapM(self, fromEither(f)); };\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortBy = exports.uniq = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findFirstMap = exports.findIndex = exports.dropRight = exports.dropLeft = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.flatMap = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports._chainRecBreadthFirst = exports._chainRecDepthFirst = exports.concat = exports.concatW = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = void 0;\nexports.cons = exports.range = exports.chain = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.intercalate = exports.exists = exports.some = exports.empty = exports.fromArray = exports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.Witherable = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = void 0;\nexports.fromPredicate = fromPredicate;\nexports.lookup = lookup;\nexports.takeLeftWhile = takeLeftWhile;\nexports.spanLeft = spanLeft;\nexports.dropLeftWhile = dropLeftWhile;\nexports.findFirst = findFirst;\nexports.findLast = findLast;\nexports.zip = zip;\nexports.elem = elem;\nexports.comprehension = comprehension;\nexports.union = union;\nexports.intersection = intersection;\nexports.difference = difference;\nexports.every = every;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar N = __importStar(require(\"./number\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexports.isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @since 2.11.0\n */\nexports.prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @since 2.11.0\n */\nexports.appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar replicate = function (n, a) { return (0, exports.makeBy)(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : exports.empty); };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? exports.empty : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? exports.empty : [e.right]); };\nexports.fromEither = fromEither;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\nexports.matchW = matchW;\n/**\n * @category pattern matching\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n    };\n};\nexports.matchLeftW = matchLeftW;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n    };\n};\nexports.matchRightW = matchRightW;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category sequencing\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        if ((0, exports.isEmpty)(as)) {\n            return exports.empty;\n        }\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            var bs = f(i, as[i]);\n            for (var j = 0; j < bs.length; j++) {\n                out.push(bs[j]);\n            }\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.5.0\n */\nvar scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.5.0\n */\nvar scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexports.isOutOfBound = RNEA.isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : (0, exports.isOutOfBound)(i, as) ? _.none : _.some(as[i]);\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nvar head = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(RNEA.head(as)) : _.none); };\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nvar last = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(RNEA.last(as)) : _.none); };\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nvar tail = function (as) {\n    return (0, exports.isNonEmpty)(as) ? _.some(RNEA.tail(as)) : _.none;\n};\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nvar init = function (as) {\n    return (0, exports.isNonEmpty)(as) ? _.some(RNEA.init(as)) : _.none;\n};\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @since 2.5.0\n */\nvar takeLeft = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n    };\n};\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nvar takeRight = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n    };\n};\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? exports.empty : out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = (0, exports.splitAt)(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @since 2.5.0\n */\nvar dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n    };\n};\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @since 2.5.0\n */\nvar dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n    };\n};\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nvar findIndex = function (predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nvar findFirstMap = function (f) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nvar findLastMap = function (f) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nvar findLastIndex = function (predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return (0, exports.modifyAt)(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nvar deleteAt = function (i) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeDeleteAt)(i, as));\n    };\n};\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.5.0\n */\nvar reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.5.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.5.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? as : as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.5.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.5.0\n */\nvar rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.5.0\n */\nvar uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.5.0\n */\nvar sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : as); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.5.0\n */\nvar chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? g(as) : exports.empty); };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && (0, exports.isNonEmpty)(as) ? RNEA.splitAt(n)(as) : (0, exports.isEmpty)(as) ? [as, exports.empty] : [exports.empty, as];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.5.0\n */\nvar chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : exports.empty); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category lifting\n * @since 2.11.0\n */\nvar fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.fromOption)(f.apply(void 0, a));\n    };\n};\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return (0, exports.isNonEmpty)(input)\n            ? (0, exports.flatMap)(RNEA.head(input), function (a) { return go((0, function_1.pipe)(scope, (0, exports.append)(a)), RNEA.tail(input)); })\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : exports.empty;\n    };\n    return go(exports.empty, input);\n}\n/**\n * @since 2.11.0\n */\nvar concatW = function (second) {\n    return function (first) {\n        return (0, exports.isEmpty)(first) ? second : (0, exports.isEmpty)(second) ? first : first.concat(second);\n    };\n};\nexports.concatW = concatW;\n/**\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return (0, exports.isNonEmpty)(first) && (0, exports.isNonEmpty)(second) ? unionE(second)(first) : (0, exports.isNonEmpty)(first) ? first : second;\n    };\n}\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\nvar _filter = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.filter)(predicate));\n};\nvar _filterMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMap)(f)); };\nvar _partition = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.partition)(predicate));\n};\nvar _partitionMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMap)(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.partitionWithIndex)(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMapWithIndex)(f)); };\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMapWithIndex)(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.filterWithIndex)(predicateWithIndex)); };\nvar _extend = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.extend)(f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nvar _chainRecDepthFirst = function (a, f) { return (0, function_1.pipe)(a, (0, exports.chainRecDepthFirst)(f)); };\nexports._chainRecDepthFirst = _chainRecDepthFirst;\n/** @internal */\nvar _chainRecBreadthFirst = function (a, f) { return (0, function_1.pipe)(a, (0, exports.chainRecBreadthFirst)(f)); };\nexports._chainRecBreadthFirst = _chainRecBreadthFirst;\n/**\n * @category constructors\n * @since 2.5.0\n */\nexports.of = RNEA.of;\n/**\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.flatMap((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.flatMap(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = (0, exports.flatMap)(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category mapping\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return (0, Separated_1.separated)(left, right);\n};\nexports.separate = separate;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\nexports.filter = filter;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return (0, exports.filterMapWithIndex)(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category filtering\n * @since 2.5.0\n */\nexports.compact = (0, exports.filterMap)(function_1.identity);\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return (0, exports.partitionWithIndex)(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var a = as[i];\n            if (predicateWithIndex(i, a)) {\n                right.push(a);\n            }\n            else {\n                left.push(a);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return (0, exports.partitionMapWithIndex)(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category filtering\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * @since 2.5.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category folding\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) {\n    return function (f) {\n        return function (fa) {\n            return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n        };\n    };\n};\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return (0, exports.reduceWithIndex)(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return (0, exports.reduceRightWithIndex)(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) {\n    return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n}; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of((0, exports.zero)()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return (0, function_1.pipe)(as, (0, exports.append)(a)); }; }), fa);\n        });\n    };\n};\nexports.sequence = sequence;\n/**\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return (0, exports.reduceWithIndex)(F.of((0, exports.zero)()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, a));\n        });\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return ((0, exports.isEmpty)(first) ? second : (0, exports.isEmpty)(second) ? first : first.concat(second)); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: exports.empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return (0, Eq_1.fromEquals)(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nvar getOrd = function (O) {\n    return (0, Ord_1.fromCompare)(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: (0, exports.getUnionSemigroup)(E).concat,\n    empty: exports.empty\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexports.guard = (0, Zero_1.guard)(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nvar chainRecDepthFirst = function (f) {\n    return function (a) {\n        var todo = __spreadArray([], f(a), true);\n        var out = [];\n        while (todo.length > 0) {\n            var e = todo.shift();\n            if (_.isLeft(e)) {\n                todo.unshift.apply(todo, f(e.left));\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        return out;\n    };\n};\nexports.chainRecDepthFirst = chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: exports._chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nvar chainRecBreadthFirst = function (f) {\n    return function (a) {\n        var initial = f(a);\n        var todo = [];\n        var out = [];\n        function go(e) {\n            if (_.isLeft(e)) {\n                f(e.left).forEach(function (v) { return todo.push(v); });\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n            var e = initial_1[_i];\n            go(e);\n        }\n        while (todo.length > 0) {\n            go(todo.shift());\n        }\n        return out;\n    };\n};\nexports.chainRecBreadthFirst = chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: exports._chainRecBreadthFirst\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexports.filterE = (0, Witherable_1.filterE)(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexports.fromEitherK = (0, FromEither_1.fromEitherK)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return (0, exports.isNonEmpty)(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n/**\n * @category conversions\n * @since 2.5.0\n */\nvar toArray = function (as) { return as.slice(); };\nexports.toArray = toArray;\n/**\n * @category conversions\n * @since 2.5.0\n */\nvar fromArray = function (as) { return ((0, exports.isEmpty)(as) ? exports.empty : as.slice()); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = RNEA.empty;\nfunction every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return (0, exports.match)(function () { return M.empty; }, intercalateM(middle)); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.5.0\n */\nexports.chain = exports.flatMap;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RA.Functor` instead of `RA.readonlyArray`\n * (where `RA` is from `import RA from 'fp-ts/ReadonlyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.match = exports.foldW = exports.matchW = exports.isRight = exports.isLeft = exports.fromOption = exports.fromPredicate = exports.FromEither = exports.MonadThrow = exports.throwError = exports.ChainRec = exports.Extend = exports.extend = exports.Alt = exports.alt = exports.altW = exports.Bifunctor = exports.mapLeft = exports.bimap = exports.Traversable = exports.sequence = exports.traverse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.Applicative = exports.Apply = exports.ap = exports.apW = exports.Pointed = exports.of = exports.asUnit = exports.as = exports.Functor = exports.map = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = exports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.flatMap = exports.right = exports.left = void 0;\nexports.either = exports.stringifyJSON = exports.chainFirstW = exports.chainFirst = exports.chain = exports.chainW = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.orElse = exports.orElseW = exports.swap = exports.filterOrElseW = exports.filterOrElse = exports.flatMapOption = exports.flatMapNullable = exports.liftOption = exports.liftNullable = exports.chainOptionKW = exports.chainOptionK = exports.fromOptionK = exports.duplicate = exports.flatten = exports.flattenW = exports.tap = exports.apSecondW = exports.apSecond = exports.apFirstW = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = exports.fold = void 0;\nexports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = void 0;\nexports.toError = toError;\nexports.elem = elem;\nexports.parseJSON = parseJSON;\nexports.getValidation = getValidation;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar chainable = __importStar(require(\"./Chain\"));\nvar ChainRec_1 = require(\"./ChainRec\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.right = _.right;\n/**\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) { return ((0, exports.isLeft)(ma) ? ma : f(ma.right)); });\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return (0, function_1.pipe)(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return (0, function_1.pipe)(fa, (0, exports.bimap)(f, g)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\nvar _chainRec = function (a, f) {\n    return (0, ChainRec_1.tailRec)(f(a), function (e) {\n        return (0, exports.isLeft)(e) ? (0, exports.right)((0, exports.left)(e.left)) : (0, exports.isLeft)(e.right) ? (0, exports.left)(f(e.right.left)) : (0, exports.right)((0, exports.right)(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (SE, SA) { return ({\n    show: function (ma) { return ((0, exports.isLeft)(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || ((0, exports.isLeft)(x) ? (0, exports.isLeft)(y) && EL.equals(x.left, y.left) : (0, exports.isRight)(y) && EA.equals(x.right, y.right));\n    }\n}); };\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function (S) { return ({\n    concat: function (x, y) { return ((0, exports.isLeft)(y) ? x : (0, exports.isLeft)(x) ? y : (0, exports.right)(S.concat(x.right, y.right))); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return ((0, exports.isLeft)(ma) ? ma : ma.right._tag === 'None' ? empty : (0, exports.right)(ma.right.value)); },\n        separate: function (ma) {\n            return (0, exports.isLeft)(ma)\n                ? (0, Separated_1.separated)(ma, ma)\n                : (0, exports.isLeft)(ma.right)\n                    ? (0, Separated_1.separated)((0, exports.right)(ma.right.left), empty)\n                    : (0, Separated_1.separated)(empty, (0, exports.right)(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getFilterable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    var _a = (0, exports.getCompactable)(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return (0, exports.isLeft)(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return (0, exports.isLeft)(ma)\n            ? (0, Separated_1.separated)(ma, ma)\n            : p(ma.right)\n                ? (0, Separated_1.separated)(empty, (0, exports.right)(ma.right))\n                : (0, Separated_1.separated)((0, exports.right)(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : (0, exports.right)(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return (0, Separated_1.separated)(ma, ma);\n            }\n            var e = f(ma.right);\n            return (0, exports.isLeft)(e) ? (0, Separated_1.separated)((0, exports.right)(e.left), empty) : (0, Separated_1.separated)(empty, (0, exports.right)(e.right));\n        }\n    };\n};\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nvar getWitherable = function (M) {\n    var F_ = (0, exports.getFilterable)(M);\n    var C = (0, exports.getCompactable)(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: (0, Witherable_1.witherDefault)(exports.Traversable, C),\n        wilt: (0, Witherable_1.wiltDefault)(exports.Traversable, C)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getApplicativeValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return (0, exports.isLeft)(fab)\n            ? (0, exports.isLeft)(fa)\n                ? (0, exports.left)(SE.concat(fab.left, fa.left))\n                : fab\n            : (0, exports.isLeft)(fa)\n                ? fa\n                : (0, exports.right)(fab.right(fa.right));\n    },\n    of: exports.of\n}); };\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getAltValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if ((0, exports.isRight)(me)) {\n            return me;\n        }\n        var ea = that();\n        return (0, exports.isLeft)(ea) ? (0, exports.left)(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\nexports.getAltValidation = getAltValidation;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? fa : (0, exports.right)(f(fa.right));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Maps the `Right` value of this `Either` to the specified constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.as = (0, function_1.dual)(2, (0, Functor_1.as)(exports.Functor));\n/**\n * Maps the `Right` value of this `Either` to the void constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.asUnit = (0, Functor_1.asUnit)(exports.Functor);\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) {\n    return (0, exports.isLeft)(fab) ? fab : (0, exports.isLeft)(fa) ? fa : (0, exports.right)(fab.right(fa.right));\n}; };\nexports.apW = apW;\n/**\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return (0, exports.isLeft)(ta) ? F.of((0, exports.left)(ta.left)) : F.map(f(ta.right), exports.right);\n        };\n    };\n};\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? F.of((0, exports.left)(ma.left)) : F.map(ma.right, exports.right);\n    };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : (0, exports.right)(g(fa.right));\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return (0, exports.isLeft)(wa) ? wa : (0, exports.right)(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexports.fromPredicate = (0, FromEither_1.fromPredicate)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/ (0, FromEither_1.fromOption)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apFirstW = exports.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apSecondW = exports.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category combinators\n * @since 2.15.0\n */\nexports.tap = (0, function_1.dual)(2, chainable.tap(exports.Chain));\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexports.flattenW = \n/*#__PURE__*/ (0, exports.flatMap)(function_1.identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * Use `liftOption`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/ (0, FromEither_1.fromOptionK)(exports.FromEither);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.11.0\n */\nexports.chainOptionK = (0, FromEither_1.chainOptionK)(exports.FromEither, exports.Chain);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.13.2\n */\nexports.chainOptionKW = exports.chainOptionK;\n/** @internal */\nvar _FromEither = {\n    fromEither: exports.FromEither.fromEither\n};\n/**\n * @category lifting\n * @since 2.15.0\n */\nexports.liftNullable = _.liftNullable(_FromEither);\n/**\n * @category lifting\n * @since 2.15.0\n */\nexports.liftOption = _.liftOption(_FromEither);\n/** @internal */\nvar _FlatMap = {\n    flatMap: exports.flatMap\n};\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapNullable = _.flatMapNullable(_FromEither, _FlatMap);\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexports.flatMapOption = _.flatMapOption(_FromEither, _FlatMap);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filterOrElse = (0, FromEither_1.filterOrElse)(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nvar swap = function (ma) { return ((0, exports.isLeft)(ma) ? (0, exports.right)(ma.left) : (0, exports.left)(ma.right)); };\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma;\n    };\n};\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function (e) {\n    return function (a) {\n        return a == null ? (0, exports.left)(e) : (0, exports.right)(a);\n    };\n};\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return (0, exports.right)(f());\n    }\n    catch (e) {\n        return (0, exports.left)(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * Use `liftNullable`.\n *\n * @category legacy\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = (0, exports.fromNullable)(e);\n    return function (f) { return (0, function_1.flow)(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * Use `flatMapNullable`.\n *\n * @category legacy\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = (0, exports.fromNullableK)(e);\n    return function (f) { return (0, exports.flatMap)(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.toUnion = (0, exports.foldW)(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    try {\n        return e instanceof Error ? e : new Error(String(e));\n    }\n    catch (error) {\n        return new Error();\n    }\n}\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return (0, exports.isLeft)(ma) ? false : E.equals(a, ma.right);\n    };\n}\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? false : predicate(ma.right);\n    };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = chainable.bind(exports.Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if ((0, exports.isLeft)(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if ((0, exports.isLeft)(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return (0, exports.right)(out);\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.6.0\n */\nexports.chainW = exports.flatMap;\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chainFirst = exports.tap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.8.0\n */\nexports.chainFirstW = exports.tap;\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction parseJSON(s, onError) {\n    return (0, exports.tryCatch)(function () { return JSON.parse(s); }, onError);\n}\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return (0, exports.tryCatch)(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: exports.flatMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/ (0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/ (0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return (0, Apply_1.getApplySemigroup)((0, exports.getApplicativeValidation)(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return (0, Applicative_1.getApplicativeMonoid)((0, exports.getApplicativeValidation)(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = (0, exports.getApplicativeValidation)(SE).ap;\n    var alt = (0, exports.getAltValidation)(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: exports.flatMap,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.semigroupVoid = exports.concatAll = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\nexports.fold = fold;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar M = __importStar(require(\"./Magma\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @since 2.10.0\n */\nexports.reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @since 2.10.0\n */\nvar intercalate = function (middle) {\n    return function (S) { return ({\n        concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n    }); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexports.concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupVoid = (0, exports.constant)(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = (0, exports.concatAll)(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = map;\nexports.flap = flap;\nexports.bindTo = bindTo;\nexports.let = let_;\nexports.getFunctorComposition = getFunctorComposition;\nexports.as = as;\nexports.asUnit = asUnit;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return (0, function_1.pipe)(fga, _map(f)); }\n    };\n}\n/** @internal */\nfunction as(F) {\n    return function (self, b) { return F.map(self, function () { return b; }); };\n}\n/** @internal */\nfunction asUnit(F) {\n    var asM = as(F);\n    return function (self) { return asM(self, undefined); };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.equals = exports.trivial = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) {\n    return function (first, second) {\n        return first === second || compare(first, second) === 0;\n    };\n};\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: (0, exports.equalsDefault)(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return (0, exports.fromCompare)(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @since 2.10.0\n */\nvar reverse = function (O) { return (0, exports.fromCompare)(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.contramap)(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Ord<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for ordering (meaning we have an `Ord<X>`)\n *\n * For example, given the following `User` type, there are lots of possible choices for `X`,\n * but let's say we want to sort a list of users by `lastName`.\n *\n * If we have a way of comparing `lastName`s for ordering (`ordLastName: Ord<string>`) and we know how to go from `User -> string`,\n * using `contramap` we can do this\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import { contramap, Ord } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const ordLastName: Ord<string> = S.Ord\n *\n * const ordByLastName: Ord<User> = pipe(\n *   ordLastName,\n *   contramap((user) => user.lastName)\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordByLastName)([\n *     { firstName: 'a', lastName: 'd' },\n *     { firstName: 'c', lastName: 'b' }\n *   ]),\n *   [\n *     { firstName: 'c', lastName: 'b' },\n *     { firstName: 'a', lastName: 'd' }\n *   ]\n * )\n *\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return (0, exports.fromCompare)(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * A typical use case for the `Semigroup` instance of `Ord` is merging two or more orderings.\n *\n * For example the following snippet builds an `Ord` for a type `User` which\n * sorts by `created` date descending, and **then** `lastName`\n *\n * @example\n * import * as D from 'fp-ts/Date'\n * import { pipe } from 'fp-ts/function'\n * import { contramap, getSemigroup, Ord, reverse } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly id: string\n *   readonly lastName: string\n *   readonly created: Date\n * }\n *\n * const ordByLastName: Ord<User> = pipe(\n *   S.Ord,\n *   contramap((user) => user.lastName)\n * )\n *\n * const ordByCreated: Ord<User> = pipe(\n *   D.Ord,\n *   contramap((user) => user.created)\n * )\n *\n * const ordUserByCreatedDescThenLastName = getSemigroup<User>().concat(\n *   reverse(ordByCreated),\n *   ordByLastName\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordUserByCreatedDescThenLastName)([\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) }\n *   ]),\n *   [\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) }\n *   ]\n * )\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return (0, exports.fromCompare)(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: (0, exports.fromCompare)(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexports.trivial = {\n    equals: function_1.constTrue,\n    compare: /*#__PURE__*/ (0, function_1.constant)(0)\n};\n/**\n * @since 2.11.0\n */\nvar equals = function (O) {\n    return function (second) {\n        return function (first) {\n            return first === second || O.compare(first, second) === 0;\n        };\n    };\n};\nexports.equals = equals;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === -1;\n    };\n};\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === 1;\n    };\n};\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== 1;\n    };\n};\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== -1;\n    };\n};\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) < 1 ? first : second;\n    };\n};\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) > -1 ? first : second;\n    };\n};\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = (0, exports.min)(O);\n    var maxO = (0, exports.max)(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = (0, exports.lt)(O);\n    var gtO = (0, exports.gt)(O);\n    return function (low, hi) { return function (a) { return ltO(a, low) || gtO(a, hi) ? false : true; }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = (0, function_1.pipe)(exports.ordNumber, \n/*#__PURE__*/\n(0, exports.contramap)(function (date) { return date.valueOf(); }));\n","\"use strict\";\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatAll = exports.endo = exports.filterSecond = exports.filterFirst = exports.reverse = void 0;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @since 2.11.0\n */\nvar reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\nexports.reverse = reverse;\n/**\n * @since 2.11.0\n */\nvar filterFirst = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n    }); };\n};\nexports.filterFirst = filterFirst;\n/**\n * @since 2.11.0\n */\nvar filterSecond = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n    }); };\n};\nexports.filterSecond = filterSecond;\n/**\n * @since 2.11.0\n */\nvar endo = function (f) {\n    return function (M) { return ({\n        concat: function (first, second) { return M.concat(f(first), f(second)); }\n    }); };\n};\nexports.endo = endo;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nvar concatAll = function (M) {\n    return function (startWith) {\n        return function (as) {\n            return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n        };\n    };\n};\nexports.concatAll = concatAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeMonoid = getApplicativeMonoid;\nexports.getApplicativeComposition = getApplicativeComposition;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = (0, Apply_1.getApplySemigroup)(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = (0, Functor_1.getFunctorComposition)(F, G).map;\n    var _ap = (0, Apply_1.ap)(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return (0, function_1.pipe)(fgab, _ap(fga)); }\n    };\n}\n","\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dual = exports.getEndomorphismMonoid = exports.SK = exports.hole = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.unsafeCoerce = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\nexports.identity = identity;\nexports.constant = constant;\nexports.flip = flip;\nexports.flow = flow;\nexports.tuple = tuple;\nexports.increment = increment;\nexports.decrement = decrement;\nexports.absurd = absurd;\nexports.tupled = tupled;\nexports.untupled = untupled;\nexports.pipe = pipe;\nexports.not = not;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = (0, exports.getSemigroup)(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = (0, exports.getSemiring)(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\nfunction flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n/** @internal */\nvar dual = function (arity, body) {\n    var isDataFirst = typeof arity === 'number' ? function (args) { return args.length >= arity; } : arity;\n    return function () {\n        var args = Array.from(arguments);\n        if (isDataFirst(arguments)) {\n            return body.apply(this, args);\n        }\n        return function (self) { return body.apply(void 0, __spreadArray([self], args, false)); };\n    };\n};\nexports.dual = dual;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pipe = void 0;\nexports.map = map;\nexports.contramap = contramap;\nexports.mapWithIndex = mapWithIndex;\nexports.ap = ap;\nexports.chain = chain;\nexports.bimap = bimap;\nexports.mapLeft = mapLeft;\nexports.extend = extend;\nexports.reduce = reduce;\nexports.foldMap = foldMap;\nexports.reduceRight = reduceRight;\nexports.reduceWithIndex = reduceWithIndex;\nexports.foldMapWithIndex = foldMapWithIndex;\nexports.reduceRightWithIndex = reduceRightWithIndex;\nexports.alt = alt;\nexports.filter = filter;\nexports.filterMap = filterMap;\nexports.partition = partition;\nexports.partitionMap = partitionMap;\nexports.filterWithIndex = filterWithIndex;\nexports.filterMapWithIndex = filterMapWithIndex;\nexports.partitionWithIndex = partitionWithIndex;\nexports.partitionMapWithIndex = partitionMapWithIndex;\nexports.promap = promap;\nexports.compose = compose;\nexports.pipeable = pipeable;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nfunction map(F) {\n    return function (f) { return function (fa) { return F.map(fa, f); }; };\n}\nfunction contramap(F) {\n    return function (f) { return function (fa) { return F.contramap(fa, f); }; };\n}\nfunction mapWithIndex(F) {\n    return function (f) { return function (fa) { return F.mapWithIndex(fa, f); }; };\n}\nfunction ap(F) {\n    return function (fa) { return function (fab) { return F.ap(fab, fa); }; };\n}\nfunction chain(F) {\n    return function (f) { return function (fa) { return F.chain(fa, f); }; };\n}\nfunction bimap(F) {\n    return function (f, g) { return function (fea) { return F.bimap(fea, f, g); }; };\n}\nfunction mapLeft(F) {\n    return function (f) { return function (fea) { return F.mapLeft(fea, f); }; };\n}\nfunction extend(F) {\n    return function (f) { return function (wa) { return F.extend(wa, f); }; };\n}\nfunction reduce(F) {\n    return function (b, f) { return function (fa) { return F.reduce(fa, b, f); }; };\n}\nfunction foldMap(F) {\n    return function (M) {\n        var foldMapM = F.foldMap(M);\n        return function (f) { return function (fa) { return foldMapM(fa, f); }; };\n    };\n}\nfunction reduceRight(F) {\n    return function (b, f) { return function (fa) { return F.reduceRight(fa, b, f); }; };\n}\nfunction reduceWithIndex(F) {\n    return function (b, f) { return function (fa) { return F.reduceWithIndex(fa, b, f); }; };\n}\nfunction foldMapWithIndex(F) {\n    return function (M) {\n        var foldMapWithIndexM = F.foldMapWithIndex(M);\n        return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n    };\n}\nfunction reduceRightWithIndex(F) {\n    return function (b, f) { return function (fa) { return F.reduceRightWithIndex(fa, b, f); }; };\n}\nfunction alt(F) {\n    return function (that) { return function (fa) { return F.alt(fa, that); }; };\n}\nfunction filter(F) {\n    return function (predicate) { return function (fa) { return F.filter(fa, predicate); }; };\n}\nfunction filterMap(F) {\n    return function (f) { return function (fa) { return F.filterMap(fa, f); }; };\n}\nfunction partition(F) {\n    return function (f) { return function (fa) { return F.partition(fa, f); }; };\n}\nfunction partitionMap(F) {\n    return function (f) { return function (fa) { return F.partitionMap(fa, f); }; };\n}\nfunction filterWithIndex(F) {\n    return function (predicate) { return function (fa) { return F.filterWithIndex(fa, predicate); }; };\n}\nfunction filterMapWithIndex(F) {\n    return function (f) { return function (fa) { return F.filterMapWithIndex(fa, f); }; };\n}\nfunction partitionWithIndex(F) {\n    return function (f) { return function (fa) { return F.partitionWithIndex(fa, f); }; };\n}\nfunction partitionMapWithIndex(F) {\n    return function (f) { return function (fa) { return F.partitionMapWithIndex(fa, f); }; };\n}\nfunction promap(F) {\n    return function (f, g) { return function (fbc) { return F.promap(fbc, f, g); }; };\n}\nfunction compose(F) {\n    return function (ea) { return function (ab) { return F.compose(ab, ea); }; };\n}\nvar isFunctor = function (I) { return typeof I.map === 'function'; };\nvar isContravariant = function (I) { return typeof I.contramap === 'function'; };\nvar isFunctorWithIndex = function (I) { return typeof I.mapWithIndex === 'function'; };\nvar isApply = function (I) { return typeof I.ap === 'function'; };\nvar isChain = function (I) { return typeof I.chain === 'function'; };\nvar isBifunctor = function (I) { return typeof I.bimap === 'function'; };\nvar isExtend = function (I) { return typeof I.extend === 'function'; };\nvar isFoldable = function (I) { return typeof I.reduce === 'function'; };\nvar isFoldableWithIndex = function (I) { return typeof I.reduceWithIndex === 'function'; };\nvar isAlt = function (I) { return typeof I.alt === 'function'; };\nvar isCompactable = function (I) { return typeof I.compact === 'function'; };\nvar isFilterable = function (I) { return typeof I.filter === 'function'; };\nvar isFilterableWithIndex = function (I) {\n    return typeof I.filterWithIndex === 'function';\n};\nvar isProfunctor = function (I) { return typeof I.promap === 'function'; };\nvar isSemigroupoid = function (I) { return typeof I.compose === 'function'; };\nvar isMonadThrow = function (I) { return typeof I.throwError === 'function'; };\n/** @deprecated */\nfunction pipeable(I) {\n    var r = {};\n    if (isFunctor(I)) {\n        r.map = map(I);\n    }\n    if (isContravariant(I)) {\n        r.contramap = contramap(I);\n    }\n    if (isFunctorWithIndex(I)) {\n        r.mapWithIndex = mapWithIndex(I);\n    }\n    if (isApply(I)) {\n        r.ap = ap(I);\n        r.apFirst = (0, Apply_1.apFirst)(I);\n        r.apSecond = (0, Apply_1.apSecond)(I);\n    }\n    if (isChain(I)) {\n        r.chain = chain(I);\n        r.chainFirst = (0, Chain_1.chainFirst)(I);\n        r.flatten = r.chain(function_1.identity);\n    }\n    if (isBifunctor(I)) {\n        r.bimap = bimap(I);\n        r.mapLeft = mapLeft(I);\n    }\n    if (isExtend(I)) {\n        r.extend = extend(I);\n        r.duplicate = r.extend(function_1.identity);\n    }\n    if (isFoldable(I)) {\n        r.reduce = reduce(I);\n        r.foldMap = foldMap(I);\n        r.reduceRight = reduceRight(I);\n    }\n    if (isFoldableWithIndex(I)) {\n        r.reduceWithIndex = reduceWithIndex(I);\n        r.foldMapWithIndex = foldMapWithIndex(I);\n        r.reduceRightWithIndex = reduceRightWithIndex(I);\n    }\n    if (isAlt(I)) {\n        r.alt = alt(I);\n    }\n    if (isCompactable(I)) {\n        r.compact = I.compact;\n        r.separate = I.separate;\n    }\n    if (isFilterable(I)) {\n        r.filter = filter(I);\n        r.filterMap = filterMap(I);\n        r.partition = partition(I);\n        r.partitionMap = partitionMap(I);\n    }\n    if (isFilterableWithIndex(I)) {\n        r.filterWithIndex = filterWithIndex(I);\n        r.filterMapWithIndex = filterMapWithIndex(I);\n        r.partitionWithIndex = partitionWithIndex(I);\n        r.partitionMapWithIndex = partitionMapWithIndex(I);\n    }\n    if (isProfunctor(I)) {\n        r.promap = promap(I);\n    }\n    if (isSemigroupoid(I)) {\n        r.compose = compose(I);\n    }\n    if (isMonadThrow(I)) {\n        var fromOption = function (onNone) { return function (ma) {\n            return ma._tag === 'None' ? I.throwError(onNone()) : I.of(ma.value);\n        }; };\n        var fromEither = function (ma) {\n            return ma._tag === 'Left' ? I.throwError(ma.left) : I.of(ma.right);\n        };\n        var fromPredicate = function (predicate, onFalse) {\n            return function (a) {\n                return predicate(a) ? I.of(a) : I.throwError(onFalse(a));\n            };\n        };\n        var filterOrElse = function (predicate, onFalse) {\n            return function (ma) {\n                return I.chain(ma, function (a) { return (predicate(a) ? I.of(a) : I.throwError(onFalse(a))); });\n            };\n        };\n        r.fromOption = fromOption;\n        r.fromEither = fromEither;\n        r.fromPredicate = fromPredicate;\n        r.filterOrElse = filterOrElse;\n    }\n    return r;\n}\n/**\n * Use [`pipe`](https://gcanti.github.io/fp-ts/modules/function.ts.html#pipe) from `function` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.pipe = function_1.pipe;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findFirstMap = exports.findIndex = exports.dropRight = exports.dropLeft = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.matchRightW = exports.foldLeft = exports.matchLeft = exports.matchLeftW = exports.match = exports.matchW = exports.fromEither = exports.fromOption = exports.replicate = exports.makeBy = exports.appendW = exports.append = exports.prependW = exports.prepend = exports.isNonEmpty = exports.isEmpty = void 0;\nexports.getUnionMonoid = exports.getUnionSemigroup = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.flatMap = exports.ap = exports.map = exports.zero = exports.of = exports.concat = exports.concatW = exports.fromOptionK = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = void 0;\nexports.cons = exports.empty = exports.range = exports.chain = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.intercalate = exports.exists = exports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.fromEitherK = exports.FromEither = exports.filterE = exports.ChainRecBreadthFirst = exports.chainRecBreadthFirst = exports.ChainRecDepthFirst = exports.chainRecDepthFirst = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.guard = exports.Zero = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getDifferenceMagma = exports.getIntersectionSemigroup = void 0;\nexports.array = exports.prependToAll = exports.snoc = void 0;\nexports.fromPredicate = fromPredicate;\nexports.takeLeftWhile = takeLeftWhile;\nexports.spanLeft = spanLeft;\nexports.dropLeftWhile = dropLeftWhile;\nexports.findFirst = findFirst;\nexports.findLast = findLast;\nexports.zip = zip;\nexports.comprehension = comprehension;\nexports.union = union;\nexports.intersection = intersection;\nexports.difference = difference;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\nvar RA = __importStar(require(\"./ReadonlyArray\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @since 2.11.0\n */\nexports.prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexports.append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @since 2.11.0\n */\nexports.appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\nexports.makeBy = makeBy;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar replicate = function (n, a) { return (0, exports.makeBy)(n, function () { return a; }); };\nexports.replicate = replicate;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category conversions\n * @since 2.11.0\n */\nvar fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\nexports.fromOption = fromOption;\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category conversions\n * @since 2.11.0\n */\nvar fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\nexports.fromEither = fromEither;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\nexports.matchW = matchW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexports.match = exports.matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n    };\n};\nexports.matchLeftW = matchLeftW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchLeft = exports.matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return (0, exports.isNonEmpty)(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n    };\n};\nexports.matchRightW = matchRightW;\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.matchRight = exports.matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category sequencing\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            var bs = f(i, as[i]);\n            for (var j = 0; j < bs.length; j++) {\n                out.push(bs[j]);\n            }\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.0.0\n */\nvar scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.0.0\n */\nvar scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\nexports.scanRight = scanRight;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexports.isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.0.0\n */\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.0.0\n */\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.0.0\n */\nvar tail = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(NEA.tail(as)) : _.none); };\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.0.0\n */\nvar init = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(NEA.init(as)) : _.none); };\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nvar takeLeft = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? (0, exports.copy)(as) : as.slice(0, n);\n    };\n};\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nvar takeRight = function (n) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(n, as) ? (0, exports.copy)(as) : n === 0 ? [] : as.slice(-n);\n    };\n};\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = (0, exports.splitAt)(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nvar dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? (0, exports.copy)(as) : n >= as.length ? [] : as.slice(n, as.length);\n    };\n};\nexports.dropLeft = dropLeft;\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nvar dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || (0, exports.isEmpty)(as) ? (0, exports.copy)(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n    };\n};\nexports.dropRight = dropRight;\nfunction dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexports.findIndex = RA.findIndex;\nfunction findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexports.findFirstMap = RA.findFirstMap;\nfunction findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexports.findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @since 2.0.0\n */\nvar copy = function (as) { return as.slice(); };\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some((0, exports.unsafeInsertAt)(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nvar updateAt = function (i, a) { return (0, exports.modifyAt)(i, function () { return a; }); };\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nvar deleteAt = function (i) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeDeleteAt)(i, as));\n    };\n};\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.0.0\n */\nvar reverse = function (as) { return ((0, exports.isEmpty)(as) ? [] : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.0.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.0.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.0.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? (0, exports.copy)(as) : as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.0.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : []); };\n};\nexports.prependAll = prependAll;\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.intersperse = intersperse;\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.0.0\n */\nvar rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.rotate = rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexports.elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.0.0\n */\nvar uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.0.0\n */\nvar sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : (0, exports.copy)(as)); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.0.0\n */\nvar chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? g(as) : []); };\n};\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.0.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && (0, exports.isNonEmpty)(as) ? NEA.splitAt(n)(as) : (0, exports.isEmpty)(as) ? [(0, exports.copy)(as), []] : [[], (0, exports.copy)(as)];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.0.0\n */\nvar chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? f(as) : []); };\n};\nexports.chunksOf = chunksOf;\n/**\n * @category lifting\n * @since 2.11.0\n */\nvar fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.fromOption)(f.apply(void 0, a));\n    };\n};\nexports.fromOptionK = fromOptionK;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return (0, exports.isNonEmpty)(input)\n            ? (0, exports.flatMap)(NEA.head(input), function (a) { return go((0, function_1.pipe)(scope, (0, exports.append)(a)), NEA.tail(input)); })\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\n/**\n * @since 2.11.0\n */\nvar concatW = function (second) {\n    return function (first) {\n        return (0, exports.isEmpty)(first) ? (0, exports.copy)(second) : (0, exports.isEmpty)(second) ? (0, exports.copy)(first) : first.concat(second);\n    };\n};\nexports.concatW = concatW;\n/**\n * @since 2.11.0\n */\nexports.concat = exports.concatW;\nfunction union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return (0, exports.isNonEmpty)(first) && (0, exports.isNonEmpty)(second)\n            ? unionE(second)(first)\n            : (0, exports.isNonEmpty)(first)\n                ? (0, exports.copy)(first)\n                : (0, exports.copy)(second);\n    };\n}\nfunction intersection(E) {\n    var elemE = (0, exports.elem)(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nfunction difference(E) {\n    var elemE = (0, exports.elem)(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return (0, function_1.pipe)(fa, (0, exports.filter)(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMap)(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.partition)(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMap)(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.partitionWithIndex)(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMapWithIndex)(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMapWithIndex)(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, (0, exports.filterWithIndex)(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @since 2.7.0\n */\nvar zero = function () { return []; };\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\nexports.map = map;\n/**\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @since 2.0.0\n */\nvar ap = function (fa) {\n    return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * @example\n * import { flatMap, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], flatMap(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = (0, exports.flatMap)(function_1.identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category mapping\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filterMap = function (f) {\n    return (0, exports.filterMapWithIndex)(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.compact = (0, exports.filterMap)(function_1.identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return (0, Separated_1.separated)(left, right);\n};\nexports.separate = separate;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\nexports.filter = filter;\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return (0, exports.partitionWithIndex)(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var b = as[i];\n            if (predicateWithIndex(i, b)) {\n                right.push(b);\n            }\n            else {\n                left.push(b);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return (0, exports.partitionMapWithIndex)(function (_, a) { return f(a); }); };\nexports.partitionMap = partitionMap;\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nvar partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n};\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Array` concatenates the inputs into a single array.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category filtering\n * @since 2.0.0\n */\nvar filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of((0, exports.zero)()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return (0, function_1.pipe)(as, (0, exports.append)(a)); }; }), fa);\n        });\n    };\n};\nexports.sequence = sequence;\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return (0, exports.reduceWithIndex)(F.of((0, exports.zero)()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, a));\n        });\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: []\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (E) { return ({\n    concat: (0, exports.getUnionSemigroup)(E).concat,\n    empty: []\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\nexports.getDifferenceMagma = getDifferenceMagma;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexports.guard = (0, Zero_1.guard)(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecDepthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.ChainRecBreadthFirst = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexports.filterE = (0, Witherable_1.filterE)(exports.Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexports.fromEitherK = (0, FromEither_1.fromEitherK)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return (0, exports.isNonEmpty)(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexports.every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nvar some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\nexports.some = some;\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexports.exists = exports.some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `A.Functor` instead of `A.array`\n * (where `A` is from `import A from 'fp-ts/Array'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.array = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.flatMap = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.reverse = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = void 0;\nexports.snoc = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.chain = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = void 0;\nexports.nonEmptyArray = exports.fold = exports.prependToAll = void 0;\nexports.concatW = concatW;\nexports.concat = concat;\nexports.group = group;\nexports.zip = zip;\nexports.groupSort = groupSort;\nexports.filter = filter;\nexports.cons = cons;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if ((0, exports.isNonEmpty)(as)) {\n        var xs = (0, exports.fromReadonlyNonEmptyArray)(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    var xs = (0, exports.fromReadonlyNonEmptyArray)(as);\n    xs[i] = a;\n    return xs;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nvar uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return (0, exports.copy)(as);\n        }\n        var out = [(0, exports.head)(as)];\n        var rest = (0, exports.tail)(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if ((0, exports.isNonEmpty)(ords)) {\n        var M = (0, Ord_1.getMonoid)();\n        return (0, exports.sort)(ords.reduce(M.concat, M.empty));\n    }\n    return exports.copy;\n};\nexports.sortBy = sortBy;\n/**\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = (0, exports.uniq)(E);\n    return function (second) { return function (first) { return uniqE((0, function_1.pipe)(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nvar rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if ((0, exports.isOutOfBound)(Math.abs(m), as) || m === 0) {\n            return (0, exports.copy)(as);\n        }\n        if (m < 0) {\n            var _a = (0, exports.splitAt)(-m)(as), f = _a[0], s = _a[1];\n            return (0, function_1.pipe)(s, concat(f));\n        }\n        else {\n            return (0, exports.rotate)(m - len)(as);\n        }\n    };\n};\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromArray = function (as) { return ((0, exports.isNonEmpty)(as) ? _.some(as) : _.none); };\nexports.fromArray = fromArray;\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\nexports.makeBy = makeBy;\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return (0, exports.makeBy)(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? (0, exports.makeBy)(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [(0, exports.head)(as), (0, exports.tail)(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nvar unappend = function (as) { return [(0, exports.init)(as), (0, exports.last)(as)]; };\nexports.unappend = unappend;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.0.0\n */\nvar reverse = function (as) { return __spreadArray([(0, exports.last)(as)], as.slice(0, -1).reverse(), true); };\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.0.0\n */\nvar groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\nexports.groupBy = groupBy;\n/**\n * @since 2.0.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n/**\n * @since 2.0.0\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some((0, exports.unsafeInsertAt)(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * @since 2.0.0\n */\nvar updateAt = function (i, a) {\n    return (0, exports.modifyAt)(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * @since 2.0.0\n */\nexports.copy = exports.fromReadonlyNonEmptyArray;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    return function (as) {\n        var rest = (0, exports.tail)(as);\n        return (0, exports.isNonEmpty)(rest) ? (0, function_1.pipe)(rest, (0, exports.prependAll)(middle), (0, exports.prepend)((0, exports.head)(as))) : (0, exports.copy)(as);\n    };\n};\nexports.intersperse = intersperse;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.foldMap = RNEA.foldMap;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        var out = (0, exports.fromReadonlyNonEmptyArray)(f(0, (0, exports.head)(as)));\n        for (var i = 1; i < as.length; i++) {\n            var bs = f(i, as[i]);\n            for (var j = 0; j < bs.length; j++) {\n                out.push(bs[j]);\n            }\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * @since 2.10.0\n */\nvar chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while ((0, exports.isNonEmpty)(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\nexports.chop = chop;\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [(0, exports.copy)(as), []] : [(0, function_1.pipe)(as.slice(1, m), (0, exports.prepend)((0, exports.head)(as))), as.slice(m)];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return (0, exports.chop)((0, exports.splitAt)(n)); };\nexports.chunksOf = chunksOf;\n/* istanbul ignore next */\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as NEA.NonEmptyArray<number>,\n *     NEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (as) {\n        return (0, function_1.pipe)(as, concatW(that()));\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `NonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @since 2.0.0\n */\nvar ap = function (as) {\n    return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(as, (0, exports.map)(f)); });\n};\nexports.ap = ap;\n/**\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.flatMap((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * @since 2.0.0\n */\nvar extend = function (f) {\n    return function (as) {\n        var next = (0, exports.tail)(as);\n        var out = [f(as)];\n        while ((0, exports.isNonEmpty)(next)) {\n            out.push(f(next));\n            next = (0, exports.tail)(next);\n        }\n        return out;\n    };\n};\nexports.extend = extend;\n/**\n * @since 2.5.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = (0, exports.flatMap)(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return (0, exports.mapWithIndex)(function (_, a) { return f(a); }); };\nexports.map = map;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, (0, exports.head)(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduce = RNEA.reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRight = RNEA.reduceRight;\n/**\n * @category folding\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) { return (0, exports.traverseWithIndex)(F)(function (_, a) { return a; }); };\nexports.sequence = sequence;\n/**\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, (0, exports.head)(as)), exports.of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @since 2.7.0\n */\nexports.extract = RNEA.head;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RNEA.getEq;\n/**\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = (0, exports.union)(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexports.head = RNEA.head;\n/**\n * @since 2.0.0\n */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n/**\n * @since 2.0.0\n */\nexports.last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.0.0\n */\nexports.min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexports.max = RNEA.max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\nexports.concatAll = concatAll;\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeft = function (f) {\n    return function (as) {\n        return f((0, exports.head)(as), (0, exports.tail)(as));\n    };\n};\nexports.matchLeft = matchLeft;\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRight = function (f) {\n    return function (as) {\n        return f((0, exports.init)(as), (0, exports.last)(as));\n    };\n};\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f((0, exports.head)(as))], (0, exports.tail)(as), true);\n    };\n};\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateHead = function (a) { return (0, exports.modifyHead)(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) {\n    return function (as) {\n        return (0, function_1.pipe)((0, exports.init)(as), (0, exports.append)(f((0, exports.last)(as))));\n    };\n};\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateLast = function (a) { return (0, exports.modifyLast)(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexports.intercalate = RNEA.intercalate;\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\nfunction groupSort(O) {\n    var sortO = (0, exports.sort)(O);\n    var groupO = group(O);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? groupO(sortO(as)) : []); };\n}\nfunction filter(predicate) {\n    return (0, exports.filterWithIndex)(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) {\n    return function (as) {\n        return (0, exports.fromArray)(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? (0, exports.prepend)(head) : (0, function_1.pipe)(tail, (0, exports.prepend)(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar snoc = function (init, end) { return (0, function_1.pipe)(init, (0, exports.append)(end)); };\nexports.snoc = snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = RNEA.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `NEA.Functor` instead of `NEA.nonEmptyArray`\n * (where `NEA` is from `import NEA from 'fp-ts/NonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.nonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: exports.flatMap,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return (0, exports.fromEquals)(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return (0, exports.fromEquals)(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.contramap)(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Eq<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for equality (meaning we have an `Eq<X>`)\n *\n * For example, given the following `User` type, we want to construct an `Eq<User>` that just looks at the `key` field\n * for each user (since it's known to be unique).\n *\n * If we have a way of comparing `UUID`s for equality (`eqUUID: Eq<UUID>`) and we know how to go from `User -> UUID`,\n * using `contramap` we can do this\n *\n * @example\n * import { contramap, Eq } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/string'\n *\n * type UUID = string\n *\n * interface User {\n *   readonly key: UUID\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const eqUUID: Eq<UUID> = S.Eq\n *\n * const eqUserByKey: Eq<User> = pipe(\n *   eqUUID,\n *   contramap((user) => user.key)\n * )\n *\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k2', firstName: 'a1', lastName: 'b1' }\n *   ),\n *   false\n * )\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k1', firstName: 'a2', lastName: 'b1' }\n *   ),\n *   true\n * )\n *\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return (0, exports.fromEquals)(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return (0, exports.fromEquals)(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: (0, exports.getSemigroup)().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Contravariant` instance, pass `E.Contravariant` instead of `E.eq`\n * (where `E` is from `import E from 'fp-ts/Eq'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainFirst = chainFirst;\nexports.tap = tap;\nexports.bind = bind;\nfunction chainFirst(M) {\n    var tapM = tap(M);\n    return function (f) { return function (first) { return tapM(first, f); }; };\n}\n/** @internal */\nfunction tap(M) {\n    return function (first, f) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); };\n}\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.MagmaSub = exports.Show = exports.Bounded = exports.Ord = exports.Eq = exports.isNumber = void 0;\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nvar isNumber = function (u) { return typeof u === 'number'; };\nexports.isNumber = isNumber;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bounded = {\n    equals: exports.Eq.equals,\n    compare: exports.Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidSum = {\n    concat: exports.SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.MonoidProduct = {\n    concat: exports.SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Field = {\n    add: exports.SemigroupSum.concat,\n    zero: 0,\n    mul: exports.SemigroupProduct.concat,\n    one: 1,\n    sub: exports.MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Foldable = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getWitherable = exports.getTraversableWithIndex = exports.getTraversable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.getFoldableWithIndex = exports.getFoldable = exports.FunctorWithIndex = exports.flap = exports.Functor = exports.getMonoid = exports.getEq = exports.URI = exports.separate = exports.compact = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.difference = exports.intersection = exports.union = exports.elem = exports.some = exports.every = exports.fromEntries = exports.toEntries = exports.filterMapWithIndex = exports.partitionMapWithIndex = exports.wilt = exports.wither = exports.singleton = exports.map = exports.mapWithIndex = exports.lookup = exports.isSubrecord = exports.modifyAt = exports.updateAt = exports.has = exports.upsertAt = exports.toArray = exports.keys = exports.isEmpty = exports.size = void 0;\nexports.record = exports.hasOwnProperty = exports.insertAt = exports.empty = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = void 0;\nexports.collect = collect;\nexports.toUnfoldable = toUnfoldable;\nexports.deleteAt = deleteAt;\nexports.pop = pop;\nexports.reduceWithIndex = reduceWithIndex;\nexports.foldMapWithIndex = foldMapWithIndex;\nexports.reduceRightWithIndex = reduceRightWithIndex;\nexports.traverseWithIndex = traverseWithIndex;\nexports.traverse = traverse;\nexports.sequence = sequence;\nexports.partitionWithIndex = partitionWithIndex;\nexports.filterWithIndex = filterWithIndex;\nexports.fromFoldable = fromFoldable;\nexports.fromFoldableMap = fromFoldableMap;\nexports.reduce = reduce;\nexports.foldMap = foldMap;\nexports.reduceRight = reduceRight;\nexports.getShow = getShow;\nvar A = __importStar(require(\"./Array\"));\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar RR = __importStar(require(\"./ReadonlyRecord\"));\nvar Se = __importStar(require(\"./Semigroup\"));\nvar S = __importStar(require(\"./string\"));\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * Calculate the number of key/value pairs in a `Record`.\n *\n * @example\n * import { size } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(size({ a: true, b: 2, c: \"three\" }), 3);\n *\n * @since 2.0.0\n */\nexports.size = RR.size;\n/**\n * Test whether a `Record` is empty.\n *\n * @example\n * import { isEmpty } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(isEmpty({}), true);\n * assert.deepStrictEqual(isEmpty({ a: 3 }), false);\n *\n * @since 2.0.0\n */\nexports.isEmpty = RR.isEmpty;\nvar keys_ = function (O) {\n    return function (r) {\n        return Object.keys(r).sort(O.compare);\n    };\n};\n/**\n * The keys of a `Record`, sorted alphabetically.\n *\n * @example\n * import { keys } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(keys({ c: 1, a: 2, b: 3 }), [\"a\", \"b\", \"c\"]);\n *\n * @since 2.0.0\n */\nexports.keys = keys_(S.Ord);\nfunction collect(O) {\n    if (typeof O === 'function') {\n        return collect(S.Ord)(O);\n    }\n    var keysO = keys_(O);\n    return function (f) {\n        return function (r) {\n            var out = [];\n            for (var _i = 0, _a = keysO(r); _i < _a.length; _i++) {\n                var key = _a[_i];\n                out.push(f(key, r[key]));\n            }\n            return out;\n        };\n    };\n}\n/**\n * Get a sorted `Array` of the key/value pairs contained in a `Record`.\n * Sorted alphabetically by key.\n *\n * @example\n * import { toArray } from 'fp-ts/Record'\n *\n * const x = { c: 3, a: \"foo\", b: false };\n * assert.deepStrictEqual(toArray(x), [\n *   [\"a\", \"foo\"],\n *   [\"b\", false],\n *   [\"c\", 3],\n * ]);\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.toArray = collect(S.Ord)(function (k, a) { return [\n    k,\n    a\n]; });\nfunction toUnfoldable(U) {\n    return function (r) {\n        var sas = (0, exports.toArray)(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? _.some([sas[b], b + 1]) : _.none); });\n    };\n}\n/**\n * Insert or replace a key/value pair in a `Record`.\n *\n * @example\n * import { upsertAt } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(upsertAt(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n * assert.deepStrictEqual(upsertAt(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n *\n * @since 2.10.0\n */\nexports.upsertAt = RR.upsertAt;\n/**\n * Test whether or not a key exists in a `Record`.\n *\n * Note. This function is not pipeable because is a `Refinement`.\n *\n * @example\n * import { has } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(has(\"a\", { a: 1, b: 2 }), true);\n * assert.deepStrictEqual(has(\"c\", { a: 1, b: 2 }), false);\n *\n * @since 2.10.0\n */\nexports.has = RR.has;\nfunction deleteAt(k) {\n    return function (r) {\n        if (!_.has.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\n/**\n * Replace a key/value pair in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { updateAt } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(updateAt(\"a\", 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(updateAt(\"c\", 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.0.0\n */\nvar updateAt = function (k, a) {\n    return (0, exports.modifyAt)(k, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Applies a mapping function to one spcific key/value pair in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { modifyAt } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(modifyAt(\"a\", (x: number) => x * 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(modifyAt(\"c\", (x: number) => x * 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.0.0\n */\nvar modifyAt = function (k, f) {\n    return function (r) {\n        if (!(0, exports.has)(k, r)) {\n            return _.none;\n        }\n        var out = Object.assign({}, r);\n        out[k] = f(r[k]);\n        return _.some(out);\n    };\n};\nexports.modifyAt = modifyAt;\nfunction pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = (0, exports.lookup)(k, r);\n        return _.isNone(oa) ? _.none : _.some([oa.value, deleteAtk(r)]);\n    };\n}\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether one `Record` contains all of the keys and values\n * contained in another `Record`.\n *\n * @example\n * import { isSubrecord } from 'fp-ts/Record'\n * import { string } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", b: \"bar\", c: \"baz\" }),\n *   true\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", c: \"baz\" }),\n *   true\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", b: \"not-bar\", c: \"baz\" }),\n *   false\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\" })({ a: \"foo\", b: \"bar\", c: \"baz\" }),\n *   false\n * );\n *\n * @since 2.0.0\n */\nexports.isSubrecord = RR.isSubrecord;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing the value,\n * otherwise it returns `None`\n *\n * @example\n * import { lookup } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(lookup(\"b\")({ a: \"foo\", b: \"bar\" }), option.some(\"bar\"));\n * assert.deepStrictEqual(lookup(\"c\")({ a: \"foo\", b: \"bar\" }), option.none);\n *\n * @since 2.0.0\n */\nexports.lookup = RR.lookup;\n/**\n * Map a `Record` passing the key/value pairs to the iterating function.\n *\n * @example\n * import { mapWithIndex } from \"fp-ts/Record\";\n *\n * const f = (k: string, n: number) => `${k.toUpperCase()}-${n}`;\n * assert.deepStrictEqual(mapWithIndex(f)({ a: 3, b: 5 }), { a: \"A-3\", b: \"B-5\" });\n *\n * @since 2.0.0\n */\nexports.mapWithIndex = RR.mapWithIndex;\n/**\n * Map a `Record` passing the values to the iterating function.\n *\n * @example\n * import { map } from \"fp-ts/Record\";\n *\n * const f = (n: number) => `-${n}-`;\n * assert.deepStrictEqual(map(f)({ a: 3, b: 5 }), { a: \"-3-\", b: \"-5-\" });\n *\n * @category mapping\n * @since 2.0.0\n */\nexports.map = RR.map;\nfunction reduceWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceWithIndex(args[0]) : RR.reduceWithIndex(S.Ord).apply(void 0, args);\n}\nfunction foldMapWithIndex(O) {\n    return 'compare' in O ? RR.foldMapWithIndex(O) : RR.foldMapWithIndex(S.Ord)(O);\n}\nfunction reduceRightWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceRightWithIndex(args[0]) : RR.reduceRightWithIndex(S.Ord).apply(void 0, args);\n}\n/**\n * Create a `Record` with one key/value pair.\n *\n * @example\n * import { singleton } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(singleton(\"a\", 1), { a: 1 });\n *\n * @since 2.0.0\n */\nexports.singleton = RR.singleton;\nfunction traverseWithIndex(F) {\n    return RR.traverseWithIndex(F);\n}\nfunction traverse(F) {\n    return RR.traverse(F);\n}\nfunction sequence(F) {\n    return RR.sequence(F);\n}\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map((0, function_1.pipe)(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map((0, function_1.pipe)(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * Maps a `Record` with a function returning an `Either` and\n * partitions the resulting `Record` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMapWithIndex } from \"fp-ts/Record\"\n * import { either } from \"fp-ts\"\n *\n * const f = (key: string, a: number) =>\n *   a >= 0 ? either.right(`${key} is >= 0 (${a})`) : either.left(`${key} is < 0 (${a})`);\n * assert.deepStrictEqual(partitionMapWithIndex(f)({ a: -1, b: 2, c: 123 }), {\n *   left: {\n *     a: \"a is < 0 (-1)\",\n *   },\n *   right: {\n *     b: \"b is >= 0 (2)\",\n *     c: \"c is >= 0 (123)\",\n *   },\n * });\n *\n * @since 2.0.0\n */\nexports.partitionMapWithIndex = RR.partitionMapWithIndex;\nfunction partitionWithIndex(predicateWithIndex) {\n    return RR.partitionWithIndex(predicateWithIndex);\n}\n/**\n * Maps a `Record` with an iterating function that takes key and value and\n * returns an `Option`, keeping only the `Some` values and discarding `None`s.\n *\n * @example\n * import { filterMapWithIndex } from \"fp-ts/Record\"\n * import { option } from \"fp-ts\"\n *\n * const f = (key: string, a: number) => (a >= 0 ? option.some(`${key}${a}`) : option.none);\n * assert.deepStrictEqual(filterMapWithIndex(f)({ a: -1, b: 2, c: 3 }), {\n *   b: \"b2\",\n *   c: \"c3\",\n * });\n *\n * @since 2.0.0\n */\nexports.filterMapWithIndex = RR.filterMapWithIndex;\nfunction filterWithIndex(predicateWithIndex) {\n    return RR.filterWithIndex(predicateWithIndex);\n}\nfunction fromFoldable(M, F) {\n    return RR.fromFoldable(M, F);\n}\n/**\n * Alias of [`toArray`](#toArray).\n *\n * @example\n * import { toEntries } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(toEntries({ b: 2, a: 1 }), [['a', 1], ['b', 2]])\n *\n * @since 2.12.0\n * @category conversions\n */\nexports.toEntries = exports.toArray;\n/**\n * Converts an `Array` of `[key, value]` tuples into a `Record`.\n *\n * @example\n * import { fromEntries } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(fromEntries([['a', 1], ['b', 2], ['a', 3]]), { b: 2, a: 3 })\n *\n * @since 2.12.0\n * @category conversions\n */\nvar fromEntries = function (fa) { return fromFoldable(Se.last(), A.Foldable)(fa); };\nexports.fromEntries = fromEntries;\nfunction fromFoldableMap(M, F) {\n    return RR.fromFoldableMap(M, F);\n}\n/**\n * Test if every value in a `Record` satisfies the predicate.\n *\n * @example\n * import { every } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: 2 }), true);\n * assert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: -1 }), false);\n *\n * @since 2.0.0\n */\nexports.every = RR.every;\n/**\n * Test if at least one value in a `Record` satisfies the predicate.\n *\n * @example\n * import { some } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: 1, b: -2 }), true);\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: -1, b: -2 }), false);\n *\n * @since 2.0.0\n */\nexports.some = RR.some;\n// TODO: remove non-curried overloading in v3\n/**\n * Given an `Eq` checks if a `Record` contains an entry with\n * value equal to a provided value.\n *\n * @example\n * import { elem } from \"fp-ts/Record\"\n * import { number } from \"fp-ts\"\n *\n * assert.deepStrictEqual(elem(number.Eq)(123, { foo: 123, bar: 234 }), true);\n * assert.deepStrictEqual(elem(number.Eq)(-7, { foo: 123, bar: 234 }), false);\n *\n * @since 2.0.0\n */\nexports.elem = RR.elem;\n/**\n * Union of two `Record`s.\n * Takes two `Record`s and produces a `Record` combining all the\n * entries of the two inputs.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements with the same key.\n *\n * @example\n * import { union } from \"fp-ts/Record\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(union(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4, b: 2, c: 3 });\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(union(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1, b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nvar union = function (M) {\n    var unionM = RR.union(M);\n    return function (second) { return function (first) {\n        if ((0, exports.isEmpty)(first)) {\n            return __assign({}, second);\n        }\n        if ((0, exports.isEmpty)(second)) {\n            return __assign({}, first);\n        }\n        return unionM(second)(first);\n    }; };\n};\nexports.union = union;\n/**\n * Intersection of two `Record`s.\n * Takes two `Record`s and produces a `Record` combining only the\n * entries of the two inputswith the same key.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements.\n *\n * @example\n * import { intersection } from \"fp-ts/Record\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(intersection(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4});\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(intersection(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1});\n *\n * @since 2.11.0\n */\nvar intersection = function (M) {\n    return function (second) {\n        return function (first) {\n            if ((0, exports.isEmpty)(first) || (0, exports.isEmpty)(second)) {\n                return {};\n            }\n            return RR.intersection(M)(second)(first);\n        };\n    };\n};\nexports.intersection = intersection;\n/**\n * Difference between two `Record`s.\n * Takes two `Record`s and produces a `Record` composed by the\n * entries of the two inputs, removing the entries with the same\n * key in both inputs.\n *\n * @example\n * import { difference } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(difference({ a: 1 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3, c: 3 })({ a: 1, b: 2 }), { b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nvar difference = function (second) {\n    return function (first) {\n        if ((0, exports.isEmpty)(first)) {\n            return __assign({}, second);\n        }\n        if ((0, exports.isEmpty)(second)) {\n            return __assign({}, first);\n        }\n        return RR.difference(second)(first);\n    };\n};\nexports.difference = difference;\nvar _map = RR._map;\nvar _mapWithIndex = RR._mapWithIndex;\nvar _reduce = RR._reduce;\nvar _foldMap = RR._foldMap;\nvar _reduceRight = RR._reduceRight;\nvar _filter = RR._filter;\nvar _filterMap = RR._filterMap;\nvar _partition = RR._partition;\nvar _partitionMap = RR._partitionMap;\nvar _reduceWithIndex = RR._reduceWithIndex;\nvar _foldMapWithIndex = RR._foldMapWithIndex;\nvar _reduceRightWithIndex = RR._reduceRightWithIndex;\nvar _partitionMapWithIndex = RR._partitionMapWithIndex;\nvar _partitionWithIndex = RR._partitionWithIndex;\nvar _filterMapWithIndex = RR._filterMapWithIndex;\nvar _filterWithIndex = RR._filterWithIndex;\nvar _traverse = RR._traverse;\nvar _sequence = RR._sequence;\nvar _traverseWithIndex = function (O) {\n    return function (F) {\n        var keysO = keys_(O);\n        return function (ta, f) {\n            var ks = keysO(ta);\n            if (ks.length === 0) {\n                return F.of({});\n            }\n            var fr = F.of({});\n            var _loop_1 = function (key) {\n                fr = F.ap(F.map(fr, function (r) { return function (b) {\n                    r[key] = b;\n                    return r;\n                }; }), f(key, ta[key]));\n            };\n            for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n                var key = ks_1[_i];\n                _loop_1(key);\n            }\n            return fr;\n        };\n    };\n};\n/**\n * Given a `Predicate`, it produces a new `Record` keeping only the entries with a\n * value that satisfies the provided predicate.\n *\n * @example\n * import { filter } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(filter((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo\",\n *   b: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filter = RR.filter;\n/**\n * Maps a `Record` with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from \"fp-ts/Record\"\n * import { option } from \"fp-ts\"\n *\n * const f = (s: string) => s.length < 4 ? option.some(`${s} is short`): option.none\n * assert.deepStrictEqual(filterMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo is short\",\n *   b: \"bar is short\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filterMap = RR.filterMap;\n/**\n * Partition a `Record` into two parts according to a `Predicate`.\n *\n * @example\n * import { partition } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(partition((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left:{\n *     c: \"verylong\"\n *   },\n *   right: {\n *     a: \"foo\",\n *     b: \"bar\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.partition = RR.partition;\n/**\n * Maps a `Record` with a function returning an `Either` and\n * partitions the resulting `Record` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMap } from \"fp-ts/Record\"\n * import { either } from \"fp-ts\"\n *\n * const f = (s: string) => (s.length < 4 ? either.right(`${s} is short`) : either.left(`${s} is not short`));\n * assert.deepStrictEqual(partitionMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left: {\n *     c: \"verylong is not short\",\n *   },\n *   right: {\n *     a: \"foo is short\",\n *     b: \"bar is short\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.partitionMap = RR.partitionMap;\nfunction reduce() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduce(args[0]) : RR.reduce(S.Ord).apply(void 0, args);\n}\nfunction foldMap(O) {\n    return 'compare' in O ? RR.foldMap(O) : RR.foldMap(S.Ord)(O);\n}\nfunction reduceRight() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceRight(args[0]) : RR.reduceRight(S.Ord).apply(void 0, args);\n}\n/**\n * Compact a `Record` of `Option`s discarding the `None` values and\n * keeping the `Some` values.\n *\n * @example\n * import { compact } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(compact({ a: option.some(\"foo\"), b: option.none, c: option.some(\"bar\") }), {\n *   a: \"foo\",\n *   c: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.compact = RR.compact;\n/**\n * Separate a `Record` of `Either`s into `Left`s and `Right`s.\n *\n * @example\n * import { separate } from 'fp-ts/Record'\n * import { either } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   separate({ a: either.right(\"foo\"), b: either.left(\"bar\"), c: either.right(\"baz\") }),\n *   {\n *     right: {\n *       a: \"foo\",\n *       c: \"baz\",\n *     },\n *     left: {\n *       b: \"bar\",\n *     },\n *   }\n * );\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.separate = RR.separate;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Record';\nfunction getShow(O) {\n    return 'compare' in O ? RR.getShow(O) : RR.getShow(S.Ord)(O);\n}\n/**\n * Given an `Eq` for the base type, it produces an `Eq`\n * for a `Record` of that base type.\n *\n * @example\n * import { getEq } from \"fp-ts/Record\";\n * import { string } from \"fp-ts\";\n * import { Eq } from \"fp-ts/Eq\";\n *\n * const eq: Eq<Record<string, string>> = getEq(string.Eq);\n * assert.deepStrictEqual(eq.equals({ a: \"foo\" }, { b: \"bar\" }), false);\n * assert.deepStrictEqual(eq.equals({ a: \"foo\" }, { a: \"foo\" }), true);\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RR.getEq;\n/**\n * Returns a `Monoid` instance for `Record`s, given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `Record`s comining the\n * overlapping entries with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getMonoid } from 'fp-ts/Record'\n *\n * const M = getMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getMonoid = RR.getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Takes a value and a `Record` of functions and returns a\n * `Record` by applying each function to the input value.\n *\n * @example\n * import { flap } from \"fp-ts/Record\"\n *\n * const fab = { x: (n: number) => `${n} times 2`, y: (n: number) => `${n * 2}` };\n * assert.deepStrictEqual(flap(3)(fab), {\n *   x: \"3 times 2\",\n *   y: \"6\",\n * });\n *\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * Produces a `Foldable` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nvar getFoldable = function (O) { return ({\n    URI: exports.URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O)\n}); };\nexports.getFoldable = getFoldable;\n/**\n * Produces a `FoldableWithIndex1` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nvar getFoldableWithIndex = function (O) { return ({\n    URI: exports.URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O)\n}); };\nexports.getFoldableWithIndex = getFoldableWithIndex;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex\n};\n/**\n * Produces a `Traversable` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar getTraversable = function (O) { return ({\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O)\n}); };\nexports.getTraversable = getTraversable;\n/**\n * Produces a `TraversableWithIndex` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar getTraversableWithIndex = function (O) { return ({\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O),\n    traverseWithIndex: _traverseWithIndex(O)\n}); };\nexports.getTraversableWithIndex = getTraversableWithIndex;\n/**\n * @category filtering\n * @since 2.11.0\n */\nvar getWitherable = function (O) {\n    var T = (0, exports.getTraversable)(O);\n    return {\n        URI: exports.URI,\n        map: _map,\n        reduce: _reduce(O),\n        foldMap: _foldMap(O),\n        reduceRight: _reduceRight(O),\n        traverse: T.traverse,\n        sequence: T.sequence,\n        compact: exports.compact,\n        separate: exports.separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        wither: (0, Witherable_1.witherDefault)(T, exports.Compactable),\n        wilt: (0, Witherable_1.wiltDefault)(T, exports.Compactable)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `Record` of the base type.\n * The resulting `Semigroup` concatenates two `Record`s by\n * `union`.\n *\n * @example\n * import { getUnionSemigroup } from \"fp-ts/Record\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sRecord: Semigroup<Record<string, number>> = getUnionSemigroup(sNumber);\n * assert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { a: 1, b: -1, c: 4 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (S) {\n    var unionS = (0, exports.union)(S);\n    return {\n        concat: function (first, second) { return unionS(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Same as `getMonoid`.\n * Returns a `Monoid` instance for `Record`s given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `Record`s combining the\n * entries that have the same key with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getUnionMonoid } from 'fp-ts/Record'\n *\n * const M = getUnionMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (S) { return ({\n    concat: (0, exports.getUnionSemigroup)(S).concat,\n    empty: {}\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `Record` of the base type.\n * The resulting `Semigroup` concatenates two `Record`s by\n * `intersection`.\n *\n * @example\n * import { getIntersectionSemigroup } from \"fp-ts/Record\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sRecord: Semigroup<Record<string, number>> = getIntersectionSemigroup(sNumber);\n * assert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { b: -1 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (S) {\n    var intersectionS = (0, exports.intersection)(S);\n    return {\n        concat: function (first, second) { return intersectionS(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Produces a `Magma` with a `concat` function that combines\n * two `Record`s by making the `difference`.\n *\n * @example\n * import { getDifferenceMagma, difference } from \"fp-ts/Record\"\n * import { Magma } from \"fp-ts/Magma\"\n *\n * const r1 = { a: 3, c: 3 };\n * const r2 = { a: 1, b: 2 };\n * const m: Magma<Record<string, number>> = getDifferenceMagma<number>();\n * assert.deepStrictEqual(m.concat(r1, r2), difference(r2)(r1));\n * assert.deepStrictEqual(m.concat(r1, r2), { c: 3, b: 2 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function () { return ({\n    concat: function (first, second) { return (0, exports.difference)(second)(first); }\n}); };\nexports.getDifferenceMagma = getDifferenceMagma;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `getFoldable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord)\n};\n/**\n * Use `getFoldableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord)\n};\n/**\n * Use `getTraversable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence\n};\n/**\n * Use the `getTraversableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord)\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * Use `getWitherable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Use a new `{}` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = {};\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.insertAt = exports.upsertAt;\n/**\n * Use [`has`](#has) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.hasOwnProperty = RR.hasOwnProperty;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `R.Functor` instead of `R.record`\n * (where `R` is from `import R from 'fp-ts/Record'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.record = {\n    URI: exports.URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord),\n    wither: _wither,\n    wilt: _wilt\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.and = exports.or = exports.not = exports.Contravariant = exports.getMonoidAll = exports.getSemigroupAll = exports.getMonoidAny = exports.getSemigroupAny = exports.URI = exports.contramap = void 0;\nvar function_1 = require(\"./function\");\nvar contramap_ = function (predicate, f) { return (0, function_1.pipe)(predicate, (0, exports.contramap)(f)); };\n/**\n * @since 2.11.0\n */\nvar contramap = function (f) {\n    return function (predicate) {\n        return (0, function_1.flow)(f, predicate);\n    };\n};\nexports.contramap = contramap;\n/**\n * @category type lambdas\n * @since 2.11.0\n */\nexports.URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAny = function () { return ({\n    concat: function (first, second) { return (0, function_1.pipe)(first, (0, exports.or)(second)); }\n}); };\nexports.getSemigroupAny = getSemigroupAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAny = function () { return ({\n    concat: (0, exports.getSemigroupAny)().concat,\n    empty: function_1.constFalse\n}); };\nexports.getMonoidAny = getMonoidAny;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getSemigroupAll = function () { return ({\n    concat: function (first, second) { return (0, function_1.pipe)(first, (0, exports.and)(second)); }\n}); };\nexports.getSemigroupAll = getSemigroupAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nvar getMonoidAll = function () { return ({\n    concat: (0, exports.getSemigroupAll)().concat,\n    empty: function_1.constTrue\n}); };\nexports.getMonoidAll = getMonoidAll;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar not = function (predicate) {\n    return function (a) {\n        return !predicate(a);\n    };\n};\nexports.not = not;\n/**\n * @since 2.11.0\n */\nvar or = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) || second(a);\n        };\n    };\n};\nexports.or = or;\n/**\n * @since 2.11.0\n */\nvar and = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) && second(a);\n        };\n    };\n};\nexports.and = and;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.throwError = exports.Witherable = exports.wilt = exports.wither = exports.Traversable = exports.sequence = exports.traverse = exports.Filterable = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.Compactable = exports.separate = exports.compact = exports.Extend = exports.extend = exports.Alternative = exports.guard = exports.Zero = exports.zero = exports.Alt = exports.alt = exports.altW = exports.orElse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.flatMap = exports.Applicative = exports.Apply = exports.ap = exports.Pointed = exports.of = exports.asUnit = exports.as = exports.Functor = exports.map = exports.getMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.getRight = exports.getLeft = exports.some = exports.none = void 0;\nexports.getLastMonoid = exports.getFirstMonoid = exports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.chainFirst = exports.chain = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.duplicate = exports.tapEither = exports.tap = exports.flatten = exports.apSecond = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.isNone = exports.isSome = exports.FromEither = exports.fromEither = exports.MonadThrow = void 0;\nexports.fromPredicate = fromPredicate;\nexports.elem = elem;\nexports.getRefinement = getRefinement;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar chainable = __importStar(require(\"./Chain\"));\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Predicate_1 = require(\"./Predicate\");\nvar Semigroup_1 = require(\"./Semigroup\");\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\nvar Zero_1 = require(\"./Zero\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.some = _.some;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? (0, exports.some)(a) : exports.none); };\n}\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getLeft = function (ma) { return (ma._tag === 'Right' ? exports.none : (0, exports.some)(ma.left)); };\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nvar getRight = function (ma) { return (ma._tag === 'Left' ? exports.none : (0, exports.some)(ma.right)); };\nexports.getRight = getRight;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\nvar _filter = function (fa, predicate) { return (0, function_1.pipe)(fa, (0, exports.filter)(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMap)(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.partition)(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMap)(f)); };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (S) { return ({\n    show: function (ma) { return ((0, exports.isNone)(ma) ? 'none' : \"some(\".concat(S.show(ma.value), \")\")); }\n}); };\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || ((0, exports.isNone)(x) ? (0, exports.isNone)(y) : (0, exports.isNone)(y) ? false : E.equals(x.value, y.value)); }\n}); };\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nvar getOrd = function (O) { return ({\n    equals: (0, exports.getEq)(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : (0, exports.isSome)(x) ? ((0, exports.isSome)(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function (S) { return ({\n    concat: function (x, y) { return ((0, exports.isNone)(x) ? y : (0, exports.isNone)(y) ? x : (0, exports.some)(S.concat(x.value, y.value))); },\n    empty: exports.none\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? exports.none : (0, exports.some)(f(fa.value));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Maps the `Some` value of this `Option` to the specified constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.as = (0, function_1.dual)(2, (0, Functor_1.as)(exports.Functor));\n/**\n * Maps the `Some` value of this `Option` to the void constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexports.asUnit = (0, Functor_1.asUnit)(exports.Functor);\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) {\n    return (0, exports.isNone)(fab) ? exports.none : (0, exports.isNone)(fa) ? exports.none : (0, exports.some)(fab.value(fa.value));\n}; };\nexports.ap = ap;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) { return ((0, exports.isNone)(ma) ? exports.none : f(ma.value)); });\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? b : f(b, fa.value);\n}; };\nexports.reduce = reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? M.empty : f(fa.value);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? b : f(fa.value, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Returns the provided `Option` `that` if `self` is `None`, otherwise returns `self`.\n *\n * @param self - The first `Option` to be checked.\n * @param that - The `Option` to return if `self` is `None`.\n *\n * @example\n * import * as O from \"fp-ts/Option\"\n *\n * assert.deepStrictEqual(O.orElse(O.none, () => O.none), O.none)\n * assert.deepStrictEqual(O.orElse(O.some(1), () => O.none), O.some(1))\n * assert.deepStrictEqual(O.orElse(O.none, () => O.some('b')), O.some('b'))\n * assert.deepStrictEqual(O.orElse(O.some(1), () => O.some('b')), O.some(1))\n *\n * @category error handling\n * @since 2.16.0\n */\nexports.orElse = (0, function_1.dual)(2, function (self, that) { return ((0, exports.isNone)(self) ? that() : self); });\n/**\n * Alias of `orElse`.\n *\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category legacy\n * @since 2.9.0\n */\nexports.altW = exports.orElse;\n/**\n * Alias of `orElse`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.alt = exports.orElse;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.7.0\n */\nvar zero = function () { return exports.none; };\nexports.zero = zero;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.Zero = {\n    URI: exports.URI,\n    zero: exports.zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexports.guard = (0, Zero_1.guard)(exports.Zero, exports.Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return (0, exports.isNone)(wa) ? exports.none : (0, exports.some)(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexports.compact = (0, exports.flatMap)(function_1.identity);\nvar defaultSeparated = /*#__PURE__*/ (0, Separated_1.separated)(exports.none, exports.none);\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar separate = function (ma) {\n    return (0, exports.isNone)(ma) ? defaultSeparated : (0, Separated_1.separated)((0, exports.getLeft)(ma.value), (0, exports.getRight)(ma.value));\n};\nexports.separate = separate;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar filter = function (predicate) {\n    return function (fa) {\n        return (0, exports.isNone)(fa) ? exports.none : predicate(fa.value) ? fa : exports.none;\n    };\n};\nexports.filter = filter;\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return (0, exports.isNone)(fa) ? exports.none : f(fa.value);\n}; };\nexports.filterMap = filterMap;\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return function (fa) {\n        return (0, Separated_1.separated)(_filter(fa, (0, Predicate_1.not)(predicate)), _filter(fa, predicate));\n    };\n};\nexports.partition = partition;\n/**\n * @category filtering\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return (0, function_1.flow)((0, exports.map)(f), exports.separate); };\nexports.partitionMap = partitionMap;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return (0, exports.isNone)(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some);\n        };\n    };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ta) {\n        return (0, exports.isNone)(ta) ? F.of(exports.none) : F.map(ta.value, exports.some);\n    };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\nexports.wilt = wilt;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @since 2.7.0\n */\nvar throwError = function () { return exports.none; };\nexports.throwError = throwError;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap,\n    throwError: exports.throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromEither = exports.getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function (onNone, onSome) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? onNone() : onSome(ma.value);\n    };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function (onNone) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? onNone() : ma.value;\n    };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category combinators\n * @since 2.15.0\n */\nexports.tap = (0, function_1.dual)(2, chainable.tap(exports.Chain));\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n * import * as E from 'fp-ts/Either'\n *\n * const compute = (value: number) => pipe(\n *   O.of(value),\n *   O.tapEither((value) => value > 0 ? E.right('ok') : E.left('error')),\n * )\n *\n * assert.deepStrictEqual(compute(1), O.of(1))\n * assert.deepStrictEqual(compute(-42), O.none)\n *\n * @category combinators\n * @since 2.16.0\n */\nexports.tapEither = (0, function_1.dual)(2, (0, FromEither_1.tapEither)(exports.FromEither, exports.Chain));\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category lifting\n * @since 2.11.0\n */\nexports.fromEitherK = (0, FromEither_1.fromEitherK)(exports.FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainEitherK = \n/*#__PURE__*/ (0, FromEither_1.chainEitherK)(exports.FromEither, exports.Chain);\n/**\n * Alias of `tapEither`.\n *\n * @category legacy\n * @since 2.12.0\n */\nexports.chainFirstEitherK = exports.tapEither;\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function (a) { return (a == null ? exports.none : (0, exports.some)(a)); };\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f) {\n    try {\n        return (0, exports.some)(f());\n    }\n    catch (e) {\n        return exports.none;\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); });\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category lifting\n * @since 2.9.0\n */\nvar fromNullableK = function (f) { return (0, function_1.flow)(f, exports.fromNullable); };\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category sequencing\n * @since 2.9.0\n */\nvar chainNullableK = function (f) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? exports.none : (0, exports.fromNullable)(f(ma.value));\n    };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.toNullable = (0, exports.match)(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.toUndefined = (0, exports.match)(function_1.constUndefined, function_1.identity);\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return (0, exports.isNone)(ma) ? false : E.equals(a, ma.value);\n    };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) {\n    return function (ma) {\n        return (0, exports.isNone)(ma) ? false : predicate(ma.value);\n    };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = chainable.bind(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var o = f(0, _.head(as));\n        if ((0, exports.isNone)(o)) {\n            return exports.none;\n        }\n        var out = [o.value];\n        for (var i = 1; i < as.length; i++) {\n            var o_1 = f(i, as[i]);\n            if ((0, exports.isNone)(o_1)) {\n                return exports.none;\n            }\n            out.push(o_1.value);\n        }\n        return (0, exports.some)(out);\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chain = exports.flatMap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexports.chainFirst = exports.tap;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `Refinement` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getRefinement(getOption) {\n    return function (a) { return (0, exports.isSome)(getOption(a)); };\n}\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.mapNullable = exports.chainNullableK;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `O.Functor` instead of `O.option`\n * (where `O` is from `import O from 'fp-ts/Option'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.option = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: exports.flatMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    zero: exports.zero,\n    alt: _alt,\n    extend: _extend,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = (0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = (0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getFirstMonoid = function () { return (0, exports.getMonoid)((0, Semigroup_1.first)()); };\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getLastMonoid = function () { return (0, exports.getMonoid)((0, Semigroup_1.last)()); };\nexports.getLastMonoid = getLastMonoid;\n","\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\nvar _bimap = function (fa, g, f) { return (0, function_1.pipe)(fa, (0, exports.bimap)(g, f)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar map = function (f) {\n    return function (fa) {\n        return (0, exports.separated)((0, exports.left)(fa), f((0, exports.right)(fa)));\n    };\n};\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar mapLeft = function (f) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), (0, exports.right)(fa));\n    };\n};\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar bimap = function (f, g) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), g((0, exports.right)(fa)));\n    };\n};\nexports.bimap = bimap;\n/**\n * @category type lambdas\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.guard = guard;\nfunction guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\n","export function chainFirst(M) {\n    var tapM = tap(M);\n    return function (f) { return function (first) { return tapM(first, f); }; };\n}\n/** @internal */\nexport function tap(M) {\n    return function (first, f) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); };\n}\nexport function bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\n","/**\n * @since 2.0.0\n */\nexport var tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = /*#__PURE__*/ constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = /*#__PURE__*/ constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = /*#__PURE__*/ constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = /*#__PURE__*/ constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\nexport function flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n/** @internal */\nexport var dual = function (arity, body) {\n    var isDataFirst = typeof arity === 'number' ? function (args) { return args.length >= arity; } : arity;\n    return function () {\n        var args = Array.from(arguments);\n        if (isDataFirst(arguments)) {\n            return body.apply(this, args);\n        }\n        return function (self) { return body.apply(void 0, __spreadArray([self], args, false)); };\n    };\n};\n","/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nimport { pipe } from './function';\nexport function map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexport function flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexport function bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\nexport { \n/**\n * @since 2.13.0\n */\nlet_ as let };\n/** @deprecated */\nexport function getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return pipe(fga, _map(f)); }\n    };\n}\n/** @internal */\nexport function as(F) {\n    return function (self, b) { return F.map(self, function () { return b; }); };\n}\n/** @internal */\nexport function asUnit(F) {\n    var asM = as(F);\n    return function (self) { return asM(self, undefined); };\n}\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { dual } from './function';\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/** @internal */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/** @internal */\nexport var none = { _tag: 'None' };\n/** @internal */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isLeft = function (ma) { return ma._tag === 'Left'; };\n/** @internal */\nexport var isRight = function (ma) { return ma._tag === 'Right'; };\n/** @internal */\nexport var left = function (e) { return ({ _tag: 'Left', left: e }); };\n/** @internal */\nexport var right = function (a) { return ({ _tag: 'Right', right: a }); };\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var singleton = function (a) { return [a]; };\n/** @internal */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/** @internal */\nexport var head = function (as) { return as[0]; };\n/** @internal */\nexport var tail = function (as) { return as.slice(1); };\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var emptyReadonlyArray = [];\n/** @internal */\nexport var emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\n/** @internal */\nexport var liftNullable = function (F) {\n    return function (f, onNullable) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither(o == null ? left(onNullable.apply(void 0, a)) : right(o));\n        };\n    };\n};\n/** @internal */\nexport var liftOption = function (F) {\n    return function (f, onNone) {\n        return function () {\n            var a = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                a[_i] = arguments[_i];\n            }\n            var o = f.apply(void 0, a);\n            return F.fromEither(isNone(o) ? left(onNone.apply(void 0, a)) : right(o.value));\n        };\n    };\n};\n/** @internal */\nexport var flatMapNullable = function (F, M) {\n    return /*#__PURE__*/ dual(3, function (self, f, onNullable) {\n        return M.flatMap(self, liftNullable(F)(f, onNullable));\n    });\n};\n/** @internal */\nexport var flatMapOption = function (F, M) {\n    return /*#__PURE__*/ dual(3, function (self, f, onNone) { return M.flatMap(self, liftOption(F)(f, onNone)); });\n};\n/** @internal */\nexport var flatMapEither = function (F, M) {\n    return /*#__PURE__*/ dual(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromEither(f(a)); });\n    });\n};\n/** @internal */\nexport var flatMapIO = function (F, M) {\n    return /*#__PURE__*/ dual(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromIO(f(a)); });\n    });\n};\n/** @internal */\nexport var flatMapTask = function (F, M) {\n    return /*#__PURE__*/ dual(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromTask(f(a)); });\n    });\n};\n/** @internal */\nexport var flatMapReader = function (F, M) {\n    return /*#__PURE__*/ dual(2, function (self, f) {\n        return M.flatMap(self, function (a) { return F.fromReader(f(a)); });\n    });\n};\n","import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport * as chainable from './Chain';\nimport { tailRec } from './ChainRec';\nimport { chainOptionK as chainOptionK_, filterOrElse as filterOrElse_, fromOption as fromOption_, fromOptionK as fromOptionK_, fromPredicate as fromPredicate_ } from './FromEither';\nimport { dual, flow, identity, pipe } from './function';\nimport { as as as_, asUnit as asUnit_, bindTo as bindTo_, flap as flap_, let as let__ } from './Functor';\nimport * as _ from './internal';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var right = _.right;\n/**\n * @category sequencing\n * @since 2.14.0\n */\nexport var flatMap = /*#__PURE__*/ dual(2, function (ma, f) { return (isLeft(ma) ? ma : f(ma.right)); });\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = foldMap(M);\n    return pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return pipe(fa, bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\nvar _chainRec = function (a, f) {\n    return tailRec(f(a), function (e) {\n        return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (SE, SA) { return ({\n    show: function (ma) { return (isLeft(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n    }\n}); };\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function (S) { return ({\n    concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n}); };\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nexport var getCompactable = function (M) {\n    var empty = left(M.empty);\n    return {\n        URI: URI,\n        _E: undefined,\n        compact: function (ma) { return (isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : right(ma.right.value)); },\n        separate: function (ma) {\n            return isLeft(ma)\n                ? separated(ma, ma)\n                : isLeft(ma.right)\n                    ? separated(right(ma.right.left), empty)\n                    : separated(empty, right(ma.right.right));\n        }\n    };\n};\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nexport var getFilterable = function (M) {\n    var empty = left(M.empty);\n    var _a = getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? separated(ma, ma)\n            : p(ma.right)\n                ? separated(empty, right(ma.right))\n                : separated(right(ma.right), empty);\n    };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return isLeft(e) ? separated(right(e.left), empty) : separated(empty, right(e.right));\n        }\n    };\n};\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var getWitherable = function (M) {\n    var F_ = getFilterable(M);\n    var C = getCompactable(M);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: witherDefault(Traversable, C),\n        wilt: wiltDefault(Traversable, C)\n    };\n};\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nexport var getApplicativeValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return isLeft(fab)\n            ? isLeft(fa)\n                ? left(SE.concat(fab.left, fa.left))\n                : fab\n            : isLeft(fa)\n                ? fa\n                : right(fab.right(fa.right));\n    },\n    of: of\n}); };\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nexport var getAltValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if (isRight(me)) {\n            return me;\n        }\n        var ea = that();\n        return isLeft(ea) ? left(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isLeft(fa) ? fa : right(f(fa.right));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Maps the `Right` value of this `Either` to the specified constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexport var as = dual(2, as_(Functor));\n/**\n * Maps the `Right` value of this `Either` to the void constant value.\n *\n * @category mapping\n * @since 2.16.0\n */\nexport var asUnit = asUnit_(Functor);\n/**\n * @category constructors\n * @since 2.7.0\n */\nexport var of = right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nexport var apW = function (fa) { return function (fab) {\n    return isLeft(fab) ? fab : isLeft(fa) ? fa : right(fab.right(fa.right));\n}; };\n/**\n * @since 2.0.0\n */\nexport var ap = apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: flatMap\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(b, fa.right);\n}; };\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(fa.right, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return isLeft(ta) ? F.of(left(ta.left)) : F.map(f(ta.right), right);\n        };\n    };\n};\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ma) {\n        return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var bimap = function (f, g) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : right(g(fa.right));\n}; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : fa;\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isLeft(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isLeft(wa) ? wa : right(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ChainRec = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: flatMap,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexport var throwError = left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: flatMap,\n    throwError: throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexport var fromPredicate = /*#__PURE__*/ fromPredicate_(FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromOption = \n/*#__PURE__*/ fromOption_(FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nexport var getOrElseW = function (onLeft) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexport var apFirstW = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexport var apSecondW = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category combinators\n * @since 2.15.0\n */\nexport var tap = /*#__PURE__*/ dual(2, chainable.tap(Chain));\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexport var flattenW = \n/*#__PURE__*/ flatMap(identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var flatten = flattenW;\n/**\n * @since 2.0.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * Use `liftOption`.\n *\n * @category legacy\n * @since 2.10.0\n */\nexport var fromOptionK = \n/*#__PURE__*/ fromOptionK_(FromEither);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.11.0\n */\nexport var chainOptionK = /*#__PURE__*/ chainOptionK_(FromEither, Chain);\n/**\n * Use `flatMapOption`.\n *\n * @category legacy\n * @since 2.13.2\n */\nexport var chainOptionKW = chainOptionK;\n/** @internal */\nvar _FromEither = {\n    fromEither: FromEither.fromEither\n};\n/**\n * @category lifting\n * @since 2.15.0\n */\nexport var liftNullable = /*#__PURE__*/ _.liftNullable(_FromEither);\n/**\n * @category lifting\n * @since 2.15.0\n */\nexport var liftOption = /*#__PURE__*/ _.liftOption(_FromEither);\n/** @internal */\nvar _FlatMap = {\n    flatMap: flatMap\n};\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexport var flatMapNullable = /*#__PURE__*/ _.flatMapNullable(_FromEither, _FlatMap);\n/**\n * @category sequencing\n * @since 2.15.0\n */\nexport var flatMapOption = /*#__PURE__*/ _.flatMapOption(_FromEither, _FlatMap);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterOrElse = /*#__PURE__*/ filterOrElse_(FromEither, Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexport var filterOrElseW = filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nexport var swap = function (ma) { return (isLeft(ma) ? right(ma.left) : left(ma.right)); };\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nexport var orElseW = function (onLeft) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : ma;\n    };\n};\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var orElse = orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromNullable = function (e) {\n    return function (a) {\n        return a == null ? left(e) : right(a);\n    };\n};\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f, onThrow) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onThrow(e));\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\n/**\n * Use `liftNullable`.\n *\n * @category legacy\n * @since 2.9.0\n */\nexport var fromNullableK = function (e) {\n    var from = fromNullable(e);\n    return function (f) { return flow(f, from); };\n};\n/**\n * Use `flatMapNullable`.\n *\n * @category legacy\n * @since 2.9.0\n */\nexport var chainNullableK = function (e) {\n    var from = fromNullableK(e);\n    return function (f) { return flatMap(from(f)); };\n};\n/**\n * @category conversions\n * @since 2.10.0\n */\nexport var toUnion = /*#__PURE__*/ foldW(identity, identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nexport function toError(e) {\n    try {\n        return e instanceof Error ? e : new Error(String(e));\n    }\n    catch (error) {\n        return new Error();\n    }\n}\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isLeft(ma) ? false : E.equals(a, ma.right);\n    };\n}\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) {\n    return function (ma) {\n        return isLeft(ma) ? false : predicate(ma.right);\n    };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ chainable.bind(Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexport var bindW = bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexport var apSW = apS;\n/**\n * @since 2.11.0\n */\nexport var ApT = /*#__PURE__*/ of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if (isLeft(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if (isLeft(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return right(out);\n    };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/ traverseArray(identity);\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.6.0\n */\nexport var chainW = flatMap;\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexport var chain = flatMap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.0.0\n */\nexport var chainFirst = tap;\n/**\n * Alias of `tap`.\n *\n * @category legacy\n * @since 2.8.0\n */\nexport var chainFirstW = tap;\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var stringifyJSON = function (u, onError) {\n    return tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var either = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: flatMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/ getApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/ getApplicativeMonoid(Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationSemigroup = function (SE, SA) {\n    return getApplySemigroup_(getApplicativeValidation(SE))(SA);\n};\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationMonoid = function (SE, MA) {\n    return getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function getValidation(SE) {\n    var ap = getApplicativeValidation(SE).ap;\n    var alt = getAltValidation(SE).alt;\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        of: of,\n        chain: flatMap,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: sequence,\n        chainRec: _chainRec,\n        throwError: throwError,\n        ap: ap,\n        alt: alt\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.endsWith = exports.startsWith = exports.includes = exports.split = exports.size = exports.isEmpty = exports.slice = exports.trimRight = exports.trimLeft = exports.trim = exports.replace = exports.toLowerCase = exports.toUpperCase = exports.isString = exports.Show = exports.Ord = exports.Monoid = exports.empty = exports.Semigroup = exports.Eq = void 0;\nvar ReadonlyNonEmptyArray_1 = require(\"./ReadonlyNonEmptyArray\");\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Eq.equals('a', 'a'), true)\n * assert.deepStrictEqual(S.Eq.equals('a', 'b'), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Semigroup = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * An empty `string`.\n *\n * @since 2.10.0\n */\nexports.empty = '';\n/**\n * `string` monoid under concatenation.\n *\n * The `empty` value is `''`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')\n * assert.deepStrictEqual(S.Monoid.concat('a', S.Monoid.empty), 'a')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Monoid = {\n    concat: exports.Semigroup.concat,\n    empty: exports.empty\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Ord.compare('a', 'a'), 0)\n * assert.deepStrictEqual(S.Ord.compare('a', 'b'), -1)\n * assert.deepStrictEqual(S.Ord.compare('b', 'a'), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Ord = {\n    equals: exports.Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Show.show('a'), '\"a\"')\n *\n * @category instances\n * @since 2.10.0\n */\nexports.Show = {\n    show: function (s) { return JSON.stringify(s); }\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.isString('a'), true)\n * assert.deepStrictEqual(S.isString(1), false)\n *\n * @category refinements\n * @since 2.11.0\n */\nvar isString = function (u) { return typeof u === 'string'; };\nexports.isString = isString;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('a', S.toUpperCase), 'A')\n *\n * @since 2.11.0\n */\nvar toUpperCase = function (s) { return s.toUpperCase(); };\nexports.toUpperCase = toUpperCase;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('A', S.toLowerCase), 'a')\n *\n * @since 2.11.0\n */\nvar toLowerCase = function (s) { return s.toLowerCase(); };\nexports.toLowerCase = toLowerCase;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.replace('b', 'd')), 'adc')\n *\n * @since 2.11.0\n */\nvar replace = function (searchValue, replaceValue) {\n    return function (s) {\n        return s.replace(searchValue, replaceValue);\n    };\n};\nexports.replace = replace;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trim), 'a')\n *\n * @since 2.11.0\n */\nvar trim = function (s) { return s.trim(); };\nexports.trim = trim;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimLeft), 'a ')\n *\n * @since 2.11.0\n */\nvar trimLeft = function (s) { return s.trimLeft(); };\nexports.trimLeft = trimLeft;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimRight), ' a')\n *\n * @since 2.11.0\n */\nvar trimRight = function (s) { return s.trimRight(); };\nexports.trimRight = trimRight;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abcd', S.slice(1, 3)), 'bc')\n *\n * @since 2.11.0\n */\nvar slice = function (start, end) {\n    return function (s) {\n        return s.slice(start, end);\n    };\n};\nexports.slice = slice;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `string` is empty.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('', S.isEmpty), true)\n * assert.deepStrictEqual(pipe('a', S.isEmpty), false)\n *\n * @since 2.10.0\n */\nvar isEmpty = function (s) { return s.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Calculate the number of characters in a `string`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.size), 3)\n *\n * @since 2.10.0\n */\nvar size = function (s) { return s.length; };\nexports.size = size;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.split('')), ['a', 'b', 'c'])\n * assert.deepStrictEqual(pipe('', S.split('')), [''])\n *\n * @since 2.11.0\n */\nvar split = function (separator) {\n    return function (s) {\n        var out = s.split(separator);\n        return (0, ReadonlyNonEmptyArray_1.isNonEmpty)(out) ? out : [s];\n    };\n};\nexports.split = split;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.includes('b')), true)\n * assert.deepStrictEqual(pipe('abc', S.includes('d')), false)\n *\n * @since 2.11.0\n */\nvar includes = function (searchString, position) {\n    return function (s) {\n        return s.includes(searchString, position);\n    };\n};\nexports.includes = includes;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.startsWith('a')), true)\n * assert.deepStrictEqual(pipe('bc', S.startsWith('a')), false)\n *\n * @since 2.11.0\n */\nvar startsWith = function (searchString, position) {\n    return function (s) {\n        return s.startsWith(searchString, position);\n    };\n};\nexports.startsWith = startsWith;\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.endsWith('c')), true)\n * assert.deepStrictEqual(pipe('ab', S.endsWith('c')), false)\n *\n * @since 2.11.0\n */\nvar endsWith = function (searchString, position) {\n    return function (s) {\n        return s.endsWith(searchString, position);\n    };\n};\nexports.endsWith = endsWith;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Compactable = exports.getFoldableWithIndex = exports.getFoldable = exports.FunctorWithIndex = exports.flap = exports.Functor = exports.URI = exports.separate = exports.compact = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports._sequence = exports._traverse = exports._filterWithIndex = exports._filterMapWithIndex = exports._partitionWithIndex = exports._partitionMapWithIndex = exports._reduceRightWithIndex = exports._foldMapWithIndex = exports._reduceWithIndex = exports._partitionMap = exports._partition = exports._filterMap = exports._filter = exports._reduceRight = exports._foldMap = exports._reduce = exports._mapWithIndex = exports._map = exports.difference = exports.intersection = exports.union = exports.fromEntries = exports.toEntries = exports.wilt = exports.wither = exports.singleton = exports.empty = exports.modifyAt = exports.updateAt = exports.has = exports.upsertAt = exports.toReadonlyArray = exports.keys = exports.isEmpty = exports.size = exports.toRecord = exports.fromRecord = void 0;\nexports.readonlyRecord = exports.insertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.getDifferenceMagma = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.getUnionSemigroup = exports.getWitherable = exports.getTraversableWithIndex = exports.getTraversable = exports.FilterableWithIndex = exports.Filterable = void 0;\nexports.collect = collect;\nexports.toUnfoldable = toUnfoldable;\nexports.deleteAt = deleteAt;\nexports.pop = pop;\nexports.isSubrecord = isSubrecord;\nexports.lookup = lookup;\nexports.mapWithIndex = mapWithIndex;\nexports.map = map;\nexports.reduceWithIndex = reduceWithIndex;\nexports.foldMapWithIndex = foldMapWithIndex;\nexports.reduceRightWithIndex = reduceRightWithIndex;\nexports.traverseWithIndex = traverseWithIndex;\nexports.traverse = traverse;\nexports.sequence = sequence;\nexports.partitionMapWithIndex = partitionMapWithIndex;\nexports.partitionWithIndex = partitionWithIndex;\nexports.filterMapWithIndex = filterMapWithIndex;\nexports.filterWithIndex = filterWithIndex;\nexports.fromFoldable = fromFoldable;\nexports.fromFoldableMap = fromFoldableMap;\nexports.every = every;\nexports.some = some;\nexports.elem = elem;\nexports.reduce = reduce;\nexports.foldMap = foldMap;\nexports.reduceRight = reduceRight;\nexports.getShow = getShow;\nexports.getEq = getEq;\nexports.getMonoid = getMonoid;\nexports.hasOwnProperty = hasOwnProperty;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar S = __importStar(require(\"./string\"));\nvar Witherable_1 = require(\"./Witherable\");\n/**\n * Builds a `ReadonlyRecord` by copying a `Record`.\n *\n * @example\n * import { ReadonlyRecord, fromRecord } from \"fp-ts/ReadonlyRecord\"\n *\n * const x: Record<string, number> = { a: 1, b: 2 };\n * const y: ReadonlyRecord<string, number> = fromRecord(x);\n * assert.deepStrictEqual(x,y);\n * // `y.a = 5` gives compiler error\n *\n * @category conversions\n * @since 2.5.0\n */\nvar fromRecord = function (r) { return Object.assign({}, r); };\nexports.fromRecord = fromRecord;\n/**\n * Builds a mutable `Record` from a `ReadonlyRecord`.\n *\n * @example\n * import { ReadonlyRecord, toRecord } from \"fp-ts/ReadonlyRecord\"\n *\n * const x: ReadonlyRecord<string, number> = { a: 1, b: 2 };\n * const y: Record<string, number> = toRecord(x);\n * assert.deepStrictEqual(x,y);\n * y.a = 5; // it's ok, y is mutable\n *\n * @category conversions\n * @since 2.5.0\n */\nvar toRecord = function (r) { return Object.assign({}, r); };\nexports.toRecord = toRecord;\n/**\n * Calculate the number of key/value pairs in a `ReadonlyRecord`,\n *\n * @example\n * import { size } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(size({ a: true, b: 2, c: \"three\" }), 3);\n *\n * @since 2.5.0\n */\nvar size = function (r) { return Object.keys(r).length; };\nexports.size = size;\n/**\n * Test whether a `ReadonlyRecord` is empty.\n *\n * @example\n * import { isEmpty } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(isEmpty({}), true);\n * assert.deepStrictEqual(isEmpty({ a: 3 }), false);\n * @since 2.5.0\n */\nvar isEmpty = function (r) {\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            return false;\n        }\n    }\n    return true;\n};\nexports.isEmpty = isEmpty;\nvar keys_ = function (O) {\n    return function (r) {\n        return Object.keys(r).sort(O.compare);\n    };\n};\n/**\n * @since 2.5.0\n */\nexports.keys = keys_(S.Ord);\nfunction collect(O) {\n    if (typeof O === 'function') {\n        return collect(S.Ord)(O);\n    }\n    var keysO = keys_(O);\n    return function (f) {\n        return function (r) {\n            var out = [];\n            for (var _i = 0, _a = keysO(r); _i < _a.length; _i++) {\n                var key = _a[_i];\n                out.push(f(key, r[key]));\n            }\n            return out;\n        };\n    };\n}\n/**\n * Get a sorted `ReadonlyArray` of the key/value pairs contained in a `ReadonlyRecord`.\n *\n * @example\n * import { toReadonlyArray } from 'fp-ts/ReadonlyRecord'\n *\n * const x = { c: 3, a: \"foo\", b: false };\n * assert.deepStrictEqual(toReadonlyArray(x), [\n *   [\"a\", \"foo\"],\n *   [\"b\", false],\n *   [\"c\", 3],\n * ]);\n *\n * @category conversions\n * @since 2.5.0\n */\nexports.toReadonlyArray = \n/*#__PURE__*/ collect(S.Ord)(function (k, a) { return [k, a]; });\nfunction toUnfoldable(U) {\n    return function (r) {\n        var sas = (0, exports.toReadonlyArray)(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? _.some([sas[b], b + 1]) : _.none); });\n    };\n}\n/**\n * Insert or replace a key/value pair in a `ReadonlyRecord`.\n *\n * @example\n * import { upsertAt } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(upsertAt(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n * assert.deepStrictEqual(upsertAt(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n *\n * @since 2.10.0\n */\nvar upsertAt = function (k, a) {\n    return function (r) {\n        if (_.has.call(r, k) && r[k] === a) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        out[k] = a;\n        return out;\n    };\n};\nexports.upsertAt = upsertAt;\n/**\n * Test whether or not a key exists in a `ReadonlyRecord`.\n *\n * Note. This function is not pipeable because is a `Refinement`.\n *\n * @example\n * import { has } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(has(\"a\", { a: 1, b: 2 }), true);\n * assert.deepStrictEqual(has(\"c\", { a: 1, b: 2 }), false);\n *\n * @since 2.10.0\n */\nvar has = function (k, r) { return _.has.call(r, k); };\nexports.has = has;\nfunction deleteAt(k) {\n    return function (r) {\n        if (!_.has.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\n/**\n * Replace a key/value pair in a `ReadonlyRecord`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(updateAt(\"a\", 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(updateAt(\"c\", 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.5.0\n */\nvar updateAt = function (k, a) {\n    return function (r) {\n        if (!(0, exports.has)(k, r)) {\n            return _.none;\n        }\n        if (r[k] === a) {\n            return _.some(r);\n        }\n        var out = Object.assign({}, r);\n        out[k] = a;\n        return _.some(out);\n    };\n};\nexports.updateAt = updateAt;\n/**\n * Applies a mapping function to one specific key/value pair in a `ReadonlyRecord`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(modifyAt(\"a\", (x: number) => x * 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(modifyAt(\"c\", (x: number) => x * 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.5.0\n */\nvar modifyAt = function (k, f) {\n    return function (r) {\n        if (!(0, exports.has)(k, r)) {\n            return _.none;\n        }\n        var next = f(r[k]);\n        if (next === r[k]) {\n            return _.some(r);\n        }\n        var out = Object.assign({}, r);\n        out[k] = next;\n        return _.some(out);\n    };\n};\nexports.modifyAt = modifyAt;\nfunction pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = lookup(k, r);\n        return _.isNone(oa) ? _.none : _.some([oa.value, deleteAtk(r)]);\n    };\n}\nfunction isSubrecord(E) {\n    return function (me, that) {\n        if (that === undefined) {\n            var isSubrecordE_1 = isSubrecord(E);\n            return function (that) { return isSubrecordE_1(that, me); };\n        }\n        for (var k in me) {\n            if (!_.has.call(that, k) || !E.equals(me[k], that[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\nfunction lookup(k, r) {\n    if (r === undefined) {\n        return function (r) { return lookup(k, r); };\n    }\n    return _.has.call(r, k) ? _.some(r[k]) : _.none;\n}\n/**\n * @since 2.5.0\n */\nexports.empty = {};\nfunction mapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                out[k] = f(k, r[k]);\n            }\n        }\n        return out;\n    };\n}\nfunction map(f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n}\nfunction reduceWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 2) {\n        return reduceWithIndex(S.Ord).apply(void 0, args);\n    }\n    var keysO = keys_(args[0]);\n    return function (b, f) { return function (fa) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = f(k, out, fa[k]);\n        }\n        return out;\n    }; };\n}\nfunction foldMapWithIndex(O) {\n    if ('compare' in O) {\n        var keysO_1 = keys_(O);\n        return function (M) {\n            return function (f) {\n                return function (fa) {\n                    var out = M.empty;\n                    var ks = keysO_1(fa);\n                    var len = ks.length;\n                    for (var i = 0; i < len; i++) {\n                        var k = ks[i];\n                        out = M.concat(out, f(k, fa[k]));\n                    }\n                    return out;\n                };\n            };\n        };\n    }\n    return foldMapWithIndex(S.Ord)(O);\n}\nfunction reduceRightWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 2) {\n        return reduceRightWithIndex(S.Ord).apply(void 0, args);\n    }\n    var keysO = keys_(args[0]);\n    return function (b, f) { return function (fa) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var k = ks[i];\n            out = f(k, fa[k], out);\n        }\n        return out;\n    }; };\n}\n/**\n * Create a `ReadonlyRecord` with one key/value pair.\n *\n * @example\n * import { singleton } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(singleton(\"a\", 1), { a: 1 });\n *\n * @category constructors\n * @since 2.5.0\n */\nvar singleton = function (k, a) {\n    var _a;\n    return (_a = {}, _a[k] = a, _a);\n};\nexports.singleton = singleton;\nfunction traverseWithIndex(F) {\n    var traverseWithIndexOF = _traverseWithIndex(S.Ord)(F);\n    return function (f) { return function (ta) { return traverseWithIndexOF(ta, f); }; };\n}\nfunction traverse(F) {\n    var traverseOF = (0, exports._traverse)(S.Ord)(F);\n    return function (f) { return function (ta) { return traverseOF(ta, f); }; };\n}\nfunction sequence(F) {\n    return (0, exports._sequence)(S.Ord)(F);\n}\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map((0, function_1.pipe)(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category filtering\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map((0, function_1.pipe)(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\nfunction partitionMapWithIndex(f) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var e = f(k, r[k]);\n                switch (e._tag) {\n                    case 'Left':\n                        left[k] = e.left;\n                        break;\n                    case 'Right':\n                        right[k] = e.right;\n                        break;\n                }\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n}\nfunction partitionWithIndex(predicateWithIndex) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var a = r[k];\n                if (predicateWithIndex(k, a)) {\n                    right[k] = a;\n                }\n                else {\n                    left[k] = a;\n                }\n            }\n        }\n        return (0, Separated_1.separated)(left, right);\n    };\n}\nfunction filterMapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var ob = f(k, r[k]);\n                if (_.isSome(ob)) {\n                    out[k] = ob.value;\n                }\n            }\n        }\n        return out;\n    };\n}\nfunction filterWithIndex(predicateWithIndex) {\n    return function (fa) {\n        var out = {};\n        var changed = false;\n        for (var key in fa) {\n            if (_.has.call(fa, key)) {\n                var a = fa[key];\n                if (predicateWithIndex(key, a)) {\n                    out[key] = a;\n                }\n                else {\n                    changed = true;\n                }\n            }\n        }\n        return changed ? out : fa;\n    };\n}\nfunction fromFoldable(M, F) {\n    var fromFoldableMapM = fromFoldableMap(M, F);\n    return function (fka) { return fromFoldableMapM(fka, function_1.identity); };\n}\nfunction fromFoldableMap(M, F) {\n    return function (ta, f) {\n        return F.reduce(ta, {}, function (r, a) {\n            var _a = f(a), k = _a[0], b = _a[1];\n            r[k] = _.has.call(r, k) ? M.concat(r[k], b) : b;\n            return r;\n        });\n    };\n}\n/**\n * Alias of [`toReadonlyArray`](#toreadonlyarray).\n *\n * @example\n * import { toEntries } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(toEntries({ b: 2, a: 1 }), [['a', 1], ['b', 2]])\n *\n * @category conversions\n * @since 2.12.0\n */\nexports.toEntries = exports.toReadonlyArray;\n/**\n * Converts a `ReadonlyArray` of `[key, value]` tuples into a `ReadonlyRecord`.\n *\n * @example\n * import { fromEntries } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(fromEntries([['a', 1], ['b', 2], ['a', 3]]), { b: 2, a: 3 })\n *\n * @since 2.12.0\n * @category conversions\n */\nvar fromEntries = function (fa) {\n    var out = {};\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var a = fa_1[_i];\n        out[a[0]] = a[1];\n    }\n    return out;\n};\nexports.fromEntries = fromEntries;\nfunction every(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (!predicate(r[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\n/**\n * Test if at least one value in a `ReadonlyRecord` satisfies the predicate.\n *\n * @example\n * import { some } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: 1, b: -2 }), true);\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: -1, b: -2 }), false);\n *\n * @since 2.5.0\n */\nfunction some(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (predicate(r[k])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nfunction elem(E) {\n    return function (a, fa) {\n        if (fa === undefined) {\n            var elemE_1 = elem(E);\n            return function (fa) { return elemE_1(a, fa); };\n        }\n        for (var k in fa) {\n            if (E.equals(fa[k], a)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Union of two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` combining all the\n * entries of the two inputs.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements with the same key.\n *\n * @example\n * import { union } from \"fp-ts/ReadonlyRecord\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(union(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4, b: 2, c: 3 });\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(union(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1, b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nvar union = function (M) {\n    return function (second) {\n        return function (first) {\n            if ((0, exports.isEmpty)(first)) {\n                return second;\n            }\n            if ((0, exports.isEmpty)(second)) {\n                return first;\n            }\n            var out = {};\n            for (var k in first) {\n                if ((0, exports.has)(k, second)) {\n                    out[k] = M.concat(first[k], second[k]);\n                }\n                else {\n                    out[k] = first[k];\n                }\n            }\n            for (var k in second) {\n                if (!(0, exports.has)(k, out)) {\n                    out[k] = second[k];\n                }\n            }\n            return out;\n        };\n    };\n};\nexports.union = union;\n/**\n * Intersection of two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` combining only the\n * entries of the two inputswith the same key.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements.\n *\n * @example\n * import { intersection } from \"fp-ts/ReadonlyRecord\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(intersection(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4});\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(intersection(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1});\n *\n * @since 2.11.0\n */\nvar intersection = function (M) {\n    return function (second) {\n        return function (first) {\n            if ((0, exports.isEmpty)(first) || (0, exports.isEmpty)(second)) {\n                return exports.empty;\n            }\n            var out = {};\n            for (var k in first) {\n                if ((0, exports.has)(k, second)) {\n                    out[k] = M.concat(first[k], second[k]);\n                }\n            }\n            return out;\n        };\n    };\n};\nexports.intersection = intersection;\n/**\n * Difference between two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` composed by the\n * entries of the two inputs, removing the entries with the same\n * key in both inputs.\n *\n * @example\n * import { difference } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(difference({ a: 1 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3, c: 3 })({ a: 1, b: 2 }), { b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nvar difference = function (second) {\n    return function (first) {\n        if ((0, exports.isEmpty)(first)) {\n            return second;\n        }\n        if ((0, exports.isEmpty)(second)) {\n            return first;\n        }\n        var out = {};\n        for (var k in first) {\n            if (!(0, exports.has)(k, second)) {\n                out[k] = first[k];\n            }\n        }\n        for (var k in second) {\n            if (!(0, exports.has)(k, first)) {\n                out[k] = second[k];\n            }\n        }\n        return out;\n    };\n};\nexports.difference = difference;\n/** @internal */\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, map(f)); };\nexports._map = _map;\n/** @internal */\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, mapWithIndex(f)); };\nexports._mapWithIndex = _mapWithIndex;\n/** @internal */\n/* istanbul ignore next */\nvar _reduce = function (O) {\n    var reduceO = reduce(O);\n    return function (fa, b, f) { return (0, function_1.pipe)(fa, reduceO(b, f)); };\n};\nexports._reduce = _reduce;\n/** @internal */\nvar _foldMap = function (O) { return function (M) {\n    var foldMapM = foldMap(O)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n}; };\nexports._foldMap = _foldMap;\n/** @internal */\n/* istanbul ignore next */\nvar _reduceRight = function (O) {\n    var reduceRightO = reduceRight(O);\n    return function (fa, b, f) { return (0, function_1.pipe)(fa, reduceRightO(b, f)); };\n};\nexports._reduceRight = _reduceRight;\n/** @internal */\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) {\n    return (0, function_1.pipe)(fa, (0, exports.filter)(predicate));\n};\nexports._filter = _filter;\n/** @internal */\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.filterMap)(f)); };\nexports._filterMap = _filterMap;\n/** @internal */\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) { return (0, function_1.pipe)(fa, (0, exports.partition)(predicate)); };\nexports._partition = _partition;\n/** @internal */\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.partitionMap)(f)); };\nexports._partitionMap = _partitionMap;\n/** @internal */\n/* istanbul ignore next */\nvar _reduceWithIndex = function (O) {\n    var reduceWithIndexO = reduceWithIndex(O);\n    return function (fa, b, f) { return (0, function_1.pipe)(fa, reduceWithIndexO(b, f)); };\n};\nexports._reduceWithIndex = _reduceWithIndex;\n/** @internal */\nvar _foldMapWithIndex = function (O) {\n    var foldMapWithIndexO = foldMapWithIndex(O);\n    return function (M) {\n        var foldMapWithIndexM = foldMapWithIndexO(M);\n        return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n    };\n};\nexports._foldMapWithIndex = _foldMapWithIndex;\n/** @internal */\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (O) {\n    var reduceRightWithIndexO = reduceRightWithIndex(O);\n    return function (fa, b, f) { return (0, function_1.pipe)(fa, reduceRightWithIndexO(b, f)); };\n};\nexports._reduceRightWithIndex = _reduceRightWithIndex;\n/** @internal */\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, partitionMapWithIndex(f)); };\nexports._partitionMapWithIndex = _partitionMapWithIndex;\n/** @internal */\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) {\n    return (0, function_1.pipe)(fa, partitionWithIndex(predicateWithIndex));\n};\nexports._partitionWithIndex = _partitionWithIndex;\n/** @internal */\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, filterMapWithIndex(f)); };\nexports._filterMapWithIndex = _filterMapWithIndex;\n/** @internal */\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return (0, function_1.pipe)(fa, filterWithIndex(predicateWithIndex)); };\nexports._filterWithIndex = _filterWithIndex;\n/** @internal */\nvar _traverse = function (O) {\n    var traverseWithIndexO = _traverseWithIndex(O);\n    return function (F) {\n        var traverseWithIndexOF = traverseWithIndexO(F);\n        return function (ta, f) { return traverseWithIndexOF(ta, (0, function_1.flow)(function_1.SK, f)); };\n    };\n};\nexports._traverse = _traverse;\n/** @internal */\nvar _sequence = function (O) {\n    var traverseO = (0, exports._traverse)(O);\n    return function (F) {\n        var traverseOF = traverseO(F);\n        return function (ta) { return traverseOF(ta, function_1.identity); };\n    };\n};\nexports._sequence = _sequence;\nvar _traverseWithIndex = function (O) {\n    return function (F) {\n        var keysO = keys_(O);\n        return function (ta, f) {\n            var ks = keysO(ta);\n            if (ks.length === 0) {\n                return F.of(exports.empty);\n            }\n            var fr = F.of({});\n            var _loop_1 = function (key) {\n                fr = F.ap(F.map(fr, function (r) { return function (b) {\n                    var _a;\n                    return Object.assign({}, r, (_a = {}, _a[key] = b, _a));\n                }; }), f(key, ta[key]));\n            };\n            for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n                var key = ks_1[_i];\n                _loop_1(key);\n            }\n            return fr;\n        };\n    };\n};\n/**\n * Given a `Predicate`, it produces a new `ReadonlyRecord` keeping only the entries with a\n * value that satisfies the provided predicate.\n *\n * @example\n * import { filter } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(filter((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo\",\n *   b: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nvar filter = function (predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n};\nexports.filter = filter;\n/**\n * Maps a `ReadonlyRecord` with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from \"fp-ts/ReadonlyRecord\"\n * import { option } from \"fp-ts\"\n *\n * const f = (s: string) => s.length < 4 ? option.some(`${s} is short`): option.none\n * assert.deepStrictEqual(filterMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo is short\",\n *   b: \"bar is short\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nvar filterMap = function (f) { return filterMapWithIndex(function (_, a) { return f(a); }); };\nexports.filterMap = filterMap;\n/**\n * Partition a `ReadonlyRecord` into two parts according to a `Predicate`.\n *\n * @example\n * import { partition } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(partition((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left:{\n *     c: \"verylong\"\n *   },\n *   right: {\n *     a: \"foo\",\n *     b: \"bar\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * Maps a `ReadonlyRecord` with a function returning an `Either` and\n * partitions the resulting `ReadonlyRecord` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMap } from \"fp-ts/ReadonlyRecord\"\n * import { either } from \"fp-ts\"\n *\n * const f = (s: string) => (s.length < 4 ? either.right(`${s} is short`) : either.left(`${s} is not short`));\n * assert.deepStrictEqual(partitionMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left: {\n *     c: \"verylong is not short\",\n *   },\n *   right: {\n *     a: \"foo is short\",\n *     b: \"bar is short\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\nfunction reduce() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 1) {\n        var reduceWithIndexO_1 = reduceWithIndex(args[0]);\n        return function (b, f) { return reduceWithIndexO_1(b, function (_, b, a) { return f(b, a); }); };\n    }\n    return reduce(S.Ord).apply(void 0, args);\n}\nfunction foldMap(O) {\n    if ('compare' in O) {\n        var foldMapWithIndexO_1 = foldMapWithIndex(O);\n        return function (M) {\n            var foldMapWithIndexM = foldMapWithIndexO_1(M);\n            return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n        };\n    }\n    return foldMap(S.Ord)(O);\n}\nfunction reduceRight() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 1) {\n        var reduceRightWithIndexO_1 = reduceRightWithIndex(args[0]);\n        return function (b, f) { return reduceRightWithIndexO_1(b, function (_, b, a) { return f(b, a); }); };\n    }\n    return reduceRight(S.Ord).apply(void 0, args);\n}\n/**\n * Compact a `ReadonlyRecord` of `Option`s discarding the `None` values and\n * keeping the `Some` values.\n *\n * @example\n * import { compact } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(compact({ a: option.some(\"foo\"), b: option.none, c: option.some(\"bar\") }), {\n *   a: \"foo\",\n *   c: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nvar compact = function (r) {\n    var out = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var oa = r[k];\n            if (_.isSome(oa)) {\n                out[k] = oa.value;\n            }\n        }\n    }\n    return out;\n};\nexports.compact = compact;\n/**\n * Separate a `ReadonlyRecord` of `Either`s into `Left`s and `Right`s.\n *\n * @example\n * import { separate } from 'fp-ts/ReadonlyRecord'\n * import { either } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   separate({ a: either.right(\"foo\"), b: either.left(\"bar\"), c: either.right(\"baz\") }),\n *   {\n *     right: {\n *       a: \"foo\",\n *       c: \"baz\",\n *     },\n *     left: {\n *       b: \"bar\",\n *     },\n *   }\n * );\n *\n * @category filtering\n * @since 2.5.0\n */\nvar separate = function (r) {\n    var left = {};\n    var right = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var e = r[k];\n            if (_.isLeft(e)) {\n                left[k] = e.left;\n            }\n            else {\n                right[k] = e.right;\n            }\n        }\n    }\n    return (0, Separated_1.separated)(left, right);\n};\nexports.separate = separate;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyRecord';\nfunction getShow(O) {\n    if ('compare' in O) {\n        return function (S) { return ({\n            show: function (r) {\n                var elements = collect(O)(function (k, a) { return \"\".concat(JSON.stringify(k), \": \").concat(S.show(a)); })(r).join(', ');\n                return elements === '' ? '{}' : \"{ \".concat(elements, \" }\");\n            }\n        }); };\n    }\n    return getShow(S.Ord)(O);\n}\nfunction getEq(E) {\n    var isSubrecordE = isSubrecord(E);\n    return (0, Eq_1.fromEquals)(function (x, y) { return isSubrecordE(x)(y) && isSubrecordE(y)(x); });\n}\nfunction getMonoid(S) {\n    return {\n        concat: function (first, second) {\n            if ((0, exports.isEmpty)(first)) {\n                return second;\n            }\n            if ((0, exports.isEmpty)(second)) {\n                return first;\n            }\n            var r = Object.assign({}, first);\n            for (var k in second) {\n                if (_.has.call(second, k)) {\n                    r[k] = _.has.call(first, k) ? S.concat(first[k], second[k]) : second[k];\n                }\n            }\n            return r;\n        },\n        empty: exports.empty\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: exports._map\n};\n/**\n * Takes a value and a `ReadonlyRecord` of functions and returns a\n * `ReadonlyRecord` by applying each function to the input value.\n *\n * @example\n * import { flap } from \"fp-ts/ReadonlyRecord\"\n *\n * const fab = { x: (n: number) => `${n} times 2`, y: (n: number) => `${n * 2}` };\n * assert.deepStrictEqual(flap(3)(fab), {\n *   x: \"3 times 2\",\n *   y: \"6\",\n * });\n *\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: exports._map,\n    mapWithIndex: exports._mapWithIndex\n};\n/**\n * Produces a `Foldable` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nvar getFoldable = function (O) { return ({\n    URI: exports.URI,\n    reduce: (0, exports._reduce)(O),\n    foldMap: (0, exports._foldMap)(O),\n    reduceRight: (0, exports._reduceRight)(O)\n}); };\nexports.getFoldable = getFoldable;\n/**\n * Produces a `FoldableWithIndex1` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nvar getFoldableWithIndex = function (O) { return ({\n    URI: exports.URI,\n    reduce: (0, exports._reduce)(O),\n    foldMap: (0, exports._foldMap)(O),\n    reduceRight: (0, exports._reduceRight)(O),\n    reduceWithIndex: (0, exports._reduceWithIndex)(O),\n    foldMapWithIndex: (0, exports._foldMapWithIndex)(O),\n    reduceRightWithIndex: (0, exports._reduceRightWithIndex)(O)\n}); };\nexports.getFoldableWithIndex = getFoldableWithIndex;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: exports._map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: exports._filter,\n    filterMap: exports._filterMap,\n    partition: exports._partition,\n    partitionMap: exports._partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: exports._map,\n    mapWithIndex: exports._mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: exports._filter,\n    filterMap: exports._filterMap,\n    partition: exports._partition,\n    partitionMap: exports._partitionMap,\n    filterMapWithIndex: exports._filterMapWithIndex,\n    filterWithIndex: exports._filterWithIndex,\n    partitionMapWithIndex: exports._partitionMapWithIndex,\n    partitionWithIndex: exports._partitionWithIndex\n};\n/**\n * Produces a `Traversable` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar getTraversable = function (O) { return ({\n    URI: exports.URI,\n    map: exports._map,\n    reduce: (0, exports._reduce)(O),\n    foldMap: (0, exports._foldMap)(O),\n    reduceRight: (0, exports._reduceRight)(O),\n    traverse: (0, exports._traverse)(O),\n    sequence: (0, exports._sequence)(O)\n}); };\nexports.getTraversable = getTraversable;\n/**\n * Produces a `TraversableWithIndex` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar getTraversableWithIndex = function (O) { return ({\n    URI: exports.URI,\n    map: exports._map,\n    mapWithIndex: exports._mapWithIndex,\n    reduce: (0, exports._reduce)(O),\n    foldMap: (0, exports._foldMap)(O),\n    reduceRight: (0, exports._reduceRight)(O),\n    reduceWithIndex: (0, exports._reduceWithIndex)(O),\n    foldMapWithIndex: (0, exports._foldMapWithIndex)(O),\n    reduceRightWithIndex: (0, exports._reduceRightWithIndex)(O),\n    traverse: (0, exports._traverse)(O),\n    sequence: (0, exports._sequence)(O),\n    traverseWithIndex: _traverseWithIndex(O)\n}); };\nexports.getTraversableWithIndex = getTraversableWithIndex;\n/**\n * @category filtering\n * @since 2.11.0\n */\nvar getWitherable = function (O) {\n    var T = (0, exports.getTraversable)(O);\n    return {\n        URI: exports.URI,\n        map: exports._map,\n        reduce: (0, exports._reduce)(O),\n        foldMap: (0, exports._foldMap)(O),\n        reduceRight: (0, exports._reduceRight)(O),\n        traverse: T.traverse,\n        sequence: T.sequence,\n        compact: exports.compact,\n        separate: exports.separate,\n        filter: exports._filter,\n        filterMap: exports._filterMap,\n        partition: exports._partition,\n        partitionMap: exports._partitionMap,\n        wither: (0, Witherable_1.witherDefault)(T, exports.Compactable),\n        wilt: (0, Witherable_1.wiltDefault)(T, exports.Compactable)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `ReadonlyRecord` of the base type.\n * The resulting `Semigroup` concatenates two `ReadonlyRecord`s by\n * `union`.\n *\n * @example\n * import { getUnionSemigroup, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sReadonlyRecord: Semigroup<ReadonlyRecord<string, number>> = getUnionSemigroup(sNumber);\n * assert.deepStrictEqual(sReadonlyRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { a: 1, b: -1, c: 4 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (S) {\n    var unionS = (0, exports.union)(S);\n    return {\n        concat: function (first, second) { return unionS(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * Same as `getMonoid`.\n * Returns a `Monoid` instance for `ReadonlyRecord`s given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `ReadonlyRecord`s combining the\n * entries that have the same key with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getUnionMonoid } from 'fp-ts/ReadonlyRecord'\n *\n * const M = getUnionMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getUnionMonoid = function (S) { return ({\n    concat: (0, exports.getUnionSemigroup)(S).concat,\n    empty: exports.empty\n}); };\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `ReadonlyRecord` of the base type.\n * The resulting `Semigroup` concatenates two `ReadonlyRecord`s by\n * `intersection`.\n *\n * @example\n * import { getIntersectionSemigroup, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sReadonlyRecord: Semigroup<ReadonlyRecord<string, number>> = getIntersectionSemigroup(sNumber);\n * assert.deepStrictEqual(sReadonlyRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { b: -1 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getIntersectionSemigroup = function (S) {\n    var intersectionS = (0, exports.intersection)(S);\n    return {\n        concat: function (first, second) { return intersectionS(second)(first); }\n    };\n};\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * Produces a `Magma` with a `concat` function that combines\n * two `ReadonlyRecord`s by making the `difference`.\n *\n * @example\n * import { getDifferenceMagma, difference, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Magma } from \"fp-ts/Magma\"\n *\n * const r1 = { a: 3, c: 3 };\n * const r2 = { a: 1, b: 2 };\n * const m: Magma<ReadonlyRecord<string, number>> = getDifferenceMagma<number>();\n * assert.deepStrictEqual(m.concat(r1, r2), difference(r2)(r1));\n * assert.deepStrictEqual(m.concat(r1, r2), { c: 3, b: 2 });\n *\n * @category instances\n * @since 2.11.0\n */\nvar getDifferenceMagma = function () { return ({\n    concat: function (first, second) { return (0, exports.difference)(second)(first); }\n}); };\nexports.getDifferenceMagma = getDifferenceMagma;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `getFoldable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: /*#__PURE__*/ (0, exports._reduce)(S.Ord),\n    foldMap: /*#__PURE__*/ (0, exports._foldMap)(S.Ord),\n    reduceRight: /*#__PURE__*/ (0, exports._reduceRight)(S.Ord)\n};\n/**\n * Use `getFoldableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: /*#__PURE__*/ (0, exports._reduce)(S.Ord),\n    foldMap: /*#__PURE__*/ (0, exports._foldMap)(S.Ord),\n    reduceRight: /*#__PURE__*/ (0, exports._reduceRight)(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ (0, exports._reduceWithIndex)(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ (0, exports._foldMapWithIndex)(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ (0, exports._reduceRightWithIndex)(S.Ord)\n};\n/**\n * Use `getTraversable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: exports._map,\n    reduce: /*#__PURE__*/ (0, exports._reduce)(S.Ord),\n    foldMap: /*#__PURE__*/ (0, exports._foldMap)(S.Ord),\n    reduceRight: /*#__PURE__*/ (0, exports._reduceRight)(S.Ord),\n    traverse: /*#__PURE__*/ (0, exports._traverse)(S.Ord),\n    sequence: sequence\n};\n/**\n * Use `getTraversableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: exports._map,\n    mapWithIndex: exports._mapWithIndex,\n    reduce: /*#__PURE__*/ (0, exports._reduce)(S.Ord),\n    foldMap: /*#__PURE__*/ (0, exports._foldMap)(S.Ord),\n    reduceRight: /*#__PURE__*/ (0, exports._reduceRight)(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ (0, exports._reduceWithIndex)(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ (0, exports._foldMapWithIndex)(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ (0, exports._reduceRightWithIndex)(S.Ord),\n    traverse: /*#__PURE__*/ (0, exports._traverse)(S.Ord),\n    sequence: sequence,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord)\n};\nvar _wither = /*#__PURE__*/ (0, Witherable_1.witherDefault)(exports.Traversable, exports.Compactable);\nvar _wilt = /*#__PURE__*/ (0, Witherable_1.wiltDefault)(exports.Traversable, exports.Compactable);\n/**\n * Use `getWitherable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: exports._map,\n    reduce: /*#__PURE__*/ (0, exports._reduce)(S.Ord),\n    foldMap: /*#__PURE__*/ (0, exports._foldMap)(S.Ord),\n    reduceRight: /*#__PURE__*/ (0, exports._reduceRight)(S.Ord),\n    traverse: /*#__PURE__*/ (0, exports._traverse)(S.Ord),\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: exports._filter,\n    filterMap: exports._filterMap,\n    partition: exports._partition,\n    partitionMap: exports._partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.insertAt = exports.upsertAt;\nfunction hasOwnProperty(k, r) {\n    return _.has.call(r === undefined ? this : r, k);\n}\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RR.Functor` instead of `RR.readonlyRecord`\n * (where `RR` is from `import RR from 'fp-ts/ReadonlyRecord'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyRecord = {\n    URI: exports.URI,\n    map: exports._map,\n    reduce: /*#__PURE__*/ (0, exports._reduce)(S.Ord),\n    foldMap: /*#__PURE__*/ (0, exports._foldMap)(S.Ord),\n    reduceRight: /*#__PURE__*/ (0, exports._reduceRight)(S.Ord),\n    traverse: /*#__PURE__*/ (0, exports._traverse)(S.Ord),\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: exports._filter,\n    filterMap: exports._filterMap,\n    partition: exports._partition,\n    partitionMap: exports._partitionMap,\n    mapWithIndex: exports._mapWithIndex,\n    reduceWithIndex: /*#__PURE__*/ (0, exports._reduceWithIndex)(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ (0, exports._foldMapWithIndex)(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ (0, exports._reduceRightWithIndex)(S.Ord),\n    filterMapWithIndex: exports._filterMapWithIndex,\n    filterWithIndex: exports._filterWithIndex,\n    partitionMapWithIndex: exports._partitionMapWithIndex,\n    partitionWithIndex: exports._partitionWithIndex,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord),\n    wither: _wither,\n    wilt: _wilt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = exports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.flatMap = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.reverse = exports.fromArray = exports.unappend = exports.unprepend = exports.range = exports.replicate = exports.makeBy = exports.fromReadonlyArray = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.appendW = exports.prepend = exports.prependW = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.insertAt = exports.snoc = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.chain = exports.intercalate = exports.updateLast = exports.modifyLast = exports.updateHead = exports.modifyHead = exports.matchRight = exports.matchLeft = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.let = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getUnionSemigroup = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = void 0;\nexports.concatW = concatW;\nexports.concat = concat;\nexports.group = group;\nexports.zip = zip;\nexports.groupSort = groupSort;\nexports.filter = filter;\nexports.cons = cons;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Ord_1 = require(\"./Ord\");\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexports.empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexports.isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\nexports.prependW = prependW;\n/**\n * @internal\n */\nexports.prepend = exports.prependW;\n/**\n * @internal\n */\nvar appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\nexports.appendW = appendW;\n/**\n * @internal\n */\nexports.append = exports.appendW;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if ((0, exports.isNonEmpty)(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nvar uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return as;\n        }\n        var out = [(0, exports.head)(as)];\n        var rest = (0, exports.tail)(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nvar sortBy = function (ords) {\n    if ((0, exports.isNonEmpty)(ords)) {\n        var M = (0, Ord_1.getMonoid)();\n        return (0, exports.sort)(ords.reduce(M.concat, M.empty));\n    }\n    return function_1.identity;\n};\nexports.sortBy = sortBy;\n/**\n * @since 2.11.0\n */\nvar union = function (E) {\n    var uniqE = (0, exports.uniq)(E);\n    return function (second) { return function (first) { return uniqE((0, function_1.pipe)(first, concat(second))); }; };\n};\nexports.union = union;\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nvar rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if ((0, exports.isOutOfBound)(Math.abs(m), as) || m === 0) {\n            return as;\n        }\n        if (m < 0) {\n            var _a = (0, exports.splitAt)(-m)(as), f = _a[0], s = _a[1];\n            return (0, function_1.pipe)(s, concat(f));\n        }\n        else {\n            return (0, exports.rotate)(m - len)(as);\n        }\n    };\n};\nexports.rotate = rotate;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category conversions\n * @since 2.5.0\n */\nvar fromReadonlyArray = function (as) {\n    return (0, exports.isNonEmpty)(as) ? _.some(as) : _.none;\n};\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar replicate = function (a) { return (0, exports.makeBy)(function () { return a; }); };\nexports.replicate = replicate;\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nvar range = function (start, end) {\n    return start <= end ? (0, exports.makeBy)(function (i) { return start + i; })(end - start + 1) : [start];\n};\nexports.range = range;\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [(0, exports.head)(as), (0, exports.tail)(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nvar unappend = function (as) { return [(0, exports.init)(as), (0, exports.last)(as)]; };\nexports.unappend = unappend;\n/**\n * @category conversions\n * @since 2.5.0\n */\nvar fromArray = function (as) { return (0, exports.fromReadonlyArray)(as.slice()); };\nexports.fromArray = fromArray;\nfunction concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nfunction concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.5.0\n */\nvar reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([(0, exports.last)(as)], as.slice(0, -1).reverse(), true);\n};\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return exports.empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.5.0\n */\nvar groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\nexports.groupBy = groupBy;\n/**\n * @since 2.5.0\n */\nvar sort = function (O) {\n    return function (as) {\n        return as.length === 1 ? as : as.slice().sort(O.compare);\n    };\n};\nexports.sort = sort;\n/**\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return (0, exports.modifyAt)(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) {\n    return function (as) {\n        return (0, exports.isOutOfBound)(i, as) ? _.none : _.some((0, exports.unsafeUpdateAt)(i, f(as[i]), as));\n    };\n};\nexports.modifyAt = modifyAt;\n/**\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return (0, exports.zipWith)(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    return function (as) {\n        var rest = (0, exports.tail)(as);\n        return (0, exports.isNonEmpty)(rest) ? (0, function_1.pipe)(rest, (0, exports.prependAll)(middle), (0, exports.prepend)((0, exports.head)(as))) : as;\n    };\n};\nexports.intersperse = intersperse;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) {\n    return function (as) {\n        var out = _.fromReadonlyNonEmptyArray(f(0, (0, exports.head)(as)));\n        for (var i = 1; i < as.length; i++) {\n            var bs = f(i, as[i]);\n            for (var j = 0; j < bs.length; j++) {\n                out.push(bs[j]);\n            }\n        }\n        return out;\n    };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nvar chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while ((0, exports.isNonEmpty)(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nvar splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [as, exports.empty] : [(0, function_1.pipe)(as.slice(1, m), (0, exports.prepend)((0, exports.head)(as))), as.slice(m)];\n    };\n};\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return (0, exports.chop)((0, exports.splitAt)(n)); };\nexports.chunksOf = chunksOf;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapWithIndex)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = (0, exports.foldMapWithIndex)(M);\n    return function (fa, f) { return (0, function_1.pipe)(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return (0, function_1.pipe)(fa, (0, exports.reduceRightWithIndex)(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseWithIndexF(f)); };\n};\n/**\n * @category constructors\n * @since 2.5.0\n */\nexports.of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as RNEA.ReadonlyNonEmptyArray<number>,\n *     RNEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) {\n    return function (as) {\n        return (0, function_1.pipe)(as, concatW(that()));\n    };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyNonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @since 2.5.0\n */\nvar ap = function (as) { return (0, exports.flatMap)(function (f) { return (0, function_1.pipe)(as, (0, exports.map)(f)); }); };\nexports.ap = ap;\n/**\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.flatMap((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.14.0\n */\nexports.flatMap = (0, function_1.dual)(2, function (ma, f) {\n    return (0, function_1.pipe)(ma, (0, exports.chainWithIndex)(function (i, a) { return f(a, i); }));\n});\n/**\n * @since 2.5.0\n */\nvar extend = function (f) {\n    return function (as) {\n        var next = (0, exports.tail)(as);\n        var out = [f(as)];\n        while ((0, exports.isNonEmpty)(next)) {\n            out.push(f(next));\n            next = (0, exports.tail)(next);\n        }\n        return out;\n    };\n};\nexports.extend = extend;\n/**\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/ (0, exports.extend)(function_1.identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/ (0, exports.flatMap)(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nvar map = function (f) {\n    return (0, exports.mapWithIndex)(function (_, a) { return f(a); });\n};\nexports.map = map;\n/**\n * @category mapping\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, (0, exports.head)(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return (0, exports.reduceWithIndex)(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nvar foldMap = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n        };\n    };\n};\nexports.foldMap = foldMap;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return (0, exports.reduceRightWithIndex)(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n    };\n};\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0]));\n        };\n    };\n};\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category folding\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n    };\n};\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = (0, exports.traverseWithIndex)(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) { return (0, exports.traverseWithIndex)(F)(function_1.SK); };\nexports.sequence = sequence;\n/**\n * @category sequencing\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, (0, exports.head)(as)), exports.of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return (0, function_1.pipe)(bs, (0, exports.append)(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexports.extract = _.head;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return (0, Eq_1.fromEquals)(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * @since 2.11.0\n */\nvar getUnionSemigroup = function (E) {\n    var unionE = (0, exports.union)(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\nexports.getUnionSemigroup = getUnionSemigroup;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: exports.flatMap\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexports.chainFirst = (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: exports.flatMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\nexports.tail = _.tail;\n/**\n * @since 2.5.0\n */\nvar last = function (as) { return as[as.length - 1]; };\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.5.0\n */\nvar min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.min = min;\n/**\n * @since 2.5.0\n */\nvar max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.max = max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\nexports.concatAll = concatAll;\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchLeft = function (f) {\n    return function (as) {\n        return f((0, exports.head)(as), (0, exports.tail)(as));\n    };\n};\nexports.matchLeft = matchLeft;\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nvar matchRight = function (f) {\n    return function (as) {\n        return f((0, exports.init)(as), (0, exports.last)(as));\n    };\n};\nexports.matchRight = matchRight;\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f((0, exports.head)(as))], (0, exports.tail)(as), true);\n    };\n};\nexports.modifyHead = modifyHead;\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateHead = function (a) { return (0, exports.modifyHead)(function () { return a; }); };\nexports.updateHead = updateHead;\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar modifyLast = function (f) {\n    return function (as) {\n        return (0, function_1.pipe)((0, exports.init)(as), (0, exports.append)(f((0, exports.last)(as))));\n    };\n};\nexports.modifyLast = modifyLast;\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nvar updateLast = function (a) { return (0, exports.modifyLast)(function () { return a; }); };\nexports.updateLast = updateLast;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nvar intercalate = function (S) {\n    var concatAllS = (0, exports.concatAll)(S);\n    return function (middle) { return (0, function_1.flow)((0, exports.intersperse)(middle), concatAllS); };\n};\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// legacy\n// -------------------------------------------------------------------------------------\n/**\n * Alias of `flatMap`.\n *\n * @category legacy\n * @since 2.5.0\n */\nexports.chain = exports.flatMap;\nfunction groupSort(O) {\n    var sortO = (0, exports.sort)(O);\n    var groupO = group(O);\n    return function (as) { return ((0, exports.isNonEmpty)(as) ? groupO(sortO(as)) : exports.empty); };\n}\nfunction filter(predicate) {\n    return (0, exports.filterWithIndex)(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) {\n    return function (as) {\n        return (0, exports.fromReadonlyArray)(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? (0, exports.prepend)(head) : (0, function_1.pipe)(tail, (0, exports.prepend)(head));\n}\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nvar snoc = function (init, end) { return (0, function_1.pipe)(init, concat([end])); };\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nvar insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some((0, exports.unsafeInsertAt)(i, a, as));\n    };\n};\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RNEA.Functor` instead of `RNEA.readonlyNonEmptyArray`\n * (where `RNEA` is from `import RNEA from 'fp-ts/ReadonlyNonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyNonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: exports.flatMap,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wiltDefault = wiltDefault;\nexports.witherDefault = witherDefault;\nexports.filterE = filterE;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\n"],"names":["__createBinding","o","m","k","k2","desc","__setModuleDefault","v","__importStar","mod","result","exports","ap","apFirst","apSecond","apS","getApplySemigroup","sequenceT","sequenceS","function_1","_","F","G","fa","fab","gab","ga","A","second","first","a","b","name","fb","_a","S","y","curried","f","n","acc","x","combined","i","tupleConstructors","c","d","e","getTupleConstructor","len","args","_i","fas","getRecordConstructor","keys","r","fr","tailRec","startWith","ab","__spreadArray","to","from","pack","l","ar","isNone","isSome","some","isLeft","ma","isRight","left","right","singleton","isNonEmpty","as","head","tail","fromReadonlyNonEmptyArray","liftNullable","onNullable","liftOption","onNone","flatMapNullable","M","self","flatMapOption","flatMapEither","flatMapIO","flatMapTask","flatMapReader","fromOption","fromPredicate","fromOptionK","chainOptionK","fromEitherK","chainEitherK","chainFirstEitherK","filterOrElse","tapEither","Chain_1","predicate","onFalse","fromOptionF","fromOptionKF","fromEitherKF","tapEitherM","fromEither","tapM","lookup","takeLeftWhile","spanLeft","dropLeftWhile","findFirst","findLast","zip","elem","comprehension","union","intersection","difference","every","Apply_1","Eq_1","FromEither_1","Functor_1","N","Ord_1","RNEA","Separated_1","Witherable_1","Zero_1","isEmpty","makeBy","replicate","matchW","onEmpty","onNonEmpty","matchLeftW","matchRightW","chainWithIndex","out","bs","j","scanLeft","scanRight","size","last","init","takeLeft","takeRight","as_1","spanLeftIndex","rest","dropLeft","dropRight","findIndex","findFirstMap","findLastMap","findLastIndex","insertAt","updateAt","deleteAt","modifyAt","reverse","rights","lefts","sort","O","zipWith","fc","unzip","prependAll","middle","intersperse","rotate","E","elemE_1","element","uniq","sortBy","ords","chop","g","splitAt","chunksOf","input","go","scope","concatW","unionE","unionE_1","elemE","xs","ys","intersectionE_1","differenceE_1","_map","_mapWithIndex","_ap","_filter","_filterMap","_partition","_partitionMap","_partitionWithIndex","predicateWithIndex","_partitionMapWithIndex","_alt","that","_reduce","_foldMap","foldMapM","_reduceRight","_reduceWithIndex","_foldMapWithIndex","foldMapWithIndexM","_reduceRightWithIndex","_filterMapWithIndex","_filterWithIndex","_extend","_traverse","traverseF","ta","_traverseWithIndex","traverseWithIndexF","_chainRecDepthFirst","_chainRecBreadthFirst","zero","altW","map","mapWithIndex","separate","fa_1","filter","filterMapWithIndex","optionB","filterMap","partition","partitionWithIndex","partitionMap","partitionMapWithIndex","filterWithIndex","extend","wa","foldMapWithIndex","reduce","foldMap","reduceWithIndex","reduceRight","reduceRightWithIndex","traverse","sequence","traverseWithIndex","fbs","wither","_witherF","_wither","wilt","_wiltF","_wilt","unfold","bb","mt","b_1","getShow","getSemigroup","getMonoid","getEq","getOrd","aLen","bLen","ordering","getUnionSemigroup","getUnionMonoid","getIntersectionSemigroup","intersectionE","getDifferenceMagma","differenceE","chainRecDepthFirst","todo","chainRecBreadthFirst","initial","initial_1","unsafeUpdateAt","unsafeDeleteAt","toArray","fromArray","intercalate","intercalateM","let_","toError","parseJSON","getValidation","Applicative_1","chainable","ChainRec_1","_bimap","_mapLeft","_chainRec","SE","SA","EL","EA","getCompactable","empty","getFilterable","compact","p","ob","getWitherable","F_","C","getApplicativeValidation","getAltValidation","me","ea","apW","bimap","mapLeft","onLeft","onRight","getOrElseW","_FromEither","_FlatMap","swap","orElseW","fromNullable","tryCatch","onThrow","tryCatchK","fromNullableK","chainNullableK","exists","traverseReadonlyNonEmptyArrayWithIndex","e_1","traverseReadonlyArrayWithIndex","traverseArray","s","onError","stringifyJSON","u","getValidationSemigroup","getValidationMonoid","MA","alt","fold","Or","min","max","constant","struct","semigroups","tuple","getObjectSemigroup","concatAllS","flap","bindTo","getFunctorComposition","asUnit","fga","asM","equalsDefault","compare","fromCompare","contramap_","contramap","ox","equals","lt","gt","leq","geq","clamp","minO","maxO","low","hi","between","ltO","gtO","strictOrd","date","filterFirst","filterSecond","endo","concatAll","getApplicativeMonoid","getApplicativeComposition","fgab","identity","flip","flow","increment","decrement","absurd","tupled","untupled","pipe","not","getBooleanAlgebra","B","getSemigroupM","getSemiring","getRing","R","apply","bc","cd","de","ef","fg","gh","ij","t","ret","SK","getEndomorphismMonoid","dual","arity","body","isDataFirst","chain","promap","compose","pipeable","fea","fbc","isFunctor","I","isContravariant","isFunctorWithIndex","isApply","isChain","isBifunctor","isExtend","isFoldable","isFoldableWithIndex","isAlt","isCompactable","isFilterable","isFilterableWithIndex","isProfunctor","isSemigroupoid","isMonadThrow","NEA","RA","copy","concat","group","groupSort","cons","isOutOfBound","prependW","appendW","end","unsafeInsertAt","_loop_1","rest_1","uniqE","range","start","unprepend","unappend","nea","groupBy","of","cs","abs","next","_b","rest_2","matchLeft","matchRight","modifyHead","updateHead","modifyLast","updateLast","sortO","groupO","snoc","fromEquals","eqs","key","chainFirst","tap","bind","isNumber","__assign","collect","toUnfoldable","pop","fromFoldable","fromFoldableMap","RR","Se","keys_","keysO","U","sas","deleteAtk","oa","fromEntries","unionM","_sequence","ks","ks_1","getFoldable","getFoldableWithIndex","getTraversable","getTraversableWithIndex","T","unionS","intersectionS","getSemigroupAny","getMonoidAny","getSemigroupAll","getMonoidAll","or","and","getRefinement","Predicate_1","Semigroup_1","getLeft","getRight","defaultSeparated","throwError","onSome","o_1","getOption","getFirstMonoid","getLastMonoid","separated","guard","P","unsafeCoerce","constTrue","constFalse","constNull","constUndefined","constVoid","hole","none","emptyReadonlyArray","emptyRecord","has","flatMap","URI","Traversable","Functor","Pointed","Apply","Applicative","Chain","Monad","Foldable","Bifunctor","Alt","Extend","ChainRec","MonadThrow","FromEither","foldW","match","getOrElse","apFirstW","apSecondW","flattenW","flatten","duplicate","chainOptionKW","filterOrElseW","orElse","toUnion","Do","bindW","apSW","ApT","traverseArrayWithIndex","sequenceArray","chainW","chainFirstW","either","getApplyMonoid","ReadonlyNonEmptyArray_1","isString","toUpperCase","toLowerCase","replace","searchValue","replaceValue","trim","trimLeft","trimRight","slice","split","separator","includes","searchString","position","startsWith","endsWith","isSubrecord","hasOwnProperty","fromRecord","toRecord","upsertAt","isSubrecordE_1","keysO_1","traverseWithIndexOF","traverseOF","changed","fromFoldableMapM","fka","reduceO","reduceRightO","reduceWithIndexO","foldMapWithIndexO","reduceRightWithIndexO","traverseWithIndexO","traverseO","reduceWithIndexO_1","foldMapWithIndexO_1","reduceRightWithIndexO_1","elements","isSubrecordE","fromReadonlyArray","wiltDefault","witherDefault","filterE","W","witherF"],"sourceRoot":""}